{
    "hint: %.*s\n": "提示：%.*s\n",
    "Cherry-picking is not possible because you have unmerged files.": "无法拣选，因为您有未合并的文件",
    "Committing is not possible because you have unmerged files.": "无法提交，因为您有未合并的文件。",
    "Merging is not possible because you have unmerged files.": "无法合并，因为您有未合并的文件。",
    "Pulling is not possible because you have unmerged files.": "无法拉取，因为您有未合并的文件。",
    "Reverting is not possible because you have unmerged files.": "无法回退，因为您有未合并的文件。",
    "It is not possible to %s because you have unmerged files.": "无法 %s，因为您有未合并的文件。",
    "Fix them up in the work tree, and then use 'git add/rm <file>'\nas appropriate to mark resolution and make a commit.": "请在工作区改正文件，然后酌情使用 'git add/rm <文件>' 命令标记\n解决方案并提交。",
    "Exiting because of an unresolved conflict.": "因为存在未解决的冲突而退出。",
    "You have not concluded your merge (MERGE_HEAD exists).": "您尚未结束您的合并（存在 MERGE_HEAD）。",
    "Please, commit your changes before merging.": "请在合并前先提交您的修改。",
    "Exiting because of unfinished merge.": "因为存在未完成的合并而退出。",
    "Note: checking out '%s'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by performing another checkout.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -b with the checkout command again. Example:\n\n  git checkout -b <new-branch-name>\n\n": "注意：正在检出 '%s'。\n\n您正处于分离头指针状态。您可以查看、做试验性的修改及提交，并且您可以通过另外\n的检出分支操作丢弃在这个状态下所做的任何提交。\n\n如果您想要通过创建分支来保留在此状态下所做的提交，您可以通过在检出命令添加\n参数 -b 来实现（现在或稍后）。例如：\n\n  git checkout -b <new-branch-name>\n\n",
    "unrecognized whitespace option '%s'": "未能识别的空白字符选项 '%s'",
    "unrecognized whitespace ignore option '%s'": "未能识别的空白字符忽略选项 '%s'",
    "--reject and --3way cannot be used together.": "--reject 和 --3say 不能同时使用。",
    "--cached and --3way cannot be used together.": "--cached 和 --3way 不能同时使用。",
    "--3way outside a repository": "--3way 在一个仓库之外",
    "--index outside a repository": "--index 在一个仓库之外",
    "--cached outside a repository": "--cached 在一个仓库之外",
    "Cannot prepare timestamp regexp %s": "无法准备时间戳正则表达式 %s",
    "regexec returned %d for input: %s": "regexec 返回 %d，输入为：%s",
    "unable to find filename in patch at line %d": "不能在补丁的第 %d 行找到文件名",
    "git apply: bad git-diff - expected /dev/null, got %s on line %d": "git apply：错误的 git-diff - 应为 /dev/null，但在第 %2$d 行得到 %1$s",
    "git apply: bad git-diff - inconsistent new filename on line %d": "git apply：错误的 git-diff - 第 %d 行上新文件名不一致",
    "git apply: bad git-diff - inconsistent old filename on line %d": "git apply：错误的 git-diff - 第 %d 行上旧文件名不一致",
    "git apply: bad git-diff - expected /dev/null on line %d": "git apply：错误的 git-diff - 第 %d 行处应为 /dev/null",
    "recount: unexpected line: %.*s": "recount：意外的行：%.*s",
    "patch fragment without header at line %d: %.*s": "第 %d 行的补丁片段没有头信息：%.*s",
    "git diff header lacks filename information when removing %d leading pathname component (line %d)_plural": "当移除 %d 个前导路径后 git diff 头缺乏文件名信息（第 %d 行）",
    "git diff header lacks filename information when removing %d leading pathname component (line %d)": "当移除 %d 个前导路径后 git diff 头缺乏文件名信息（第 %d 行）",
    "git diff header lacks filename information (line %d)": "git diff 的头信息中缺乏文件名信息（第 %d 行）",
    "new file depends on old contents": "新文件依赖旧内容",
    "deleted file still has contents": "删除的文件仍有内容",
    "corrupt patch at line %d": "补丁在第 %d 行损坏",
    "new file %s depends on old contents": "新文件 %s 依赖旧内容",
    "deleted file %s still has contents": "删除的文件 %s 仍有内容",
    "** warning: file %s becomes empty but is not deleted": "** 警告：文件 %s 成为空文件但并未删除",
    "corrupt binary patch at line %d: %.*s": "二进制补丁在第 %d 行损坏：%.*s",
    "unrecognized binary patch at line %d": "未能识别的二进制补丁位于第 %d 行",
    "patch with only garbage at line %d": "补丁文件的第 %d 行只有垃圾数据",
    "unable to read symlink %s": "无法读取符号链接 %s",
    "unable to open or read %s": "不能打开或读取 %s",
    "invalid start of line: '%c'": "无效的行首字符：'%c'",
    "Hunk #%d succeeded at %d (offset %d line)._plural": "块 #%d 成功应用于 %d（偏移 %d 行）",
    "Hunk #%d succeeded at %d (offset %d line).": "块 #%d 成功应用于 %d（偏移 %d 行）",
    "Context reduced to (%ld/%ld) to apply fragment at %d": "上下文减少到（%ld/%ld）以在第 %d 行应用补丁片段",
    "while searching for:\n%.*s": "当查询：\n%.*s",
    "missing binary patch data for '%s'": "缺失 '%s' 的二进制补丁数据",
    "cannot reverse-apply a binary patch without the reverse hunk to '%s'": "不能反向应用一个缺少到 '%s' 的反向数据块的二进制补丁",
    "cannot apply binary patch to '%s' without full index line": "不能在 '%s' 上应用没有完整索引行的二进制补丁",
    "the patch applies to '%s' (%s), which does not match the current contents.": "补丁应用到 '%s'（%s），但是和当前内容不匹配。",
    "the patch applies to an empty '%s' but it is not empty": "补丁应用到空文件 '%s'，但其并非空文件",
    "the necessary postimage %s for '%s' cannot be read": "无法读取 '%2$s' 必须的目标文件 %1$s",
    "binary patch does not apply to '%s'": "二进制补丁未应用到 '%s'",
    "binary patch to '%s' creates incorrect result (expecting %s, got %s)": "到 '%s' 的二进制补丁产生了不正确的结果（应为 %s，却为 %s）",
    "patch failed: %s:%ld": "打补丁失败：%s:%ld",
    "cannot checkout %s": "不能检出 %s",
    "failed to read %s": "无法读取 %s",
    "reading from '%s' beyond a symbolic link": "读取位于符号链接中的 '%s'",
    "path %s has been renamed/deleted": "路径 %s 已经被重命名/删除",
    "%s: does not exist in index": "%s：不存在于索引中",
    "%s: does not match index": "%s：和索引不匹配",
    "repository lacks the necessary blob to fall back on 3-way merge.": "仓库缺乏必要的数据对象以进行三方合并。",
    "Falling back to three-way merge...\n": "回落到三方合并...\n",
    "cannot read the current contents of '%s'": "无法读取 '%s' 的当前内容",
    "Failed to fall back on three-way merge...\n": "无法回落到三方合并...\n",
    "Applied patch to '%s' with conflicts.\n": "应用补丁到 '%s' 存在冲突。\n",
    "Applied patch to '%s' cleanly.\n": "成功应用补丁到 '%s'。\n",
    "removal patch leaves file contents": "移除补丁仍留下了文件内容",
    "%s: wrong type": "%s：错误类型",
    "%s has type %o, expected %o": "%s 的类型是 %o，应为 %o",
    "invalid path '%s'": "无效路径 '%s'",
    "%s: already exists in index": "%s：已经存在于索引中",
    "%s: already exists in working directory": "%s：已经存在于工作区中",
    "new mode (%o) of %s does not match old mode (%o)": "%2$s 的新模式（%1$o）和旧模式（%3$o）不匹配",
    "new mode (%o) of %s does not match old mode (%o) of %s": "%2$s 的新模式（%1$o）和 %4$s 的旧模式（%3$o）不匹配",
    "affected file '%s' is beyond a symbolic link": "受影响的文件 '%s' 位于符号链接中",
    "%s: patch does not apply": "%s：补丁未应用",
    "Checking patch %s...": "检查补丁 %s...",
    "sha1 information is lacking or useless for submodule %s": "子模组 %s 的 sha1 信息缺失或无效",
    "mode change for %s, which is not in current HEAD": "%s 的模式被改变，但它不在当前 HEAD 中",
    "sha1 information is lacking or useless (%s).": "sha1 信息缺失或无效（%s）。",
    "make_cache_entry failed for path '%s'": "对路径 '%s' 的 make_cache_entry 操作失败",
    "could not add %s to temporary index": "不能在临时索引中添加 %s",
    "could not write temporary index to %s": "不能把临时索引写入到 %s",
    "unable to remove %s from index": "不能从索引中移除 %s",
    "corrupt patch for submodule %s": "子模组 %s 损坏的补丁",
    "unable to stat newly created file '%s'": "不能枚举新建文件 '%s' 的状态",
    "unable to create backing store for newly created file %s": "不能为新建文件 %s 创建后端存储",
    "unable to add cache entry for %s": "无法为 %s 添加缓存条目",
    "failed to write to '%s'": "无法写入 '%s'",
    "closing file '%s'": "关闭文件 '%s'",
    "unable to write file '%s' mode %o": "不能写文件 '%s' 权限 %o",
    "Applied patch %s cleanly.": "成功应用补丁 %s。",
    "internal error": "内部错误",
    "Applying patch %%s with %d reject..._plural": "应用 %%s 个补丁，其中 %d 个被拒绝...",
    "Applying patch %%s with %d reject...": "应用 %%s 个补丁，其中 %d 个被拒绝...",
    "truncating .rej filename to %.*s.rej": "截短 .rej 文件名为 %.*s.rej",
    "cannot open %s": "不能打开 %s",
    "Hunk #%d applied cleanly.": "第 #%d 个片段成功应用。",
    "Rejected hunk #%d.": "拒绝第 #%d 个片段。",
    "Skipped patch '%s'.": "略过补丁 '%s'。",
    "unrecognized input": "未能识别的输入",
    "unable to read index file": "无法读取索引文件",
    "can't open patch '%s': %s": "不能打开补丁 '%s'：%s",
    "squelched %d whitespace error_plural": "抑制下仍有 %d 个空白字符误用",
    "squelched %d whitespace error": "抑制下仍有 %d 个空白字符误用",
    "%d line adds whitespace errors._plural": "%d 行有空白字符误用。",
    "%d line adds whitespace errors.": "%d 行有空白字符误用。",
    "%d line applied after fixing whitespace errors._plural": "修复空白错误后，应用了 %d 行。",
    "%d line applied after fixing whitespace errors.": "修复空白错误后，应用了 %d 行。",
    "Unable to write new index file": "无法写入新索引文件",
    "path": "路径",
    "don't apply changes matching the given path": "不要应用与给出路径向匹配的变更",
    "apply changes matching the given path": "应用与给出路径向匹配的变更",
    "num": "数字",
    "remove <num> leading slashes from traditional diff paths": "从传统的 diff 路径中移除指定数量的前导斜线",
    "ignore additions made by the patch": "忽略补丁中的添加的文件",
    "instead of applying the patch, output diffstat for the input": "不应用补丁，而是显示输入的差异统计（diffstat）",
    "show number of added and deleted lines in decimal notation": "以十进制数显示添加和删除的行数",
    "instead of applying the patch, output a summary for the input": "不应用补丁，而是显示输入的概要",
    "instead of applying the patch, see if the patch is applicable": "不应用补丁，而是查看补丁是否可应用",
    "make sure the patch is applicable to the current index": "确认补丁可以应用到当前索引",
    "apply a patch without touching the working tree": "应用补丁而不修改工作区",
    "accept a patch that touches outside the working area": "接受修改工作区之外文件的补丁",
    "also apply the patch (use with --stat/--summary/--check)": "还应用此补丁（与 --stat/--summary/--check 选项同时使用）",
    "attempt three-way merge if a patch does not apply": "如果一个补丁不能应用则尝试三方合并",
    "build a temporary index based on embedded index information": "创建一个临时索引基于嵌入的索引信息",
    "paths are separated with NUL character": "路径以 NUL 字符分隔",
    "ensure at least <n> lines of context match": "确保至少匹配 <n> 行上下文",
    "action": "动作",
    "detect new or modified lines that have whitespace errors": "检查新增和修改的行中间的空白字符滥用",
    "ignore changes in whitespace when finding context": "查找上下文时忽略空白字符的变更",
    "apply the patch in reverse": "反向应用补丁",
    "don't expect at least one line of context": "无需至少一行上下文",
    "leave the rejected hunks in corresponding *.rej files": "将拒绝的补丁片段保存在对应的 *.rej 文件中",
    "allow overlapping hunks": "允许重叠的补丁片段",
    "be verbose": "冗长输出",
    "tolerate incorrectly detected missing new-line at the end of file": "允许不正确的文件末尾换行符",
    "do not trust the line counts in the hunk headers": "不信任补丁片段的头信息中的行号",
    "root": "根目录",
    "prepend <root> to all filenames": "为所有文件名前添加 <根目录>",
    "git archive [<options>] <tree-ish> [<path>...]": "git archive [<选项>] <树或提交> [<路径>...]",
    "git archive --list": "git archive --list",
    "git archive --remote <repo> [--exec <cmd>] [<options>] <tree-ish> [<path>...]": "git archive --remote <仓库> [--exec <命令>] [<选项>] <树或提交> [<路径>...]",
    "git archive --remote <repo> [--exec <cmd>] --list": "git archive --remote <仓库> [--exec <命令>] --list",
    "pathspec '%s' did not match any files": "路径规格 '%s' 未匹配任何文件",
    "fmt": "格式",
    "archive format": "归档格式",
    "prefix": "前缀",
    "prepend prefix to each pathname in the archive": "为归档中每个路径名加上前缀",
    "file": "文件",
    "write the archive to this file": "归档写入此文件",
    "read .gitattributes in working directory": "读取工作区中的 .gitattributes",
    "report archived files on stderr": "在标准错误上报告归档文件",
    "store only": "只存储",
    "compress faster": "压缩速度更快",
    "compress better": "压缩效果更好",
    "list supported archive formats": "列出支持的归档格式",
    "repo": "仓库",
    "retrieve the archive from remote repository <repo>": "从远程仓库（<仓库>）提取归档文件",
    "command": "命令",
    "path to the remote git-upload-archive command": "远程 git-upload-archive 命令的路径",
    "Unexpected option --remote": "未知参数 --remote",
    "Option --exec can only be used together with --remote": "选项 --exec 只能和 --remote 同时使用",
    "Unexpected option --output": "未知参数 --output",
    "Unknown archive format '%s'": "未知归档格式 '%s'",
    "Argument not supported for format '%s': -%d": "参数不支持此格式 '%s'：-%d",
    "Negative patterns are ignored in git attributes\nUse '\\!' for literal leading exclamation.": "负值模版在 git attributes 中被忽略\n当字符串确实要以感叹号开始时，使用 '\\!'。",
    "Could not open file '%s'": "不能打开文件 '%s'",
    "Badly quoted content in file '%s': %s": "文件 '%s' 包含错误的引用格式：%s",
    "We cannot bisect more!\n": "我们无法进行更多的二分查找！\n",
    "Not a valid commit name %s": "不是一个有效的提交名 %s",
    "The merge base %s is bad.\nThis means the bug has been fixed between %s and [%s].\n": "合并基线 %s 是坏的。\n这意味着介于 %s 和 [%s] 之间的 bug 已经被修复。\n",
    "The merge base %s is new.\nThe property has changed between %s and [%s].\n": "合并基线 %s 是新的。\n介于 %s 和 [%s] 之间的属性已经被修改。\n",
    "The merge base %s is %s.\nThis means the first '%s' commit is between %s and [%s].\n": "合并基线 %s 是 %s。\n这意味着第一个 '%s' 提交位于 %s 和 [%s] 之间。\n",
    "Some %s revs are not ancestors of the %s rev.\ngit bisect cannot work properly in this case.\nMaybe you mistook %s and %s revs?\n": "一些 %s 版本不是 %s 版本的祖先。\n这种情况下 git 二分查找无法正常工作。\n您可能弄错了 %s 和 %s 版本？\n",
    "the merge base between %s and [%s] must be skipped.\nSo we cannot be sure the first %s commit is between %s and %s.\nWe continue anyway.": "介于 %s 和 [%s] 的合并基线一定被忽略了。\n所以我们无法确认第一个 %s 提交是否介于 %s 和 %s 之间。\n我们仍旧继续。",
    "Bisecting: a merge base must be tested\n": "二分查找中：合并基线必须是经过测试的\n",
    "a %s revision is needed": "需要一个 %s 版本",
    "could not create file '%s'": "不能创建文件 '%s'",
    "could not read file '%s'": "不能读取文件 '%s'",
    "reading bisect refs failed": "读取二分查找引用失败",
    "%s was both %s and %s\n": "%s 同时为 %s 和 %s\n",
    "No testable commit found.\nMaybe you started with bad path parameters?\n": "没有发现可测试的提交。\n可能您在运行时使用了错误的路径参数？\n",
    "(roughly %d step)_plural": "（大概 %d 步）",
    "(roughly %d step)": "（大概 %d 步）",
    "Bisecting: %d revision left to test after this %s\n_plural": "二分查找中：在此之后，还剩 %d 个版本待测试 %s\n",
    "Bisecting: %d revision left to test after this %s\n": "二分查找中：在此之后，还剩 %d 个版本待测试 %s\n",
    "\nAfter fixing the error cause you may try to fix up\nthe remote tracking information by invoking\n\"git branch --set-upstream-to=%s%s%s\".": "\n在修复错误后，您可以尝试修改远程跟踪分支，通过执行命令\n\"git branch --set-upstream-to=%s%s%s\" 。",
    "Not setting branch %s as its own upstream.": "未设置分支 %s 作为它自己的上游。",
    "Branch %s set up to track remote branch %s from %s by rebasing.": "分支 %1$s 设置为使用变基来跟踪来自 %3$s 的远程分支 %2$s。",
    "Branch %s set up to track remote branch %s from %s.": "分支 %1$s 设置为跟踪来自 %3$s 的远程分支 %2$s。",
    "Branch %s set up to track local branch %s by rebasing.": "分支 %s 设置为使用变基来跟踪本地分支 %s。",
    "Branch %s set up to track local branch %s.": "分支 %s 设置为跟踪本地分支 %s。",
    "Branch %s set up to track remote ref %s by rebasing.": "分支 %s 设置为使用变基来跟踪远程引用 %s。",
    "Branch %s set up to track remote ref %s.": "分支 %s 设置为跟踪远程引用 %s。",
    "Branch %s set up to track local ref %s by rebasing.": "分支 %s 设置为使用变基来跟踪本地引用 %s。",
    "Branch %s set up to track local ref %s.": "分支 %s 设置为跟踪本地引用 %s。",
    "Unable to write upstream branch configuration": "无法写入上游分支配置",
    "Not tracking: ambiguous information for ref %s": "未跟踪：引用 %s 有歧义",
    "'%s' is not a valid branch name.": "'%s' 不是一个有效的分支名称。",
    "A branch named '%s' already exists.": "一个分支名 '%s' 已经存在。",
    "Cannot force update the current branch.": "无法强制更新当前分支。",
    "Cannot setup tracking information; starting point '%s' is not a branch.": "无法设置跟踪信息；起始点 '%s' 不是一个分支。",
    "the requested upstream branch '%s' does not exist": "请求的上游分支 '%s' 不存在",
    "\nIf you are planning on basing your work on an upstream\nbranch that already exists at the remote, you may need to\nrun \"git fetch\" to retrieve it.\n\nIf you are planning to push out a new local branch that\nwill track its remote counterpart, you may want to use\n\"git push -u\" to set the upstream config as you push.": "\n如果您正计划基于远程一个现存的上游分支开始你的工作，\n您可能需要执行 \"git fetch\" 来获取分支。\n\n如果您正计划推送一个能与对应远程分支建立跟踪的新的本地分支，\n您可能需要使用 \"git push -u\" 推送分支并配置和上游的关联。",
    "Not a valid object name: '%s'.": "不是一个有效的对象名：'%s'。",
    "Ambiguous object name: '%s'.": "歧义的对象名：'%s'。",
    "Not a valid branch point: '%s'.": "无效的分支点：'%s'。",
    "'%s' is already checked out at '%s'": "'%s' 已经检出到 '%s'",
    "HEAD of working tree %s is not updated": "工作区 %s 的 HEAD 指向没有被更新",
    "'%s' does not look like a v2 bundle file": "'%s' 不像是一个 v2 版本的包文件",
    "unrecognized header: %s%s (%d)": "未能识别的包头：%s%s (%d)",
    "could not open '%s'": "不能打开 '%s'",
    "Repository lacks these prerequisite commits:": "仓库中缺少这些必备的提交：",
    "revision walk setup failed": "版本遍历设置失败",
    "The bundle contains this ref:_plural": "这个包中含有这个引用：",
    "The bundle contains this ref:": "这个包中含有 %d 个引用：",
    "The bundle records a complete history.": "这个包记录一个完整历史。",
    "The bundle requires this ref:_plural": "这个包需要这个引用：",
    "The bundle requires this ref:": "这个包需要 %d 个引用：",
    "Could not spawn pack-objects": "不能生成 pack-objects 进程",
    "pack-objects died": "pack-objects 终止",
    "rev-list died": "rev-list 终止",
    "ref '%s' is excluded by the rev-list options": "引用 '%s' 被 rev-list 选项排除",
    "unrecognized argument: %s": "未能识别的参数：%s",
    "Refusing to create empty bundle.": "不能创建空包。",
    "cannot create '%s'": "不能创建 '%s'",
    "index-pack died": "index-pack 终止",
    "invalid color value: %.*s": "无效的颜色值：%.*s",
    "could not parse %s": "不能解析 %s",
    "%s %s is not a commit!": "%s %s 不是一个提交!",
    "Warning: commit message did not conform to UTF-8.\nYou may want to amend it after fixing the message, or set the config\nvariable i18n.commitencoding to the encoding your project uses.\n": "警告：提交说明不符合 UTF-8 字符编码。\n您可以通过修补提交来改正提交说明，或者将配置变量 i18n.commitencoding\n设置为您项目所用的字符编码。\n",
    "memory exhausted": "内存耗尽",
    "bad config line %d in blob %s": "数据对象 %2$s 中错误的配置行 %1$d",
    "bad config line %d in file %s": "文件 %2$s 中错误的配置行 %1$d",
    "bad config line %d in standard input": "标准输入中错误的配置行 %d",
    "bad config line %d in submodule-blob %s": "子模组数据对象 %2$s 中错误的配置行 %1$d",
    "bad config line %d in command line %s": "命令行 %2$s 中错误的配置行 %1$d",
    "bad config line %d in %s": "在 %2$s 中错误的配置行 %1$d",
    "out of range": "超出范围",
    "invalid unit": "无效的单位",
    "bad numeric config value '%s' for '%s': %s": "配置变量 '%2$s' 的数字取值 '%1$s' 设置错误：%3$s",
    "bad numeric config value '%s' for '%s' in blob %s: %s": "数据对象 %3$s 中配置变量 '%2$s' 错误的取值 '%1$s'：%4$s",
    "bad numeric config value '%s' for '%s' in file %s: %s": "文件 %3$s 中配置变量 '%2$s' 错误的取值 '%1$s'：%4$s",
    "bad numeric config value '%s' for '%s' in standard input: %s": "标准输入中配置变量 '%2$s' 错误的取值 '%1$s'：%3$s",
    "bad numeric config value '%s' for '%s' in submodule-blob %s: %s": "子模组数据 %3$s 中配置变量 '%2$s' 错误的取值 '%1$s'：%4$s",
    "bad numeric config value '%s' for '%s' in command line %s: %s": "命令行 %3$s 中配置变量 '%2$s' 错误的取值 '%1$s'：%4$s",
    "bad numeric config value '%s' for '%s' in %s: %s": "在 %3$s 中配置变量 '%2$s' 错误的取值 '%1$s'：%4$s",
    "failed to expand user dir in: '%s'": "无法扩展 '%s' 中的用户目录",
    "bad zlib compression level %d": "错误的 zlib 压缩级别 %d",
    "invalid mode for object creation: %s": "无效的对象创建模式：%s",
    "bad pack compression level %d": "错误的打包压缩级别 %d",
    "unable to parse command-line config": "无法解析命令行中的配置",
    "unknown error occurred while reading the configuration files": "在读取配置文件时遇到未知错误",
    "unable to parse '%s' from command-line config": "无法解析命令行配置中的 '%s'",
    "bad config variable '%s' in file '%s' at line %d": "在文件 '%2$s' 的第 %3$d 行发现错误的配置变量 '%1$s'",
    "%s has multiple values": "%s 有多个取值",
    "fstat on %s failed": "在 %s 上执行 fstat 失败",
    "could not set '%s' to '%s'": "不能设置 '%s' 为 '%s'",
    "could not unset '%s'": "不能取消设置 '%s'",
    "The remote end hung up upon initial contact": "远端在连接发起时即挂断",
    "Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists.": "无法读取远程仓库。\n\n请确认您有正确的访问权限并且仓库存在。",
    "Checking connectivity": "检查连接中",
    "Could not run 'git rev-list'": "不能执行 'git rev-list'",
    "failed write to rev-list": "无法写入 rev-list",
    "failed to close rev-list's stdin": "无法关闭 rev-list 的标准输入",
    "CRLF will be replaced by LF in %s.\nThe file will have its original line endings in your working directory.": "文件 %s 中的 CRLF 将被 LF 替换。\n在工作区中该文件仍保持原有的换行符。",
    "CRLF would be replaced by LF in %s.": "文件 %s 中的 CRLF 将被 LF 替换。",
    "LF will be replaced by CRLF in %s.\nThe file will have its original line endings in your working directory.": "文件 %s 中的 LF 将被 CRLF 替换。\n在工作区中该文件仍保持原有的换行符。",
    "LF would be replaced by CRLF in %s": "文件 %s 中的 LF 将被 CRLF 替换",
    "in the future": "在将来",
    "%lu second ago_plural": "%lu 秒钟前",
    "%lu second ago": "%lu 秒钟前",
    "%lu minute ago_plural": "%lu 分钟前",
    "%lu minute ago": "%lu 分钟前",
    "%lu hour ago_plural": "%lu 小时前",
    "%lu hour ago": "%lu 小时前",
    "%lu day ago_plural": "%lu 天前",
    "%lu day ago": "%lu 天前",
    "%lu week ago_plural": "%lu 周前",
    "%lu week ago": "%lu 周前",
    "%lu month ago_plural": "%lu 个月前",
    "%lu month ago": "%lu 个月前",
    "%lu year_plural": "%lu 年",
    "%lu year": "%lu 年",
    "%s, %lu month ago_plural": "%s %lu 个月前",
    "%s, %lu month ago": "%s %lu 个月前",
    "%lu year ago_plural": "%lu 年前",
    "%lu year ago": "%lu 年前",
    "failed to read orderfile '%s'": "无法读取排序文件 '%s'",
    "Performing inexact rename detection": "正在进行非精确的重命名检测",
    "option '%s' requires a value": "选项 '%s'  需要一个值",
    "  Failed to parse dirstat cut-off percentage '%s'\n": "  无法解析 dirstat 截止（cut-off）百分比 '%s'\n",
    "  Unknown dirstat parameter '%s'\n": "  未知的 dirstat 参数 '%s'\n",
    "Unknown value for 'diff.submodule' config variable: '%s'": "配置变量 'diff.submodule' 未知的取值：'%s'",
    "Found errors in 'diff.dirstat' config variable:\n%s": "发现配置变量 'diff.dirstat' 中的错误：\n%s",
    "external diff died, stopping at %s": "外部 diff 退出，停止在 %s",
    "--name-only, --name-status, --check and -s are mutually exclusive": "--name-only、--name-status、--check 和 -s 是互斥的",
    "--follow requires exactly one pathspec": "--follow 明确要求只跟一个路径规格",
    "Failed to parse --dirstat/-X option parameter:\n%s": "无法解析 --dirstat/-X 选项的参数：\n%s",
    "Failed to parse --submodule option parameter: '%s'": "无法解析 --submodule 选项的参数：'%s'",
    "inexact rename detection was skipped due to too many files.": "因为文件太多，略过不严格的重命名检查。",
    "only found copies from modified paths due to too many files.": "因为文件太多，只在修改的路径中查找拷贝。",
    "you may want to set your %s variable to at least %d and retry the command.": "您可能想要将变量 %s 设置为至少 %d 并再次执行此命令。",
    "failed to get kernel name and information": "无法获得内核名称和信息",
    "Untracked cache is disabled on this system or location.": "缓存未跟踪文件在本系统或位置中被禁用。",
    "could not migrate git directory from '%s' to '%s'": "不能从 '%s' 迁移 git 目录到 '%s'",
    "git fetch-pack: expected shallow list": "git fetch-pack：应为 shallow 列表",
    "git fetch-pack: expected ACK/NAK, got EOF": "git fetch-pack：应为 ACK/NAK，却得到 EOF",
    "git fetch-pack: expected ACK/NAK, got '%s'": "git fetch-pack：应为 ACK/NAK，却得到 '%s'",
    "--stateless-rpc requires multi_ack_detailed": "--stateless-rpc 需要 multi_ack_detailed",
    "invalid shallow line: %s": "无效的 shallow 信息：%s",
    "invalid unshallow line: %s": "无效的 unshallow 信息：%s",
    "object not found: %s": "对象未找到：%s",
    "error in object: %s": "对象中出错：%s",
    "no shallow found: %s": "未发现 shallow：%s",
    "expected shallow/unshallow, got %s": "应为 shallow/unshallow，却得到 %s",
    "got %s %d %s": "得到 %s %d %s",
    "invalid commit %s": "无效提交 %s",
    "giving up": "放弃",
    "done": "完成",
    "got %s (%d) %s": "得到 %s (%d) %s",
    "Marking %s as complete": "标记 %s 为完成",
    "already have %s (%s)": "已经有 %s（%s）",
    "fetch-pack: unable to fork off sideband demultiplexer": "fetch-pack：无法派生 sideband 多路输出",
    "protocol error: bad pack header": "协议错误：坏的包头",
    "fetch-pack: unable to fork off %s": "fetch-pack：无法派生进程 %s",
    "%s failed": "%s 失败",
    "error in sideband demultiplexer": "sideband 多路输出出错",
    "Server does not support shallow clients": "服务器不支持 shalllow 客户端",
    "Server supports multi_ack_detailed": "服务器支持 multi_ack_detailed",
    "Server supports no-done": "服务器支持 no-done",
    "Server supports multi_ack": "服务器支持 multi_ack",
    "Server supports side-band-64k": "服务器支持 side-band-64k",
    "Server supports side-band": "服务器支持 side-band",
    "Server supports allow-tip-sha1-in-want": "服务器支持 allow-tip-sha1-in-want",
    "Server supports allow-reachable-sha1-in-want": "服务器支持 allow-reachable-sha1-in-want",
    "Server supports ofs-delta": "服务器支持 ofs-delta",
    "Server version is %.*s": "服务器版本 %.*s",
    "Server does not support --shallow-since": "服务器不支持 --shallow-since",
    "Server does not support --shallow-exclude": "服务器不支持 --shallow-exclude",
    "Server does not support --deepen": "服务器不支持 --deepen",
    "no common commits": "没有共同的提交",
    "git fetch-pack: fetch failed.": "git fetch-pack：获取失败。",
    "no matching remote head": "没有匹配的远程分支",
    "gpg failed to sign the data": "gpg 无法为数据签名",
    "could not create temporary file": "不能创建临时文件",
    "failed writing detached signature to '%s'": "无法将分离式签名写入 '%s'",
    "ignore invalid color '%.*s' in log.graphColors": "忽略 log.graphColors 中无效的颜色 '%.*s'",
    "'%s': unable to read %s": "'%s'：无法读取 %s",
    "failed to stat '%s'": "无法枚举 '%s' 状态",
    "'%s': short read": "'%s'：读取不完整",
    "available git commands in '%s'": "在 '%s' 下可用的 git 命令",
    "git commands available from elsewhere on your $PATH": "在 $PATH 路径中的其他地方可用的 git 命令",
    "These are common Git commands used in various situations:": "这些是各种场合常见的 Git 命令：",
    "'%s' appears to be a git command, but we were not\nable to execute it. Maybe git-%s is broken?": "'%s' 像是一个 git 命令，但却无法运行。\n可能是 git-%s 受损？",
    "Uh oh. Your system reports no Git commands at all.": "唉呀，您的系统中未发现 Git 命令。",
    "WARNING: You called a Git command named '%s', which does not exist.\nContinuing under the assumption that you meant '%s'": "警告：您运行一个不存在的 Git 命令 '%s'。继续执行假定您要运行的\n是 '%s'",
    "in %0.1f seconds automatically...": "在 %0.1f 秒钟后自动运行...",
    "git: '%s' is not a git command. See 'git --help'.": "git：'%s' 不是一个 git 命令。参见 'git --help'。",
    "\nDid you mean this?_plural": "\n您指的是这个么？",
    "\nDid you mean this?": "\n您指的是这其中的某一个么？",
    "%s: %s - %s": "%s：%s - %s",
    "\n*** Please tell me who you are.\n\nRun\n\n  git config --global user.email \"you@example.com\"\n  git config --global user.name \"Your Name\"\n\nto set your account's default identity.\nOmit --global to set the identity only in this repository.\n\n": "\n*** 请告诉我你是谁。\n\n运行\n\n  git config --global user.email \"you@example.com\"\n  git config --global user.name \"Your Name\"\n\n来设置您账号的缺省身份标识。\n如果仅在本仓库设置身份标识，则省略 --global 参数。\n",
    "Unable to create '%s.lock': %s.\n\nAnother git process seems to be running in this repository, e.g.\nan editor opened by 'git commit'. Please make sure all processes\nare terminated then try again. If it still fails, a git process\nmay have crashed in this repository earlier:\nremove the file manually to continue.": "无法创建 '%s.lock'：%s。\n\n似乎另外一个 git 进程在这个仓库中运行，例如：'git commit' 命令打\n开了一个编辑器。请确认所有进程都已经关闭然后重试。如果仍然报错，\n可能之前有一个 git 进程在这个仓库中异常退出：\n手动删除这个文件再继续。",
    "Unable to create '%s.lock': %s": "不能创建 '%s.lock'：%s",
    "failed to read the cache": "无法读取缓存",
    "unable to write new index file": "无法写新的索引文件",
    "(bad commit)\n": "（坏提交）\n",
    "addinfo_cache failed for path '%s'": "为路径 '%s' addinfo_cache 失败",
    "error building trees": "无法创建树",
    "failed to create path '%s'%s": "无法创建路径 '%s'%s",
    "Removing %s to make room for subdirectory\n": "删除 %s 以便为子目录留出空间\n",
    ": perhaps a D/F conflict?": "：可能是一个目录/文件冲突？",
    "refusing to lose untracked file at '%s'": "拒绝丢弃 '%s' 中的未跟踪文件",
    "cannot read object %s '%s'": "不能读取对象 %s '%s'",
    "blob expected for %s '%s'": "%s '%s' 应为数据对象",
    "failed to open '%s': %s": "无法打开 '%s'：%s",
    "failed to symlink '%s': %s": "无法创建符号链接 '%s'：%s",
    "do not know what to do with %06o %s '%s'": "不知道如何处理 %06o %s '%s'",
    "Failed to execute internal merge": "无法执行内部合并",
    "Unable to add %s to database": "不能添加 %s 至对象库",
    "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left in tree.": "冲突（%1$s/删除）：%2$s 在 %3$s 中被删除，在 %5$s 中被 %4$s。%7$s 在 %6$s 中的版本被保留。",
    "CONFLICT (%s/delete): %s deleted in %s and %s in %s. Version %s of %s left in tree at %s.": "冲突（%1$s/删除）：%2$s 在 %3$s 中被删除，在 %5$s 中被 %4$s。%7$s 在 %6$s 中的版本保留于 %8$s 中。",
    "rename": "重命名",
    "renamed": "重命名",
    "%s is a directory in %s adding as %s instead": "%s 是 %s 中的一个目录而以 %s 为名被添加",
    "CONFLICT (rename/rename): Rename \"%s\"->\"%s\" in branch \"%s\" rename \"%s\"->\"%s\" in \"%s\"%s": "冲突（重命名/重命名）：在分支 \"%3$s\" 中重命名 \"%1$s\"->\"%2$s\"，在分支 \"%6$s\" 中重命名 \"%4$s\"->\"%5$s\"%7$s",
    " (left unresolved)": "（留下未解决）",
    "CONFLICT (rename/rename): Rename %s->%s in %s. Rename %s->%s in %s": "冲突（重命名/重命名）：在 %3$s 中重命名 %1$s->%2$s，在 %6$s 中重命名 %4$s->%5$s",
    "Renaming %s to %s and %s to %s instead": "而是重命名 %s 至 %s，以及 %s 至 %s",
    "CONFLICT (rename/add): Rename %s->%s in %s. %s added in %s": "冲突（重命名/添加）：在 %3$s 中重命名 %1$s->%2$s。在 %5$s 中添加 %4$s",
    "Adding merged %s": "添加合并后的 %s",
    "Adding as %s instead": "而是以 %s 为名添加",
    "cannot read object %s": "不能读取对象 %s",
    "object %s is not a blob": "对象 %s 不是一个数据对象",
    "modify": "修改",
    "modified": "修改",
    "content": "内容",
    "add/add": "添加/添加",
    "Skipped %s (merged same as existing)": "略过 %s（已经做过相同合并）",
    "Auto-merging %s": "自动合并 %s",
    "submodule": "子模组",
    "CONFLICT (%s): Merge conflict in %s": "冲突（%s）：合并冲突于 %s",
    "Removing %s": "删除 %s",
    "file/directory": "文件/目录",
    "directory/file": "目录/文件",
    "CONFLICT (%s): There is a directory with name %s in %s. Adding %s as %s": "冲突（%1$s）：在 %3$s 中有一个名为 %2$s 的目录。以 %5$s 为名添加 %4$s",
    "Adding %s": "添加 %s",
    "Already up-to-date!": "已经是最新的！",
    "merging of trees %s and %s failed": "无法合并树 %s 和 %s",
    "Merging:": "合并：",
    "found %u common ancestor:_plural": "发现 %u 个共同祖先：",
    "found %u common ancestor:": "发现 %u 个共同祖先：",
    "merge returned no commit": "合并未返回提交",
    "Could not parse object '%s'": "不能解析对象 '%s'",
    "Unable to write index.": "不能写入索引。",
    "You have not concluded your previous notes merge (%s exists).\nPlease, use 'git notes merge --commit' or 'git notes merge --abort' to commit/abort the previous merge before you start a new notes merge.": "您的前一次注释合并尚未结束（存在 %s）。\n在开始一个新的注释合并之前，请使用 'git notes merge --commit' 或者 'git notes merge --abort' 来提交/终止前一次合并。",
    "You have not concluded your notes merge (%s exists).": "您尚未结束注释合并（存在 %s）。",
    "Cannot commit uninitialized/unreferenced notes tree": "不能提交未初始化/未引用的注解树",
    "Bad notes.rewriteMode value: '%s'": "坏的 notes.rewriteMode 值：'%s'",
    "Refusing to rewrite notes in %s (outside of refs/notes/)": "拒绝向 %s（在 refs/notes/ 之外）写入注解",
    "Bad %s value: '%s'": "坏的 %s 值：'%s'",
    "unable to parse object: %s": "不能解析对象：%s",
    "...": "...",
    "usage: %s": "用法：%s",
    "   or: %s": "  或：%s",
    "    %s": "    %s",
    "-NUM": "-数字",
    "malformed object name '%s'": "非法的对象名 '%s'",
    "Could not make %s writable by group": "不能设置 %s 为组可写",
    "global 'glob' and 'noglob' pathspec settings are incompatible": "全局的 'glob' 和 'noglob' 路径规格设置不兼容",
    "global 'literal' pathspec setting is incompatible with all other global pathspec settings": "全局的 'literal' 路径规格设置和其它的全局路径规格设置不兼容",
    "invalid parameter for pathspec magic 'prefix'": "路径规格包含无效的神奇前缀",
    "Invalid pathspec magic '%.*s' in '%s'": "在路径规格 '%3$s' 中无效的神奇前缀 '%2$.*1$s'",
    "Missing ')' at the end of pathspec magic in '%s'": "路径规格 '%s' 的神奇前缀结尾少了一个 ')'",
    "Unimplemented pathspec magic '%c' in '%s'": "路径规格 '%2$s' 中包含未实现的神奇前缀 '%1$c'",
    "Pathspec '%s' is in submodule '%.*s'": "路径规格 '%s' 在子模组 '%.*s' 中",
    "%s: 'literal' and 'glob' are incompatible": "%s：'literal' 和 'glob' 不兼容",
    "%s: '%s' is outside repository": "%s：'%s' 在仓库之外",
    "'%s' (mnemonic: '%c')": "'%s'（助记符：'%c'）",
    "%s: pathspec magic not supported by this command: %s": "%s：路径规格神奇前缀不被此命令支持：%s",
    "empty strings as pathspecs will be made invalid in upcoming releases. please use . instead if you meant to match all paths": "在下一个版本中，使用空字符串作为路径规格将被视作非法。如果要匹配所有路径，\n请代之以 .",
    "pathspec '%s' is beyond a symbolic link": "路径规格 '%s' 位于符号链接中",
    "There is nothing to exclude from by :(exclude) patterns.\nPerhaps you forgot to add either ':/' or '.' ?": "没有为 :(exclude) 模式提供要忽略的内容。也许您忘记了\n添加 ':/' 或 '.' ？",
    "unable to parse --pretty format": "不能解析 --pretty 格式",
    "index.version set, but the value is invalid.\nUsing version %i": "设置了 index.version，但是取值无效。\n使用版本 %i",
    "GIT_INDEX_VERSION set, but the value is invalid.\nUsing version %i": "设置了 GIT_INDEX_VERSION，但是取值无效。\n使用版本 %i",
    "Could not open '%s' for writing": "无法打开 '%s' 进行写入",
    "could not delete reference %s: %s": "无法删除引用 %s：%s",
    "could not delete references: %s": "无法删除引用：%s",
    "could not remove reference %s": "无法删除引用 %s",
    "expected format: %%(color:<color>)": "期望的格式：%%(color:<color>)",
    "unrecognized color: %%(color:%s)": "未能识别的颜色：%%(color:%s)",
    "unrecognized format: %%(%s)": "未能识别的格式：%%(%s)",
    "%%(body) does not take arguments": "%%(body) 不带参数",
    "%%(subject) does not take arguments": "%%(subject) 不带参数",
    "%%(trailers) does not take arguments": "%%(trailers) 不带参数",
    "positive value expected contents:lines=%s": "要为 contents:lines=%s 提供一个正数",
    "unrecognized %%(contents) argument: %s": "未能识别的 %%(contents) 参数：%s",
    "unrecognized %%(objectname) argument: %s": "未能识别的 %%(objectname) 参数：%s",
    "expected format: %%(align:<width>,<position>)": "期望的格式：%%(align:<width>,<position>)",
    "unrecognized position:%s": "未能识别的位置：%s",
    "unrecognized width:%s": "未能识别的宽度：%s",
    "unrecognized %%(align) argument: %s": "未能识别的 %%(align) 参数：%s",
    "positive width expected with the %%(align) atom": "元素 %%(align) 需要一个正数的宽度",
    "malformed field name: %.*s": "非法的字段名：%.*s",
    "unknown field name: %.*s": "未知的字段名：%.*s",
    "format: %%(end) atom used without corresponding atom": "格式：使用了 %%(end) 元素却没有它的对应元素",
    "malformed format string %s": "非法的格式化字符串 %s",
    ":strip= requires a positive integer argument": ":strip= 需要一个正整型参数",
    "ref '%s' does not have %ld components to :strip": "引用 '%s' 未提供用于 :strip 的 %ld 个组件",
    "unknown %.*s format %s": "未知的 %.*s 格式 %s",
    "missing object %s for %s": "缺失 %2$s 的对象 %1$s",
    "parse_object_buffer failed on %s for %s": "parse_object_buffer 失败于 %2$s 的 %1$s",
    "malformed object at '%s'": "非法的对象于 '%s'",
    "ignoring ref with broken name %s": "忽略带有错误名称 %s 的引用",
    "ignoring broken ref %s": "忽略损坏的引用 %s",
    "format: %%(end) atom missing": "格式：缺少 %%(end) 元素",
    "malformed object name %s": "非法的对象名 %s",
    "Cannot fetch both %s and %s to %s": "不能同时获取 %s 和 %s 至 %s",
    "%s usually tracks %s, not %s": "%s 通常跟踪 %s，而非 %s",
    "%s tracks both %s and %s": "%s 同时跟踪 %s 和 %s",
    "Internal error": "内部错误",
    "HEAD does not point to a branch": "HEAD 没有指向一个分支",
    "no such branch: '%s'": "没有此分支：'%s'",
    "no upstream configured for branch '%s'": "尚未给分支 '%s' 设置上游",
    "upstream branch '%s' not stored as a remote-tracking branch": "上游分支 '%s' 没有存储为一个远程跟踪分支",
    "push destination '%s' on remote '%s' has no local tracking branch": "推送目标 '%s' 至远程 '%s' 没有本地跟踪分支",
    "branch '%s' has no remote for pushing": "分支 '%s' 没有设置要推送的远程服务器",
    "push refspecs for '%s' do not include '%s'": "向 '%s' 推送引用规格未包含 '%s'",
    "push has no destination (push.default is 'nothing')": "推送无目标（push.default 是 'nothing'）",
    "cannot resolve 'simple' push to a single destination": "无法解析 'simple' 推送至一个单独的目标",
    "Your branch is based on '%s', but the upstream is gone.\n": "您的分支基于 '%s'，但此上游分支已经不存在。\n",
    "  (use \"git branch --unset-upstream\" to fixup)\n": "  （使用 \"git branch --unset-upstream\" 来修复）\n",
    "Your branch is up-to-date with '%s'.\n": "您的分支与上游分支 '%s' 一致。\n",
    "Your branch is ahead of '%s' by %d commit.\n_plural": "您的分支领先 '%s' 共 %d 个提交。\n",
    "Your branch is ahead of '%s' by %d commit.\n": "您的分支领先 '%s' 共 %d 个提交。\n",
    "  (use \"git push\" to publish your local commits)\n": "  （使用 \"git push\" 来发布您的本地提交）\n",
    "Your branch is behind '%s' by %d commit, and can be fast-forwarded.\n_plural": "您的分支落后 '%s' 共 %d 个提交，并且可以快进。\n",
    "Your branch is behind '%s' by %d commit, and can be fast-forwarded.\n": "您的分支落后 '%s' 共 %d 个提交，并且可以快进。\n",
    "  (use \"git pull\" to update your local branch)\n": "  （使用 \"git pull\" 来更新您的本地分支）\n",
    "Your branch and '%s' have diverged,\nand have %d and %d different commit each, respectively.\n_plural": "您的分支和 '%s' 出现了偏离，\n并且分别有 %d 和 %d 处不同的提交。\n",
    "Your branch and '%s' have diverged,\nand have %d and %d different commit each, respectively.\n": "您的分支和 '%s' 出现了偏离，\n并且分别有 %d 和 %d 处不同的提交。\n",
    "  (use \"git pull\" to merge the remote branch into yours)\n": "  （使用 \"git pull\" 来合并远程分支）\n",
    "your current branch appears to be broken": "您的当前分支好像被损坏",
    "your current branch '%s' does not have any commits yet": "您的当前分支 '%s' 尚无任何提交",
    "--first-parent is incompatible with --bisect": "--first-parent 与 --bisect 不兼容",
    "open /dev/null failed": "不能打开 /dev/null",
    "dup2(%d,%d) failed": "不能调用 dup2(%d,%d)",
    "failed to sign the push certificate": "无法为推送证书签名",
    "the receiving end does not support --signed push": "接收端不支持签名推送",
    "not sending a push certificate since the receiving end does not support --signed push": "未发送推送证书，因为接收端不支持签名推送",
    "the receiving end does not support --atomic push": "接收端不支持原子推送",
    "the receiving end does not support push options": "接收端不支持推送选项",
    "revert": "还原",
    "cherry-pick": "拣选",
    "rebase -i": "rebase -i",
    "Unknown action: %d": "未知动作：%d",
    "after resolving the conflicts, mark the corrected paths\nwith 'git add <paths>' or 'git rm <paths>'": "冲突解决完毕后，用 'git add <路径>' 或 'git rm <路径>'\n命令标记修正后的文件",
    "after resolving the conflicts, mark the corrected paths\nwith 'git add <paths>' or 'git rm <paths>'\nand commit the result with 'git commit'": "冲突解决完毕后，用 'git add <路径>' 或 'git rm <路径>'\n对修正后的文件做标记，然后用 'git commit' 提交",
    "could not lock '%s'": "不能锁定 '%s'",
    "could not write to '%s'": "不能写入 '%s'",
    "could not write eol to '%s'": "不能将换行符写入 '%s'",
    "failed to finalize '%s'.": "无法完成 '%s'。",
    "could not read '%s'": "不能读取 '%s'",
    "your local changes would be overwritten by %s.": "您的本地修改将被%s覆盖。",
    "commit your changes or stash them to proceed.": "提交您的修改或保存进度后再继续。",
    "%s: fast-forward": "%s：快进",
    "%s: Unable to write new index file": "%s：无法写入新索引文件",
    "could not resolve HEAD commit\n": "不能解析 HEAD 提交\n",
    "unable to update cache tree\n": "不能更新缓存树\n",
    "you have staged changes in your working tree\nIf these changes are meant to be squashed into the previous commit, run:\n\n  git commit --amend %s\n\nIf they are meant to go into a new commit, run:\n\n  git commit %s\n\nIn both cases, once you're done, continue with:\n\n  git rebase --continue\n": "您的工作区中存在已暂存的修改\n如果这些修改需要被并入前一个提交，执行：\n\n  git commit --amend %s\n\n如果这些修改要形成一个新提交，执行：\n\n  git commit %s\n\n无论哪种情况，当您完成提交，继续执行：\n\n  git rebase --continue\n",
    "could not parse commit %s\n": "不能解析提交 %s\n",
    "could not parse parent commit %s\n": "不能解析父提交 %s\n",
    "unexpected 1st line of squash message:\n\n\t%.*s": "意外的压缩提交首行提交信息：\n\n\t%.*s",
    "invalid 1st line of squash message:\n\n\t%.*s": "压缩提交的首行提交信息无效：\n\n\t%.*s",
    "This is a combination of %d commits.": "这是一个 %d 个提交的组合。",
    "need a HEAD to fixup": "需要一个 HEAD 来修复",
    "could not read HEAD": "不能读取 HEAD",
    "could not read HEAD's commit message": "不能读取 HEAD 的提交说明",
    "cannot write '%s'": "不能写 '%s'",
    "This is the 1st commit message:": "这是第一个提交说明：",
    "could not read commit message of %s": "不能读取 %s 的提交说明",
    "This is the commit message #%d:": "这是提交说明 #%d：",
    "The commit message #%d will be skipped:": "提交说明 #%d 将被跳过：",
    "unknown command: %d": "未知命令：%d",
    "your index file is unmerged.": "您的索引文件未完成合并。",
    "commit %s is a merge but no -m option was given.": "提交 %s 是一个合并提交但未提供 -m 选项。",
    "commit %s does not have parent %d": "提交 %s 没有第 %d 个父提交",
    "mainline was specified but commit %s is not a merge.": "指定了主线，但是提交 %s 不是一个合并提交。",
    "cannot get commit message for %s": "不能得到 %s 的提交说明",
    "%s: cannot parse parent commit %s": "%s：不能解析父提交 %s",
    "could not rename '%s' to '%s'": "不能将 '%s' 重命名为 '%s'",
    "could not revert %s... %s": "不能还原 %s... %s",
    "could not apply %s... %s": "不能应用 %s... %s",
    "empty commit set passed": "提供了空的提交集",
    "git %s: failed to read the index": "git %s：无法读取索引",
    "git %s: failed to refresh the index": "git %s：无法刷新索引",
    "invalid line %d: %.*s": "无效行 %d：%.*s",
    "cannot '%s' without a previous commit": "没有父提交的情况下不能 '%s'",
    "could not read '%s'.": "不能读取 '%s'。",
    "please fix this using 'git rebase --edit-todo'.": "请用 'git rebase --edit-todo' 来修改。",
    "unusable instruction sheet: '%s'": "不可用的指令清单：'%s'",
    "no commits parsed.": "没有解析提交。",
    "cannot cherry-pick during a revert.": "不能在回退中执行拣选。",
    "cannot revert during a cherry-pick.": "不能在拣选中执行回退。",
    "invalid key: %s": "无效键名：%s",
    "invalid value for %s: %s": "%s 的值无效：%s",
    "malformed options sheet: '%s'": "非法的选项清单：'%s'",
    "a cherry-pick or revert is already in progress": "一个拣选或还原操作已在进行",
    "try \"git cherry-pick (--continue | --quit | --abort)\"": "尝试 \"git cherry-pick (--continue | --quit | --abort)\"",
    "could not create sequencer directory '%s'": "不能创建序列目录 '%s'",
    "could not lock HEAD": "不能锁定 HEAD",
    "no cherry-pick or revert in progress": "拣选或还原操作并未进行",
    "cannot resolve HEAD": "不能解析 HEAD",
    "cannot abort from a branch yet to be born": "不能从尚未建立的分支终止",
    "cannot open '%s'": "不能打开 '%s'",
    "cannot read '%s': %s": "不能读取 '%s'：%s",
    "unexpected end of file": "意外的文件结束",
    "stored pre-cherry-pick HEAD file '%s' is corrupt": "保存拣选提交前的 HEAD 文件 '%s' 损坏",
    "You seem to have moved HEAD. Not rewinding, check your HEAD!": "您好像移动了 HEAD。未能回退，检查您的 HEAD！",
    "cannot read HEAD": "不能读取 HEAD",
    "could not copy '%s' to '%s'": "不能拷贝 '%s' 至 '%s'",
    "could not read index": "不能读取索引",
    "execution failed: %s\n%sYou can fix the problem, and then run\n\n  git rebase --continue\n\n": "执行失败：%s\n%s您可以改正该问题，然后运行\n\n  git rebase --continue\n\n",
    "and made changes to the index and/or the working tree\n": "并且修改索引和/或工作区\n",
    "execution succeeded: %s\nbut left changes to the index and/or the working tree\nCommit or stash your changes, and then run\n\n  git rebase --continue\n\n": "执行成功：%s\n但是在索引和/或工作区中存在变更\n提交或暂存修改，然后运行\n\n  git rebase --continue\n\n",
    "Applied autostash.": "成功应用 autostash。",
    "cannot store %s": "不能存储 %s",
    "Applying autostash resulted in conflicts.\nYour changes are safe in the stash.\nYou can run \"git stash pop\" or \"git stash drop\" at any time.\n": "应用 autostash 导致冲突。\n您的修改安全地保存在 stash 中。\n您可以在任何时候运行 \"git stash pop\" 或 \"git stash drop\"。\n",
    "stopped at %s... %.*s": "停止在 %s... %.*s",
    "unknown command %d": "未知命令 %d",
    "could not read orig-head": "不能读取 orig-head",
    "could not read 'onto'": "不能读取 'onto'",
    "could not update %s": "不能更新 %s",
    "could not update HEAD to %s": "不能更新 HEAD 为 %s",
    "cannot rebase: You have unstaged changes.": "不能变基：您有未暂存的变更。",
    "could not remove CHERRY_PICK_HEAD": "不能删除 CHERRY_PICK_HEAD",
    "cannot amend non-existing commit": "不能修补不存在的提交",
    "invalid file: '%s'": "无效文件：'%s'",
    "invalid contents: '%s'": "无效内容：'%s'",
    "\nYou have uncommitted changes in your working tree. Please, commit them\nfirst and then run 'git rebase --continue' again.": "\n您的工作区中有未提交的变更。请先提交然后再次运行 'git rebase --continue'。",
    "could not commit staged changes.": "不能提交暂存的修改。",
    "%s: can't cherry-pick a %s": "%s：不能拣选一个%s",
    "%s: bad revision": "%s：错误的版本",
    "can't revert as initial commit": "不能作为初始提交回退",
    "%s: no such path in the working tree.\nUse 'git <command> -- <path>...' to specify paths that do not exist locally.": "%s：工作区中无此路径。\n使用命令 'git <command> -- <path>...' 来指定本地不存在的路径。",
    "ambiguous argument '%s': unknown revision or path not in the working tree.\nUse '--' to separate paths from revisions, like this:\n'git <command> [<revision>...] -- [<file>...]'": "有歧义的参数 '%s'：未知的版本或路径不存在于工作区中。\n使用 '--' 来分隔版本和路径，例如：\n'git <command> [<revision>...] -- [<file>...]'",
    "ambiguous argument '%s': both revision and filename\nUse '--' to separate paths from revisions, like this:\n'git <command> [<revision>...] -- [<file>...]'": "有歧义的参数 '%s'：可同时是版本和文件\n使用 '--' 来分隔版本和路径，例如：\n'git <command> [<revision>...] -- [<file>...]'",
    "Expected git repo version <= %d, found %d": "期望 git 仓库版本 <= %d，却得到 %d",
    "unknown repository extensions found:": "发现未知的仓库扩展：",
    "Not a git repository (or any of the parent directories): %s": "不是一个 git 仓库（或者任何父目录）：%s",
    "Cannot come back to cwd": "无法返回当前工作目录",
    "Unable to read current working directory": "不能读取当前工作目录",
    "Not a git repository (or any parent up to mount point %s)\nStopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).": "不是一个 git 仓库（或者向上递归至挂载点 %s 的任何祖先目录）\n停止在文件系统边界（未设置 GIT_DISCOVERY_ACROSS_FILESYSTEM）。",
    "Cannot change to '%s/..'": "不能切换到 '%s/..'",
    "Problem with core.sharedRepository filemode value (0%.3o).\nThe owner of files must always have read and write permissions.": "参数 core.sharedRepository 的文件权限值有错（0%.3o）。\n文件属主必须始终拥有读写权限。",
    "path '%s' does not exist": "路径 '%s' 不存在",
    "reference repository '%s' as a linked checkout is not supported yet.": "尚不支持将参考仓库 '%s' 作为一个链接检出。",
    "reference repository '%s' is not a local repository.": "参考仓库 '%s' 不是一个本地仓库。",
    "reference repository '%s' is shallow": "参考仓库 '%s' 是一个浅克隆",
    "reference repository '%s' is grafted": "参考仓库 '%s' 已被嫁接",
    "offset before end of packfile (broken .idx?)": "偏移量在包文件结束之前（损坏的 .idx？）",
    "offset before start of pack index for %s (corrupt index?)": "偏移量在 %s 的包索引开始之前（损坏的索引？）",
    "offset beyond end of pack index for %s (truncated index?)": "偏移量越过了 %s 的包索引的结尾（被截断的索引？）",
    "short SHA1 %s is ambiguous": "短 SHA1 %s 存在歧义",
    "The candidates are:": "候选者有：",
    "Git normally never creates a ref that ends with 40 hex characters\nbecause it will be ignored when you just specify 40-hex. These refs\nmay be created by mistake. For example,\n\n  git checkout -b $br $(git rev-parse ...)\n\nwhere \"$br\" is somehow empty and a 40-hex ref is created. Please\nexamine these refs and maybe delete them. Turn this message off by\nrunning \"git config advice.objectNameWarning false\"": "Git 通常不会创建一个以40位十六进制字符命名的引用，因为当你提供40位\n十六进制字符时将被忽略。不过这些引用也可能被错误地创建。例如：\n\n  git checkout -b $br $(git rev-parse ...)\n\n当 \"$br\" 空白时一个40位十六进制的引用将被创建。请检查这些引用，\n可能需要删除它们。用 \"git config advice.objectNameWarning false\"\n命令关闭本消息通知。",
    "Cannot change unmerged .gitmodules, resolve merge conflicts first": "无法修改未合并的 .gitmodules，先解决合并冲突",
    "Could not find section in .gitmodules where path=%s": "无法在 .gitmodules 中找到 path=%s 的小节",
    "Could not update .gitmodules entry %s": "不能更新 .gitmodules 条目 %s",
    "Could not remove .gitmodules entry for %s": "无法移除 %s 的 .gitmodules 条目",
    "staging updated .gitmodules failed": "将更新后 .gitmodules 添加暂存区失败",
    "negative values not allowed for submodule.fetchJobs": "submodule.fetchJobs 不允许为负值",
    "could not start 'git status in submodule '%s'": "无法在子模组 '%s' 中启动 git status",
    "could not run 'git status in submodule '%s'": "无法在子模组 '%s' 中执行 git status",
    "relocate_gitdir for submodule '%s' with more than one worktree not supported": "不支持对有多个工作区的子模组 '%s' 执行 relocate_gitdir",
    "could not lookup name for submodule '%s'": "不能查询子模组 '%s' 的名称",
    "could not create directory '%s'": "不能创建目录 '%s'",
    "Migrating git directory of '%s%s' from\n'%s' to\n'%s'\n": "将 '%s%s' 的 git 目录从\n'%s' 迁移至\n'%s'\n",
    "could not recurse into submodule '%s'": "无法递归进子模组路径 '%s'",
    "invalid value for %s": "%s 的值无效",
    "running trailer command '%s' failed": "执行 trailer 命令 '%s' 失败",
    "unknown value '%s' for key '%s'": "键 '%2$s' 的未知取值 '%1$s'",
    "more than one %s": "多于一个 %s",
    "empty trailer token in trailer '%.*s'": "签名 '%.*s' 的键为空",
    "could not read input file '%s'": "不能读取输入文件 '%s'",
    "could not read from stdin": "不能自标准输入读取",
    "could not stat %s": "不能获取 %s 的文件状态",
    "file %s is not a regular file": "文件 %s 不是一个正规文件",
    "file %s is not writable by user": "文件 %s 用户不可写",
    "could not open temporary file": "不能打开临时文件",
    "could not rename temporary file to %s": "不能重命名临时文件为 %s",
    "Would set upstream of '%s' to '%s' of '%s'\n": "将要设置 '%1$s' 的上游为 '%3$s' 的 '%2$s'\n",
    "transport: invalid depth option '%s'": "传输：无效的深度选项 '%s'",
    "The following submodule paths contain changes that can\nnot be found on any remote:\n": "下列子模组路径所包含的修改在任何远程源中都找不到：\n",
    "\nPlease try\n\n\tgit push --recurse-submodules=on-demand\n\nor cd to the path and use\n\n\tgit push\n\nto push them to a remote.\n\n": "\n请尝试\n\n\tgit push --recurse-submodules=on-demand\n\n或者进入到子目录执行\n\n\tgit push\n\n以推送至远程。\n\n",
    "Aborting.": "正在终止。",
    "Could not read ref %s": "不能读取引用 %s",
    "too-short tree object": "太短的树对象",
    "malformed mode in tree entry": "树对象中的条目模式错误",
    "empty filename in tree entry": "树对象条目中空的文件名",
    "too-short tree file": "太短的树文件",
    "Your local changes to the following files would be overwritten by checkout:\n%%sPlease commit your changes or stash them before you switch branches.": "您对下列文件的本地修改将被检出操作覆盖：\n%%s请在切换分支前提交您的修改或者保存进度。",
    "Your local changes to the following files would be overwritten by checkout:\n%%s": "您对下列文件的本地修改将被检出操作覆盖：\n%%s",
    "Your local changes to the following files would be overwritten by merge:\n%%sPlease commit your changes or stash them before you merge.": "您对下列文件的本地修改将被合并操作覆盖：\n%%s请在合并前提交您的修改或者保存进度。",
    "Your local changes to the following files would be overwritten by merge:\n%%s": "您对下列文件的本地修改将被合并操作覆盖：\n%%s",
    "Your local changes to the following files would be overwritten by %s:\n%%sPlease commit your changes or stash them before you %s.": "您对下列文件的本地修改将被 %s 覆盖：\n%%s请在 %s 之前提交您的修改或者保存进度。",
    "Your local changes to the following files would be overwritten by %s:\n%%s": "您对下列文件的本地修改将被 %s 覆盖：\n%%s",
    "Updating the following directories would lose untracked files in them:\n%s": "更新如下目录将会丢失其中未跟踪的文件：\n%s",
    "The following untracked working tree files would be removed by checkout:\n%%sPlease move or remove them before you switch branches.": "工作区中下列未跟踪的文件将会因为检出操作而被删除：\n%%s请在切换分支之前移动或删除。",
    "The following untracked working tree files would be removed by checkout:\n%%s": "工作区中下列未跟踪的文件将会因为检出操作而被删除：\n%%s",
    "The following untracked working tree files would be removed by merge:\n%%sPlease move or remove them before you merge.": "工作区中下列未跟踪的文件将会因为合并操作而被删除：\n%%s请在合并前移动或删除。",
    "The following untracked working tree files would be removed by merge:\n%%s": "工作区中下列未跟踪的文件将会因为合并操作而被删除：\n%%s",
    "The following untracked working tree files would be removed by %s:\n%%sPlease move or remove them before you %s.": "工作区中下列未跟踪的文件将会因为 %s 操作而被删除：\n%%s请在 %s 前移动或删除。",
    "The following untracked working tree files would be removed by %s:\n%%s": "工作区中下列未跟踪的文件将会因为 %s 操作而被删除：\n%%s",
    "The following untracked working tree files would be overwritten by checkout:\n%%sPlease move or remove them before you switch branches.": "工作区中下列未跟踪的文件将会因为检出操作而被覆盖：\n%%s请在切换分支前移动或删除。",
    "The following untracked working tree files would be overwritten by checkout:\n%%s": "工作区中下列未跟踪的文件将会因为检出操作而被覆盖：\n%%s",
    "The following untracked working tree files would be overwritten by merge:\n%%sPlease move or remove them before you merge.": "工作区中下列未跟踪的文件将会因为合并操作而被覆盖：\n%%s请在合并前移动或删除。",
    "The following untracked working tree files would be overwritten by merge:\n%%s": "工作区中下列未跟踪的文件将会因为合并操作而被覆盖：\n%%s",
    "The following untracked working tree files would be overwritten by %s:\n%%sPlease move or remove them before you %s.": "工作区中下列未跟踪的文件将会因为 %s 操作而被覆盖：\n%%s请在 %s 前移动或删除。",
    "The following untracked working tree files would be overwritten by %s:\n%%s": "工作区中下列未跟踪的文件将会因为 %s 操作而被覆盖：\n%%s",
    "Entry '%s' overlaps with '%s'.  Cannot bind.": "条目 '%s' 和 '%s' 重叠。无法合并。",
    "Cannot update sparse checkout: the following entries are not up-to-date:\n%s": "无法更新稀疏检出：如下条目不是最新：\n%s",
    "The following working tree files would be overwritten by sparse checkout update:\n%s": "工作区中下列文件将被稀疏检出更新所覆盖：\n%s",
    "The following working tree files would be removed by sparse checkout update:\n%s": "工作区中下列文件将被稀疏检出更新所删除：\n%s",
    "Aborting\n": "终止中\n",
    "Checking out files": "正在检出文件",
    "invalid URL scheme name or missing '://' suffix": "无效的 URL 方案名称或丢失 '://' 后缀",
    "invalid %XX escape sequence": "无效的 %XX 转义序列",
    "missing host and scheme is not 'file:'": "缺失主机名且 URL 方案不是 'file:'",
    "a 'file:' URL may not have a port number": "一个 'file:' URL 不应该包含端口号",
    "invalid characters in host name": "主机名中包含无效的字符",
    "invalid port number": "无效的端口号",
    "invalid '..' path segment": "无效的 '..' 路径片段",
    "failed to read '%s'": "无法读取 '%s'",
    "could not open '%s' for reading and writing": "无法打开 '%s' 进行读写",
    "could not open '%s' for writing": "无法打开 '%s' 进行写入",
    "could not open '%s' for reading": "无法打开 '%s' 进行读取",
    "unable to access '%s'": "不能访问 '%s'",
    "unable to get current working directory": "不能获取当前工作目录",
    "could not write to %s": "不能写入 %s",
    "could not close %s": "不能关闭 %s",
    "Unmerged paths:": "未合并的路径：",
    "  (use \"git reset %s <file>...\" to unstage)": "  （使用 \"git reset %s <文件>...\" 以取消暂存）",
    "  (use \"git rm --cached <file>...\" to unstage)": "  （使用 \"git rm --cached <文件>...\" 以取消暂存）",
    "  (use \"git add <file>...\" to mark resolution)": "  （使用 \"git add <文件>...\" 标记解决方案）",
    "  (use \"git add/rm <file>...\" as appropriate to mark resolution)": "  （酌情使用 \"git add/rm <文件>...\" 标记解决方案）",
    "  (use \"git rm <file>...\" to mark resolution)": "  （使用 \"git rm <文件>...\" 标记解决方案）",
    "Changes to be committed:": "要提交的变更：",
    "Changes not staged for commit:": "尚未暂存以备提交的变更：",
    "  (use \"git add <file>...\" to update what will be committed)": "  （使用 \"git add <文件>...\" 更新要提交的内容）",
    "  (use \"git add/rm <file>...\" to update what will be committed)": "  （使用 \"git add/rm <文件>...\" 更新要提交的内容）",
    "  (use \"git checkout -- <file>...\" to discard changes in working directory)": "  （使用 \"git checkout -- <文件>...\" 丢弃工作区的改动）",
    "  (commit or discard the untracked or modified content in submodules)": "  （提交或丢弃子模组中未跟踪或修改的内容）",
    "  (use \"git %s <file>...\" to include in what will be committed)": "  （使用 \"git %s <文件>...\" 以包含要提交的内容）",
    "both deleted:": "双方删除：",
    "added by us:": "由我们添加：",
    "deleted by them:": "由他们删除：",
    "added by them:": "由他们添加：",
    "deleted by us:": "由我们删除：",
    "both added:": "双方添加：",
    "both modified:": "双方修改：",
    "new file:": "新文件：",
    "copied:": "拷贝：",
    "deleted:": "删除：",
    "modified:": "修改：",
    "renamed:": "重命名：",
    "typechange:": "类型变更：",
    "unknown:": "未知：",
    "unmerged:": "未合并：",
    "new commits, ": "新提交, ",
    "modified content, ": "修改的内容, ",
    "untracked content, ": "未跟踪的内容, ",
    "Submodules changed but not updated:": "子模组已修改但尚未更新：",
    "Submodule changes to be committed:": "要提交的子模组变更：",
    "Do not touch the line above.\nEverything below will be removed.": "不要改动上面的一行。\n下面的所有内容均将被删除。",
    "You have unmerged paths.": "您有尚未合并的路径。",
    "  (fix conflicts and run \"git commit\")": "  （解决冲突并运行 \"git commit\"）",
    "  (use \"git merge --abort\" to abort the merge)": "  （使用 \"git merge --abort\" 终止合并）",
    "All conflicts fixed but you are still merging.": "所有冲突已解决但您仍处于合并中。",
    "  (use \"git commit\" to conclude merge)": "  （使用 \"git commit\" 结束合并）",
    "You are in the middle of an am session.": "您正处于 am 操作过程中。",
    "The current patch is empty.": "当前的补丁为空。",
    "  (fix conflicts and then run \"git am --continue\")": "  （解决冲突，然后运行 \"git am --continue\"）",
    "  (use \"git am --skip\" to skip this patch)": "  （使用 \"git am --skip\" 跳过此补丁）",
    "  (use \"git am --abort\" to restore the original branch)": "  （使用 \"git am --abort\" 恢复原有分支）",
    "git-rebase-todo is missing.": "git-rebase-todo 丢失。",
    "No commands done.": "没有命令被执行。",
    "Last command done (%d command done):_plural": "最后一条命令已完成（%d 条命令被执行）：",
    "Last command done (%d command done):": "最后的命令已完成（%d 条命令被执行）：",
    "  (see more in file %s)": "  （更多参见文件 %s）",
    "No commands remaining.": "未剩下任何命令。",
    "Next command to do (%d remaining command):_plural": "接下来要执行的命令（剩余 %d 条命令）：",
    "Next command to do (%d remaining command):": "接下来要执行的命令（剩余 %d 条命令）：",
    "  (use \"git rebase --edit-todo\" to view and edit)": "  （使用 \"git rebase --edit-todo\" 来查看和编辑）",
    "You are currently rebasing branch '%s' on '%s'.": "您在执行将分支 '%s' 变基到 '%s' 的操作。",
    "You are currently rebasing.": "您在执行变基操作。",
    "  (fix conflicts and then run \"git rebase --continue\")": "  （解决冲突，然后运行 \"git rebase --continue\"）",
    "  (use \"git rebase --skip\" to skip this patch)": "  （使用 \"git rebase --skip\" 跳过此补丁）",
    "  (use \"git rebase --abort\" to check out the original branch)": "  （使用 \"git rebase --abort\" 以检出原有分支）",
    "  (all conflicts fixed: run \"git rebase --continue\")": "  （所有冲突已解决：运行 \"git rebase --continue\"）",
    "You are currently splitting a commit while rebasing branch '%s' on '%s'.": "您在执行将分支 '%s' 变基到 '%s' 的操作时拆分提交。",
    "You are currently splitting a commit during a rebase.": "您在执行变基操作时拆分提交。",
    "  (Once your working directory is clean, run \"git rebase --continue\")": "  （一旦您工作目录提交干净后，运行 \"git rebase --continue\"）",
    "You are currently editing a commit while rebasing branch '%s' on '%s'.": "您在执行将分支 '%s' 变基到 '%s' 的操作时编辑提交。",
    "You are currently editing a commit during a rebase.": "您在执行变基操作时编辑提交。",
    "  (use \"git commit --amend\" to amend the current commit)": "  （使用 \"git commit --amend\" 修补当前提交）",
    "  (use \"git rebase --continue\" once you are satisfied with your changes)": "  （当您对您的修改满意后执行 \"git rebase --continue\"）",
    "You are currently cherry-picking commit %s.": "您在执行拣选提交 %s 的操作。",
    "  (fix conflicts and run \"git cherry-pick --continue\")": "  （解决冲突并运行 \"git cherry-pick --continue\"）",
    "  (all conflicts fixed: run \"git cherry-pick --continue\")": "  （所有冲突已解决：运行 \"git cherry-pick --continue\"）",
    "  (use \"git cherry-pick --abort\" to cancel the cherry-pick operation)": "  （使用 \"git cherry-pick --abort\" 以取消拣选操作）",
    "You are currently reverting commit %s.": "您在执行反转提交 %s 的操作。",
    "  (fix conflicts and run \"git revert --continue\")": "  （解决冲突并运行 \"git revert --continue\"）",
    "  (all conflicts fixed: run \"git revert --continue\")": "  （所有冲突已解决：运行 \"git revert --continue\"）",
    "  (use \"git revert --abort\" to cancel the revert operation)": "  （使用 \"git revert --abort\" 以取消反转提交操作）",
    "You are currently bisecting, started from branch '%s'.": "您在执行从分支 '%s' 开始的二分查找操作。",
    "You are currently bisecting.": "您在执行二分查找操作。",
    "  (use \"git bisect reset\" to get back to the original branch)": "  （使用 \"git bisect reset\" 以回到原有分支）",
    "On branch ": "位于分支 ",
    "interactive rebase in progress; onto ": "交互式变基操作正在进行中；至 ",
    "rebase in progress; onto ": "变基操作正在进行中；至 ",
    "HEAD detached at ": "头指针分离于 ",
    "HEAD detached from ": "头指针分离自 ",
    "Not currently on any branch.": "当前不在任何分支上。",
    "Initial commit": "初始提交",
    "Untracked files": "未跟踪的文件",
    "Ignored files": "忽略的文件",
    "It took %.2f seconds to enumerate untracked files. 'status -uno'\nmay speed it up, but you have to be careful not to forget to add\nnew files yourself (see 'git help status').": "耗费了 %.2f 秒以枚举未跟踪的文件。'status -uno' 也许能提高速度，\n但您需要小心不要忘了添加新文件（参见 'git help status'）。",
    "Untracked files not listed%s": "未跟踪的文件没有列出%s",
    " (use -u option to show untracked files)": "（使用 -u 参数显示未跟踪的文件）",
    "No changes": "没有修改",
    "no changes added to commit (use \"git add\" and/or \"git commit -a\")\n": "修改尚未加入提交（使用 \"git add\" 和/或 \"git commit -a\"）\n",
    "no changes added to commit\n": "修改尚未加入提交\n",
    "nothing added to commit but untracked files present (use \"git add\" to track)\n": "提交为空，但是存在尚未跟踪的文件（使用 \"git add\" 建立跟踪）\n",
    "nothing added to commit but untracked files present\n": "提交为空，但是存在尚未跟踪的文件\n",
    "nothing to commit (create/copy files and use \"git add\" to track)\n": "无文件要提交（创建/拷贝文件并使用 \"git add\" 建立跟踪）\n",
    "nothing to commit\n": "无文件要提交\n",
    "nothing to commit (use -u to show untracked files)\n": "无文件要提交（使用 -u 显示未跟踪的文件）\n",
    "nothing to commit, working tree clean\n": "无文件要提交，干净的工作区\n",
    "Initial commit on ": "初始提交于 ",
    "HEAD (no branch)": "HEAD（非分支）",
    "gone": "丢失",
    "behind ": "落后 ",
    "ahead ": "领先 ",
    "cannot %s: You have unstaged changes.": "不能%s：您有未暂存的变更。",
    "additionally, your index contains uncommitted changes.": "另外，您的索引中包含未提交的变更。",
    "cannot %s: Your index contains uncommitted changes.": "不能%s：您的索引中包含未提交的变更。",
    "failed to unlink '%s'": "无法删除 '%s'",
    "git add [<options>] [--] <pathspec>...": "git add [<选项>] [--] <路径规格>...",
    "unexpected diff status %c": "意外的差异状态 %c",
    "updating files failed": "更新文件失败",
    "remove '%s'\n": "删除 '%s'\n",
    "Unstaged changes after refreshing the index:": "刷新索引之后尚未被暂存的变更：",
    "Could not read the index": "不能读取索引",
    "Could not open '%s' for writing.": "无法打开 '%s' 进行写入。",
    "Could not write patch": "不能生成补丁",
    "editing patch failed": "编辑补丁失败",
    "Could not stat '%s'": "不能查看文件状态 '%s'",
    "Empty patch. Aborted.": "空补丁。异常终止。",
    "Could not apply '%s'": "不能应用 '%s'",
    "The following paths are ignored by one of your .gitignore files:\n": "下列路径根据您的一个 .gitignore 文件而被忽略：\n",
    "dry run": "演习",
    "interactive picking": "交互式拣选",
    "select hunks interactively": "交互式挑选数据块",
    "edit current diff and apply": "编辑当前差异并应用",
    "allow adding otherwise ignored files": "允许添加忽略的文件",
    "update tracked files": "更新已跟踪的文件",
    "record only the fact that the path will be added later": "只记录，该路径稍后再添加",
    "add changes from all tracked and untracked files": "添加所有改变的已跟踪文件和未跟踪文件",
    "ignore paths removed in the working tree (same as --no-all)": "忽略工作区中移除的路径（和 --no-all 相同）",
    "don't add, only refresh the index": "不添加，只刷新索引",
    "just skip files which cannot be added because of errors": "跳过因出错不能添加的文件",
    "check if - even missing - files are ignored in dry run": "检查在演习模式下文件（即使不存在）是否被忽略",
    "(+/-)x": "(+/-)x",
    "override the executable bit of the listed files": "覆盖列表里文件的可执行位",
    "Use -f if you really want to add them.\n": "使用 -f 参数如果您确实要添加它们。\n",
    "adding files failed": "添加文件失败",
    "-A and -u are mutually incompatible": "-A 和 -u 选项互斥",
    "Option --ignore-missing can only be used together with --dry-run": "选项 --ignore-missing 只能和 --dry-run 同时使用",
    "--chmod param '%s' must be either -x or +x": "参数 --chmod 取值 '%s' 必须是 -x 或 +x",
    "Nothing specified, nothing added.\n": "没有指定文件，也没有文件被添加。\n",
    "Maybe you wanted to say 'git add .'?\n": "也许您想要执行 'git add .'？\n",
    "index file corrupt": "索引文件损坏",
    "could not parse author script": "不能解析作者脚本",
    "'%s' was deleted by the applypatch-msg hook": "'%s' 被 applypatch-msg 钩子删除",
    "Malformed input line: '%s'.": "非法的输入行：'%s'。",
    "Failed to copy notes from '%s' to '%s'": "从 '%s' 拷贝注解到 '%s' 时失败",
    "fseek failed": "fseek 失败",
    "could not parse patch '%s'": "无法解析补丁 '%s'",
    "Only one StGIT patch series can be applied at once": "一次只能有一个 StGIT 补丁队列被应用",
    "invalid timestamp": "无效的时间戳",
    "invalid Date line": "无效的日期行",
    "invalid timezone offset": "无效的时区偏移值",
    "Patch format detection failed.": "补丁格式检测失败。",
    "failed to create directory '%s'": "无法创建目录 '%s'",
    "Failed to split patches.": "无法拆分补丁。",
    "unable to write index file": "无法写入索引文件",
    "When you have resolved this problem, run \"%s --continue\".": "当您解决这一问题，执行 \"%s --continue\"。",
    "If you prefer to skip this patch, run \"%s --skip\" instead.": "如果您想要跳过这一补丁，则执行 \"%s --skip\"。",
    "To restore the original branch and stop patching, run \"%s --abort\".": "若要复原至原始分支并停止补丁操作，执行 \"%s --abort\"。",
    "Patch is empty. Was it split wrong?": "补丁为空。是不是切分错误？",
    "invalid ident line: %s": "包含无效的身份标识：%s",
    "unable to parse commit %s": "不能解析提交 %s",
    "Repository lacks necessary blobs to fall back on 3-way merge.": "仓库缺乏必要的数据对象以进行三方合并。",
    "Using index info to reconstruct a base tree...": "使用索引来重建一个（三方合并的）基础目录树...",
    "Did you hand edit your patch?\nIt does not apply to blobs recorded in its index.": "您是否曾手动编辑过您的补丁？\n无法应用补丁到索引中的数据对象上。",
    "Falling back to patching base and 3-way merge...": "回落到基础版本上打补丁及进行三方合并...",
    "Failed to merge in the changes.": "无法合并变更。",
    "git write-tree failed to write a tree": "git write-tree 无法写入一树对象",
    "applying to an empty history": "正应用到一个空历史上",
    "failed to write commit object": "无法写提交对象",
    "cannot resume: %s does not exist.": "无法继续：%s 不存在。",
    "cannot be interactive without stdin connected to a terminal.": "标准输入没有和终端关联，不能进行交互式操作。",
    "Commit Body is:": "提交内容为：",
    "Apply? [y]es/[n]o/[e]dit/[v]iew patch/[a]ccept all: ": "应用？是[y]/否[n]/编辑[e]/查看补丁[v]/应用所有[a]：",
    "Dirty index: cannot apply patches (dirty: %s)": "脏索引：不能应用补丁（脏文件：%s）",
    "Applying: %.*s": "应用：%.*s",
    "No changes -- Patch already applied.": "没有变更 —— 补丁已经应用过。",
    "Patch failed at %s %.*s": "打补丁失败于 %s %.*s",
    "The copy of the patch that failed is found in: %s": "失败的补丁文件副本位于：%s",
    "No changes - did you forget to use 'git add'?\nIf there is nothing left to stage, chances are that something else\nalready introduced the same changes; you might want to skip this patch.": "没有变更 —— 您是不是忘了执行 'git add'？\n如果没有什么要添加到暂存区的，则很可能是其它提交已经引入了相同的变更。\n您也许想要跳过这个补丁。",
    "You still have unmerged paths in your index.\nDid you forget to use 'git add'?": "您的索引中仍有未合并的路径。\n您是否忘了执行 'git add'？",
    "Could not parse object '%s'.": "不能解析对象 '%s'。",
    "failed to clean index": "无法清空索引",
    "You seem to have moved HEAD since the last 'am' failure.\nNot rewinding to ORIG_HEAD": "您好像在上一次 'am' 失败后移动了 HEAD。未回退至 ORIG_HEAD",
    "Invalid value for --patch-format: %s": "无效的 --patch-format 值：%s",
    "git am [<options>] [(<mbox> | <Maildir>)...]": "git am [<选项>] [(<mbox> | <Maildir>)...]",
    "git am [<options>] (--continue | --skip | --abort)": "git am [<选项>] (--continue | --skip | --abort)",
    "run interactively": "以交互式方式运行",
    "historical option -- no-op": "老的参数 —— 无作用",
    "allow fall back on 3way merging if needed": "如果必要，允许使用三方合并。",
    "be quiet": "静默模式",
    "add a Signed-off-by line to the commit message": "在提交说明中添加一个 Signed-off-by 签名",
    "recode into utf8 (default)": "使用 utf8 字符集（默认）",
    "pass -k flag to git-mailinfo": "向 git-mailinfo 传递 -k 参数",
    "pass -b flag to git-mailinfo": "向 git-mailinfo 传递 -b 参数",
    "pass -m flag to git-mailinfo": "向 git-mailinfo 传递 -m 参数",
    "pass --keep-cr flag to git-mailsplit for mbox format": "针对 mbox 格式，向 git-mailsplit 传递 --keep-cr 参数",
    "do not pass --keep-cr flag to git-mailsplit independent of am.keepcr": "不向 git-mailsplit 传递 --keep-cr 参数，覆盖 am.keepcr 的设置",
    "strip everything before a scissors line": "丢弃裁切线前的所有内容",
    "pass it through git-apply": "传递给 git-apply",
    "n": "n",
    "format": "格式",
    "format the patch(es) are in": "补丁的格式",
    "override error message when patch failure occurs": "打补丁失败时显示的错误信息",
    "continue applying patches after resolving a conflict": "冲突解决后继续应用补丁",
    "synonyms for --continue": "和 --continue 同义",
    "skip the current patch": "跳过当前补丁",
    "restore the original branch and abort the patching operation.": "恢复原始分支并终止打补丁操作。",
    "lie about committer date": "将作者日期作为提交日期",
    "use current timestamp for author date": "用当前时间作为作者日期",
    "key-id": "key-id",
    "GPG-sign commits": "使用 GPG 签名提交",
    "(internal use for git-rebase)": "（内部使用，用于 git-rebase）",
    "The -b/--binary option has been a no-op for long time, and\nit will be removed. Please do not use it anymore.": "参数 -b/--binary 已经很长时间不做任何实质操作了，并且将被移除。\n请不要再使用它了。",
    "failed to read the index": "无法读取索引",
    "previous rebase directory %s still exists but mbox given.": "之前的变基目录 %s 仍然存在，但却提供了 mbox。",
    "Stray %s directory found.\nUse \"git am --abort\" to remove it.": "发现了错误的 %s 目录。\n使用 \"git am --abort\" 删除它。",
    "Resolve operation not in progress, we are not resuming.": "解决操作未进行，我们不会继续。",
    "git apply [<options>] [<patch>...]": "git apply [<选项>] [<补丁>...]",
    "could not create archive file '%s'": "不能创建归档文件 '%s'",
    "could not redirect output": "不能重定向输出",
    "git archive: Remote with no URL": "git archive：未提供远程 URL",
    "git archive: expected ACK/NAK, got EOF": "git archive：应为 ACK/NACK，却得到 EOF",
    "git archive: NACK %s": "git archive：NACK %s",
    "remote error: %s": "远程错误：%s",
    "git archive: protocol error": "git archive：协议错误",
    "git archive: expected a flush": "git archive：应有一个 flush 刷新",
    "git bisect--helper --next-all [--no-checkout]": "git bisect--helper --next-all [--no-checkout]",
    "perform 'git bisect next'": "执行 'git bisect next'",
    "update BISECT_HEAD instead of checking out the current commit": "更新 BISECT_HEAD 而非检出当前提交",
    "git blame [<options>] [<rev-opts>] [<rev>] [--] <file>": "git blame [<选项>] [<版本选项>] [<版本>] [--] <文件>",
    "<rev-opts> are documented in git-rev-list(1)": "<版本选项> 的文档记录在 git-rev-list(1) 中",
    "Blaming lines": "追踪代码行",
    "Show blame entries as we find them, incrementally": "增量式地显示发现的 blame 条目",
    "Show blank SHA-1 for boundary commits (Default: off)": "边界提交显示空的 SHA-1（默认：关闭）",
    "Do not treat root commits as boundaries (Default: off)": "不把根提交作为边界（默认：关闭）",
    "Show work cost statistics": "显示命令消耗统计",
    "Force progress reporting": "强制进度显示",
    "Show output score for blame entries": "显示判断 blame 条目位移的得分诊断信息",
    "Show original filename (Default: auto)": "显示原始文件名（默认：自动）",
    "Show original linenumber (Default: off)": "显示原始的行号（默认：关闭）",
    "Show in a format designed for machine consumption": "显示为一个适合机器读取的格式",
    "Show porcelain format with per-line commit information": "为每一行显示机器适用的提交信息",
    "Use the same output mode as git-annotate (Default: off)": "使用和 git-annotate 相同的输出模式（默认：关闭）",
    "Show raw timestamp (Default: off)": "显示原始时间戳（默认：关闭）",
    "Show long commit SHA1 (Default: off)": "显示长的 SHA1 提交号（默认：关闭）",
    "Suppress author name and timestamp (Default: off)": "隐藏作者名字和时间戳（默认：关闭）",
    "Show author email instead of name (Default: off)": "显示作者的邮箱而不是名字（默认：关闭）",
    "Ignore whitespace differences": "忽略空白差异",
    "Use an experimental heuristic to improve diffs": "使用一个试验性的启发式算法改进差异显示",
    "Spend extra cycles to find better match": "花费额外的循环来找到更好的匹配",
    "Use revisions from <file> instead of calling git-rev-list": "使用来自 <文件> 的修订集而不是调用 git-rev-list",
    "Use <file>'s contents as the final image": "使用 <文件> 的内容作为最终的图片",
    "score": "得分",
    "Find line copies within and across files": "找到文件内及跨文件的行拷贝",
    "Find line movements within and across files": "找到文件内及跨文件的行移动",
    "n,m": "n,m",
    "Process only line range n,m, counting from 1": "只处理行范围在 n 和 m 之间的，从 1 开始",
    "--progress can't be used with --incremental or porcelain formats": "--progress 不能和 --incremental 或 --porcelain 同时使用",
    "4 years, 11 months ago": "4 年 11 个月前",
    "--contents and --reverse do not blend well.": "--contents 和 --reverse 不能混用。",
    "cannot use --contents with final commit object name": "不能将 --contents 和最终的提交对象名共用",
    "--reverse and --first-parent together require specified latest commit": "--reverse 和 --first-parent 共用，需要指定最新的提交",
    "--reverse --first-parent together require range along first-parent chain": "--reverse 和 --first-parent 共用，需要第一祖先链上的提交范围",
    "no such path %s in %s": "在 %2$s 中无此路径 %1$s",
    "cannot read blob %s for path %s": "不能为路径 %2$s 读取数据对象 %1$s",
    "file %s has only %lu line_plural": "文件 %s 只有 %lu 行",
    "file %s has only %lu line": "文件 %s 只有 %lu 行",
    "git branch [<options>] [-r | -a] [--merged | --no-merged]": "git branch [<选项>] [-r | -a] [--merged | --no-merged]",
    "git branch [<options>] [-l] [-f] <branch-name> [<start-point>]": "git branch [<选项>] [-l] [-f] <分支名> [<起始点>]",
    "git branch [<options>] [-r] (-d | -D) <branch-name>...": "git branch [<选项>] [-r] (-d | -D) <分支名>...",
    "git branch [<options>] (-m | -M) [<old-branch>] <new-branch>": "git branch [<选项>] (-m | -M) [<旧分支>] <新分支>",
    "git branch [<options>] [-r | -a] [--points-at]": "git branch [<选项>] [-r | -a] [--points-at]",
    "deleting branch '%s' that has been merged to\n         '%s', but not yet merged to HEAD.": "将要删除的分支 '%s' 已经被合并到\n         '%s'，但未合并到 HEAD。",
    "not deleting branch '%s' that is not yet merged to\n         '%s', even though it is merged to HEAD.": "并未删除分支 '%s'， 虽然它已经合并到 HEAD，\n         然而却尚未被合并到分支 '%s' 。",
    "Couldn't look up commit object for '%s'": "无法查询 '%s' 指向的提交对象",
    "The branch '%s' is not fully merged.\nIf you are sure you want to delete it, run 'git branch -D %s'.": "分支 '%s' 没有完全合并。\n如果您确认要删除它，执行 'git branch -D %s'。",
    "Update of config-file failed": "无法更新 config 文件",
    "cannot use -a with -d": "不能将 -a 和 -d 同时使用",
    "Couldn't look up commit object for HEAD": "无法查询 HEAD 指向的提交对象",
    "Cannot delete branch '%s' checked out at '%s'": "无法删除检出于 '%2$s' 的分支 '%1$s'。",
    "remote-tracking branch '%s' not found.": "未能找到远程跟踪分支 '%s'。",
    "branch '%s' not found.": "分支 '%s' 未发现。",
    "Error deleting remote-tracking branch '%s'": "无法删除远程跟踪分支 '%s'",
    "Error deleting branch '%s'": "无法删除分支 '%s'",
    "Deleted remote-tracking branch %s (was %s).\n": "已删除远程跟踪分支 %s（曾为 %s）。\n",
    "Deleted branch %s (was %s).\n": "已删除分支 %s（曾为 %s）。\n",
    "[%s: gone]": "[%s: 丢失]",
    "[%s]": "[%s]",
    "[%s: behind %d]": "[%s：落后 %d]",
    "[behind %d]": "[落后 %d]",
    "[%s: ahead %d]": "[%s：领先 %d]",
    "[ahead %d]": "[领先 %d]",
    "[%s: ahead %d, behind %d]": "[%s：领先 %d，落后 %d]",
    "[ahead %d, behind %d]": "[领先 %d，落后 %d]",
    " **** invalid ref ****": " **** 无效引用 ****",
    "(no branch, rebasing %s)": "（非分支，正变基 %s）",
    "(no branch, bisect started on %s)": "（非分支，二分查找开始于 %s）",
    "(HEAD detached at %s)": "（头指针分离于 %s）",
    "(HEAD detached from %s)": "（头指针分离自 %s）",
    "(no branch)": "（非分支）",
    "Branch %s is being rebased at %s": "分支 %s 正被变基到 %s",
    "Branch %s is being bisected at %s": "分支 %s 正被二分查找于 %s",
    "cannot rename the current branch while not on any.": "无法重命名当前分支因为不处于任何分支上。",
    "Invalid branch name: '%s'": "无效的分支名：'%s'",
    "Branch rename failed": "分支重命名失败",
    "Renamed a misnamed branch '%s' away": "重命名掉一个错误命名的旧分支 '%s'",
    "Branch renamed to %s, but HEAD is not updated!": "分支重命名为 %s，但 HEAD 没有更新！",
    "Branch is renamed, but update of config-file failed": "分支被重命名，但更新 config 文件失败",
    "Please edit the description for the branch\n  %s\nLines starting with '%c' will be stripped.\n": "请编辑分支的描述\n  %s\n以 '%c' 开头的行将被过滤。\n",
    "Generic options": "通用选项",
    "show hash and subject, give twice for upstream branch": "显示哈希值和主题，若参数出现两次则显示上游分支",
    "suppress informational messages": "不显示信息",
    "set up tracking mode (see git-pull(1))": "设置跟踪模式（参见 git-pull(1)）",
    "change upstream info": "改变上游信息",
    "upstream": "上游",
    "change the upstream info": "改变上游信息",
    "Unset the upstream info": "取消上游信息的设置",
    "use colored output": "使用彩色输出",
    "act on remote-tracking branches": "作用于远程跟踪分支",
    "print only branches that contain the commit": "只打印包含该提交的分支",
    "Specific git-branch actions:": "具体的 git-branch 动作：",
    "list both remote-tracking and local branches": "列出远程跟踪及本地分支",
    "delete fully merged branch": "删除完全合并的分支",
    "delete branch (even if not merged)": "删除分支（即使没有合并）",
    "move/rename a branch and its reflog": "移动/重命名一个分支，以及它的引用日志",
    "move/rename a branch, even if target exists": "移动/重命名一个分支，即使目标已存在",
    "list branch names": "列出分支名",
    "create the branch's reflog": "创建分支的引用日志",
    "edit the description for the branch": "标记分支的描述",
    "force creation, move/rename, deletion": "强制创建、移动/重命名、删除",
    "print only branches that are merged": "只打印已经合并的分支",
    "print only branches that are not merged": "只打印尚未合并的分支",
    "list branches in columns": "以列的方式显示分支",
    "key": "key",
    "field name to sort on": "排序的字段名",
    "object": "对象",
    "print only branches of the object": "只打印指向该对象的分支",
    "sorting and filtering are case insensitive": "排序和过滤属于大小写不敏感",
    "Failed to resolve HEAD as a valid ref.": "无法将 HEAD 解析为有效引用。",
    "HEAD not found below refs/heads!": "HEAD 没有位于 /refs/heads 之下！",
    "--column and --verbose are incompatible": "--column 和 --verbose 不兼容",
    "branch name required": "必须提供分支名",
    "Cannot give description to detached HEAD": "不能向分离头指针提供描述",
    "cannot edit description of more than one branch": "不能为一个以上的分支编辑描述",
    "No commit on branch '%s' yet.": "分支 '%s' 尚无提交。",
    "No branch named '%s'.": "没有分支 '%s'。",
    "too many branches for a rename operation": "为重命名操作提供了太多的分支名",
    "too many branches to set new upstream": "为设置新上游提供了太多的分支名",
    "could not set upstream of HEAD to %s when it does not point to any branch.": "无法设置 HEAD 的上游为 %s，因为 HEAD 没有指向任何分支。",
    "no such branch '%s'": "没有此分支 '%s'",
    "branch '%s' does not exist": "分支 '%s' 不存在",
    "too many branches to unset upstream": "为取消上游设置操作提供了太多的分支名",
    "could not unset upstream of HEAD when it does not point to any branch.": "无法取消 HEAD 的上游设置因为它没有指向一个分支",
    "Branch '%s' has no upstream information": "分支 '%s' 没有上游信息",
    "it does not make sense to create 'HEAD' manually": "手工创建 'HEAD' 没有意义",
    "-a and -r options to 'git branch' do not make sense with a branch name": "'git branch' 的 -a 和 -r 选项带一个分支名参数没有意义",
    "The --set-upstream flag is deprecated and will be removed. Consider using --track or --set-upstream-to\n": "选项 --set-upstream 已弃用并将被移除。考虑使用 --track 或 --set-upstream-to\n",
    "\nIf you wanted to make '%s' track '%s', do this:\n\n": "\n如果你想用 '%s' 跟踪 '%s', 这么做：\n\n",
    "%s is okay\n": "%s 可以\n",
    "Need a repository to create a bundle.": "需要一个仓库来创建包。",
    "Need a repository to unbundle.": "需要一个仓库来解包。",
    "git cat-file (-t [--allow-unknown-type] | -s [--allow-unknown-type] | -e | -p | <type> | --textconv | --filters) [--path=<path>] <object>": "git cat-file (-t [--allow-unknown-type] | -s [--allow-unknown-type] | -e | -p | <类型> | --textconv | --filters) [--path=<路径>] <对象>",
    "git cat-file (--batch | --batch-check) [--follow-symlinks] [--textconv | --filters]": "git cat-file (--batch | --batch-check) [--follow-symlinks] [--textconv | --filters]",
    "<type> can be one of: blob, tree, commit, tag": "<类型> 可以是其中之一：blob、tree、commit、tag",
    "show object type": "显示对象类型",
    "show object size": "显示对象大小",
    "exit with zero when there's no error": "当没有错误时退出并返回零",
    "pretty-print object's content": "美观地打印对象的内容",
    "for blob objects, run textconv on object's content": "对于数据对象，对其内容做文本转换",
    "for blob objects, run filters on object's content": "对于数据对象，对其内容做过滤",
    "blob": "数据对象",
    "use a specific path for --textconv/--filters": "对于 --textconv/--filters 使用一个特定的路径",
    "allow -s and -t to work with broken/corrupt objects": "允许 -s 和 -t 对损坏的对象生效",
    "buffer --batch output": "缓冲 --batch 的输出",
    "show info and content of objects fed from the standard input": "显示从标准输入提供的对象的信息和内容",
    "show info about objects fed from the standard input": "显示从标准输入提供的对象的信息",
    "follow in-tree symlinks (used with --batch or --batch-check)": "跟随树内符号链接（和 --batch 或 --batch-check 共用）",
    "show all objects with --batch or --batch-check": "使用 --batch 或 --batch-check 参数显示所有对象",
    "git check-attr [-a | --all | <attr>...] [--] <pathname>...": "git check-attr [-a | --all | <属性>...] [--] <路径名>...",
    "git check-attr --stdin [-z] [-a | --all | <attr>...]": "git check-attr --stdin [-z] [-a | --all | <属性>...]",
    "report all attributes set on file": "报告设置在文件上的所有属性",
    "use .gitattributes only from the index": "只使用索引中的 .gitattributes",
    "read file names from stdin": "从标准输入读出文件名",
    "terminate input and output records by a NUL character": "输入和输出的记录使用 NUL 字符终结",
    "suppress progress reporting": "不显示进度报告",
    "show non-matching input paths": "显示未匹配的输入路径",
    "ignore index when checking": "检查时忽略索引",
    "cannot specify pathnames with --stdin": "不能同时指定路径及 --stdin 参数",
    "-z only makes sense with --stdin": "-z 需要和 --stdin 参数共用才有意义",
    "no path specified": "未指定路径",
    "--quiet is only valid with a single pathname": "参数 --quiet 只在提供一个路径名时有效",
    "cannot have both --quiet and --verbose": "不能同时提供 --quiet 和 --verbose 参数",
    "--non-matching is only valid with --verbose": "--non-matching 选项只在使用 --verbose 时有效",
    "git check-mailmap [<options>] <contact>...": "git check-mailmap [<选项>] <联系地址>...",
    "also read contacts from stdin": "还从标准输入读取联系地址",
    "unable to parse contact: %s": "不能解析联系地址：%s",
    "no contacts specified": "未指定联系地址",
    "git checkout-index [<options>] [--] [<file>...]": "git checkout-index [<选项>] [--] [<文件>...]",
    "stage should be between 1 and 3 or all": "索引值应该取值 1 到 3 或者 all",
    "check out all files in the index": "检出索引区的所有文件",
    "force overwrite of existing files": "强制覆盖现有的文件",
    "no warning for existing files and files not in index": "存在或不在索引中的文件都没有警告",
    "don't checkout new files": "不检出新文件",
    "update stat information in the index file": "更新索引中文件的状态信息",
    "read list of paths from the standard input": "从标准输入读取路径列表",
    "write the content to temporary files": "将内容写入临时文件",
    "string": "字符串",
    "when creating files, prepend <string>": "在创建文件时，在前面加上 <字符串>",
    "copy out the files from named stage": "从指定暂存区中拷出文件",
    "git checkout [<options>] <branch>": "git checkout [<选项>] <分支>",
    "git checkout [<options>] [<branch>] -- <file>...": "git checkout [<选项>] [<分支>] -- <文件>...",
    "path '%s' does not have our version": "路径 '%s' 没有我们的版本",
    "path '%s' does not have their version": "路径 '%s' 没有他们的版本",
    "path '%s' does not have all necessary versions": "路径 '%s' 没有全部必须的版本",
    "path '%s' does not have necessary versions": "路径 '%s' 没有必须的版本",
    "path '%s': cannot merge": "path '%s'：无法合并",
    "Unable to add merge result for '%s'": "无法为 '%s' 添加合并结果",
    "'%s' cannot be used with updating paths": "'%s' 不能在更新路径时使用",
    "'%s' cannot be used with %s": "'%s' 不能和 %s 同时使用",
    "Cannot update paths and switch to branch '%s' at the same time.": "不能同时更新路径并切换到分支'%s'。",
    "path '%s' is unmerged": "路径 '%s' 未合并",
    "you need to resolve your current index first": "您需要先解决当前索引的冲突",
    "Can not do reflog for '%s': %s\n": "不能对 '%s' 执行 reflog 操作：%s\n",
    "HEAD is now at": "HEAD 目前位于",
    "unable to update HEAD": "不能更新 HEAD",
    "Reset branch '%s'\n": "重置分支 '%s'\n",
    "Already on '%s'\n": "已经位于 '%s'\n",
    "Switched to and reset branch '%s'\n": "切换并重置分支 '%s'\n",
    "Switched to a new branch '%s'\n": "切换到一个新分支 '%s'\n",
    "Switched to branch '%s'\n": "切换到分支 '%s'\n",
    " ... and %d more.\n": " ... 及其它 %d 个。\n",
    "Warning: you are leaving %d commit behind, not connected to\nany of your branches:\n\n%s\n_plural": "警告：您正丢下 %d 个提交，未和任何分支关联：\n\n%s\n",
    "Warning: you are leaving %d commit behind, not connected to\nany of your branches:\n\n%s\n": "警告：您正丢下 %d 个提交，未和任何分支关联：\n\n%s\n",
    "If you want to keep it by creating a new branch, this may be a good time\nto do so with:\n\n git branch <new-branch-name> %s\n\n_plural": "如果您想要通过创建新分支保存它，这可能是一个好时候。\n如下操作：\n\n git branch <新分支名> %s\n\n",
    "If you want to keep it by creating a new branch, this may be a good time\nto do so with:\n\n git branch <new-branch-name> %s\n\n": "如果您想要通过创建新分支保存它们，这可能是一个好时候。\n如下操作：\n\n git branch <新分支名> %s\n\n",
    "internal error in revision walk": "在版本遍历时遇到内部错误",
    "Previous HEAD position was": "之前的 HEAD 位置是",
    "You are on a branch yet to be born": "您位于一个尚未初始化的分支",
    "only one reference expected, %d given.": "应只有一个引用，却给出了 %d 个",
    "invalid reference: %s": "无效引用：%s",
    "reference is not a tree: %s": "引用不是一个树：%s",
    "paths cannot be used with switching branches": "路径不能和切换分支同时使用",
    "'%s' cannot be used with switching branches": "'%s' 不能和切换分支同时使用",
    "'%s' cannot be used with '%s'": "'%s' 不能和 '%s' 同时使用",
    "Cannot switch branch to a non-commit '%s'": "不能切换分支到一个非提交 '%s'",
    "branch": "分支",
    "create and checkout a new branch": "创建并检出一个新的分支",
    "create/reset and checkout a branch": "创建/重置并检出一个分支",
    "create reflog for new branch": "为新的分支创建引用日志",
    "detach HEAD at named commit": "HEAD 从指定的提交分离",
    "set upstream info for new branch": "为新的分支设置上游信息",
    "new-branch": "新分支",
    "new unparented branch": "新的没有父提交的分支",
    "checkout our version for unmerged files": "对尚未合并的文件检出我们的版本",
    "checkout their version for unmerged files": "对尚未合并的文件检出他们的版本",
    "force checkout (throw away local modifications)": "强制检出（丢弃本地修改）",
    "perform a 3-way merge with the new branch": "和新的分支执行三方合并",
    "update ignored files (default)": "更新忽略的文件（默认）",
    "style": "风格",
    "conflict style (merge or diff3)": "冲突输出风格（merge 或 diff3）",
    "do not limit pathspecs to sparse entries only": "对路径不做稀疏检出的限制",
    "second guess 'git checkout <no-such-branch>'": "二次猜测'git checkout <无此分支>'",
    "do not check if another worktree is holding the given ref": "不检查指定的引用是否被其他工作区所占用",
    "force progress reporting": "强制显示进度报告",
    "-b, -B and --orphan are mutually exclusive": "-b、-B 和 --orphan 是互斥的",
    "--track needs a branch name": "--track 需要一个分支名",
    "Missing branch name; try -b": "缺少分支名；尝试 -b",
    "invalid path specification": "无效的路径规格",
    "Cannot update paths and switch to branch '%s' at the same time.\nDid you intend to checkout '%s' which can not be resolved as commit?": "不能同时更新路径并切换到分支'%s'。\n您是想要检出 '%s' 但其未能解析为提交么？",
    "git checkout: --detach does not take a path argument '%s'": "git checkout：--detach 不能接收路径参数 '%s'",
    "git checkout: --ours/--theirs, --force and --merge are incompatible when\nchecking out of the index.": "git checkout：在从索引检出时，--ours/--theirs、--force 和 --merge 不兼容。",
    "git clean [-d] [-f] [-i] [-n] [-q] [-e <pattern>] [-x | -X] [--] <paths>...": "git clean [-d] [-f] [-i] [-n] [-q] [-e <模式>] [-x | -X] [--] <路径>...",
    "Removing %s\n": "正删除 %s\n",
    "Would remove %s\n": "将删除 %s\n",
    "Skipping repository %s\n": "忽略仓库 %s\n",
    "Would skip repository %s\n": "将忽略仓库 %s\n",
    "failed to remove %s": "无法删除 %s",
    "Prompt help:\n1          - select a numbered item\nfoo        - select item based on unique prefix\n           - (empty) select nothing\n": "帮助：\n1          - 通过编号选择一个选项\nfoo        - 通过唯一前缀选择一个选项\n           - （空）什么也不选择\n",
    "Prompt help:\n1          - select a single item\n3-5        - select a range of items\n2-3,6-9    - select multiple ranges\nfoo        - select item based on unique prefix\n-...       - unselect specified items\n*          - choose all items\n           - (empty) finish selecting\n": "帮助：\n1          - 选择一个选项\n3-5        - 选择一个范围内的所有选项\n2-3,6-9    - 选择多个范围内的所有选项\nfoo        - 通过唯一前缀选择一个选项\n-...       - 反选特定的选项\n*          - 选择所有选项\n           - （空）结束选择\n",
    "Huh (%s)?\n": "嗯（%s）？\n",
    "Input ignore patterns>> ": "输入模版以排除条目>> ",
    "WARNING: Cannot find items matched by: %s": "警告：无法找到和 %s 匹配的条目",
    "Select items to delete": "选择要删除的条目",
    "Remove %s [y/N]? ": "删除 %s [y/N]？",
    "Bye.\n": "再见。\n",
    "clean               - start cleaning\nfilter by pattern   - exclude items from deletion\nselect by numbers   - select items to be deleted by numbers\nask each            - confirm each deletion (like \"rm -i\")\nquit                - stop cleaning\nhelp                - this screen\n?                   - help for prompt selection": "clean               - 开始清理\nfilter by pattern   - 通过模版排除要删除的条目\nselect by numbers   - 通过数字选择要删除的条目\nask each            - 针对删除逐一询问（就像 \"rm -i\"）\nquit                - 停止删除并退出\nhelp                - 显示本帮助\n?                   - 显示如何在提示符下选择的帮助",
    "*** Commands ***": "*** 命令 ***",
    "What now": "请选择",
    "Would remove the following item:_plural": "将删除如下条目：",
    "Would remove the following item:": "将删除如下条目：",
    "No more files to clean, exiting.": "没有要清理的文件，退出。",
    "do not print names of files removed": "不打印删除文件的名称",
    "force": "强制",
    "interactive cleaning": "交互式清除",
    "remove whole directories": "删除整个目录",
    "pattern": "模式",
    "add <pattern> to ignore rules": "添加 <模式> 到忽略规则",
    "remove ignored files, too": "也删除忽略的文件",
    "remove only ignored files": "只删除忽略的文件",
    "-x and -X cannot be used together": "-x 和 -X 不能同时使用",
    "clean.requireForce set to true and neither -i, -n, nor -f given; refusing to clean": "clean.requireForce 设置为 true 且未提供 -i、-n 或 -f 选项，拒绝执行清理动作",
    "clean.requireForce defaults to true and neither -i, -n, nor -f given; refusing to clean": "clean.requireForce 默认为 true 且未提供 -i、-n 或 -f 选项，拒绝执行清理动作",
    "git clone [<options>] [--] <repo> [<dir>]": "git clone [<选项>] [--] <仓库> [<路径>]",
    "don't create a checkout": "不创建一个检出",
    "create a bare repository": "创建一个纯仓库",
    "create a mirror repository (implies bare)": "创建一个镜像仓库（也是纯仓库）",
    "to clone from a local repository": "从本地仓库克隆",
    "don't use local hardlinks, always copy": "不使用本地硬链接，始终复制",
    "setup as shared repository": "设置为共享仓库",
    "initialize submodules in the clone": "在克隆时初始化子模组",
    "number of submodules cloned in parallel": "并发克隆的子模组的数量",
    "template-directory": "模板目录",
    "directory from which templates will be used": "模板目录将被使用",
    "reference repository": "参考仓库",
    "use --reference only while cloning": "仅在克隆时参考 --reference 指向的本地仓库",
    "name": "名称",
    "use <name> instead of 'origin' to track upstream": "使用 <名称> 而不是 'origin' 去跟踪上游",
    "checkout <branch> instead of the remote's HEAD": "检出 <分支> 而不是远程 HEAD",
    "path to git-upload-pack on the remote": "远程 git-upload-pack 路径",
    "depth": "深度",
    "create a shallow clone of that depth": "创建一个指定深度的浅克隆",
    "time": "时间",
    "create a shallow clone since a specific time": "从一个特定时间创建一个浅克隆",
    "revision": "版本",
    "deepen history of shallow clone, excluding rev": "深化浅克隆的历史，除了特定版本",
    "clone only one branch, HEAD or --branch": "只克隆一个分支、HEAD 或 --branch",
    "any cloned submodules will be shallow": "子模组将以浅下载模式克隆",
    "gitdir": "git目录",
    "separate git dir from working tree": "git目录和工作区分离",
    "key=value": "key=value",
    "set config inside the new repository": "在新仓库中设置配置信息",
    "use IPv4 addresses only": "只使用 IPv4 地址",
    "use IPv6 addresses only": "只使用 IPv6 地址",
    "No directory name could be guessed.\nPlease specify a directory on the command line": "无法猜到目录名。\n请在命令行指定一个目录",
    "info: Could not add alternate for '%s': %s\n": "info: 不能为 '%s' 添加一个备用：%s\n",
    "failed to open '%s'": "无法打开 '%s'",
    "%s exists and is not a directory": "%s 存在且不是一个目录",
    "failed to stat %s\n": "无法枚举 %s 状态\n",
    "failed to create link '%s'": "无法创建链接 '%s'",
    "failed to copy file to '%s'": "无法拷贝文件至 '%s'",
    "done.\n": "完成。\n",
    "Clone succeeded, but checkout failed.\nYou can inspect what was checked out with 'git status'\nand retry the checkout with 'git checkout -f HEAD'\n": "克隆成功，但是检出失败。\n您可以通过 'git status' 检查哪些已被检出，然后使用命令\n'git checkout -f HEAD' 重试\n",
    "Could not find remote branch %s to clone.": "不能发现要克隆的远程分支 %s。",
    "remote did not send all necessary objects": "远程没有发送所有必须的对象",
    "unable to update %s": "不能更新 %s",
    "remote HEAD refers to nonexistent ref, unable to checkout.\n": "远程 HEAD 指向一个不存在的引用，无法检出。\n",
    "unable to checkout working tree": "不能检出工作区",
    "unable to write parameters to config file": "无法将参数写入配置文件",
    "cannot repack to clean up": "无法执行 repack 来清理",
    "cannot unlink temporary alternates file": "无法删除临时的 alternates 文件",
    "Too many arguments.": "太多参数。",
    "You must specify a repository to clone.": "您必须指定一个仓库来克隆。",
    "--bare and --origin %s options are incompatible.": "--bare 和 --origin %s 选项不兼容。",
    "--bare and --separate-git-dir are incompatible.": "--bare 和 --separate-git-dir 选项不兼容。",
    "repository '%s' does not exist": "仓库 '%s' 不存在",
    "depth %s is not a positive number": "深度 %s 不是一个正数",
    "destination path '%s' already exists and is not an empty directory.": "目标路径 '%s' 已经存在，并且不是一个空目录。",
    "working tree '%s' already exists.": "工作区 '%s' 已经存在。",
    "could not create leading directories of '%s'": "不能为 '%s' 创建先导目录",
    "could not create work tree dir '%s'": "不能创建工作区目录 '%s'",
    "Cloning into bare repository '%s'...\n": "克隆到纯仓库 '%s'...\n",
    "Cloning into '%s'...\n": "正克隆到 '%s'...\n",
    "clone --recursive is not compatible with both --reference and --reference-if-able": "clone --recursive 和 --reference 以及 --reference-if-able 不兼容",
    "--depth is ignored in local clones; use file:// instead.": "--depth 在本地克隆时被忽略，请改用 file:// 协议。",
    "--shallow-since is ignored in local clones; use file:// instead.": "--shallow-since 在本地克隆时被忽略，请改用 file:// 协议。",
    "--shallow-exclude is ignored in local clones; use file:// instead.": "--shallow-exclude 在本地克隆时被忽略，请改用 file:// 协议。",
    "source repository is shallow, ignoring --local": "源仓库是浅克隆，忽略 --local",
    "--local is ignored": "--local 被忽略",
    "Don't know how to clone %s": "不知道如何克隆 %s",
    "Remote branch %s not found in upstream %s": "远程分支 %s 在上游 %s 未发现",
    "You appear to have cloned an empty repository.": "您似乎克隆了一个空仓库。",
    "git column [<options>]": "git column [<选项>]",
    "lookup config vars": "查找配置变量",
    "layout to use": "要使用的布局",
    "Maximum width": "最大宽度",
    "Padding space on left border": "左边框的填充空间",
    "Padding space on right border": "右边框的填充空间",
    "Padding space between columns": "两列之间的填充空间",
    "--command must be the first argument": "--command 必须是第一个参数",
    "git commit [<options>] [--] <pathspec>...": "git commit [<选项>] [--] <路径规格>...",
    "git status [<options>] [--] <pathspec>...": "git status [<选项>] [--] <路径规格>...",
    "Your name and email address were configured automatically based\non your username and hostname. Please check that they are accurate.\nYou can suppress this message by setting them explicitly. Run the\nfollowing command and follow the instructions in your editor to edit\nyour configuration file:\n\n    git config --global --edit\n\nAfter doing this, you may fix the identity used for this commit with:\n\n    git commit --amend --reset-author\n": "您的姓名和邮件地址基于登录名和主机名进行了自动设置。请检查它们正确\n与否。您可以对其进行设置以免再出现本提示信息。运行如下命令在编辑器\n中编辑您的配置文件：\n\n    git config --global --edit\n\n设置完毕后，您可以用下面的命令来修正本次提交所使用的用户身份：\n\n    git commit --amend --reset-author\n",
    "Your name and email address were configured automatically based\non your username and hostname. Please check that they are accurate.\nYou can suppress this message by setting them explicitly:\n\n    git config --global user.name \"Your Name\"\n    git config --global user.email you@example.com\n\nAfter doing this, you may fix the identity used for this commit with:\n\n    git commit --amend --reset-author\n": "您的姓名和邮件地址基于登录名和主机名进行了自动设置。请检查它们正确\n与否。您可以对其进行设置以免再出现本提示信息：\n\n    git config --global user.name \"Your Name\"\n    git config --global user.email you@example.com\n\n设置完毕后，您可以用下面的命令来修正本次提交所使用的用户身份：\n\n    git commit --amend --reset-author\n",
    "You asked to amend the most recent commit, but doing so would make\nit empty. You can repeat your command with --allow-empty, or you can\nremove the commit entirely with \"git reset HEAD^\".\n": "您要修补最近的提交，但这么做会让它成为空提交。您可以重复您的命令并带上\n--allow-empty 选项，或者您可用命令 \"git reset HEAD^\" 整个删除该提交。\n",
    "The previous cherry-pick is now empty, possibly due to conflict resolution.\nIf you wish to commit it anyway, use:\n\n    git commit --allow-empty\n\n": "之前的拣选操作现在是一个空提交，可能是由冲突解决导致的。如果您无论如何\n也要提交，使用命令：\n\n    git commit --allow-empty\n\n",
    "Otherwise, please use 'git reset'\n": "否则，请使用命令 'git reset'\n",
    "If you wish to skip this commit, use:\n\n    git reset\n\nThen \"git cherry-pick --continue\" will resume cherry-picking\nthe remaining commits.\n": "如果您想跳过这个提交，使用命令：\n\n    git reset\n\n然后执行 \"git cherry-pick --continue\" 继续对其余提交执行拣选\n操作。\n",
    "failed to unpack HEAD tree object": "无法解包 HEAD 树对象",
    "unable to create temporary index": "不能创建临时索引",
    "interactive add failed": "交互式添加失败",
    "unable to update temporary index": "无法更新临时索引",
    "Failed to update main cache tree": "不能更新树的主缓存",
    "unable to write new_index file": "无法写 new_index 文件",
    "cannot do a partial commit during a merge.": "在合并过程中不能做部分提交。",
    "cannot do a partial commit during a cherry-pick.": "在拣选过程中不能做部分提交。",
    "cannot read the index": "无法读取索引",
    "unable to write temporary index file": "无法写临时索引文件",
    "commit '%s' lacks author header": "提交 '%s' 缺少作者信息",
    "commit '%s' has malformed author line": "提交 '%s' 有非法的作者信息",
    "malformed --author parameter": "非法的 --author 参数",
    "invalid date format: %s": "无效的日期格式：%s",
    "unable to select a comment character that is not used\nin the current commit message": "无法选择一个未被当前提交说明使用的注释字符",
    "could not lookup commit %s": "不能查询提交 %s",
    "(reading log message from standard input)\n": "（正从标准输入中读取日志信息）\n",
    "could not read log from standard input": "不能从标准输入中读取日志信息",
    "could not read log file '%s'": "不能读取日志文件 '%s'",
    "could not read SQUASH_MSG": "不能读取 SQUASH_MSG",
    "could not read MERGE_MSG": "不能读取 MERGE_MSG",
    "could not write commit template": "不能写提交模版",
    "\nIt looks like you may be committing a merge.\nIf this is not correct, please remove the file\n\t%s\nand try again.\n": "\n似乎您正在做一个合并提交。如果不对，请删除文件\n\t%s\n然后重试。\n",
    "\nIt looks like you may be committing a cherry-pick.\nIf this is not correct, please remove the file\n\t%s\nand try again.\n": "\n似乎您正在做一个拣选提交。如果不对，请删除文件\n\t%s\n然后重试。\n",
    "Please enter the commit message for your changes. Lines starting\nwith '%c' will be ignored, and an empty message aborts the commit.\n": "请为您的变更输入提交说明。以 '%c' 开始的行将被忽略，而一个空的提交\n说明将会终止提交。\n",
    "Please enter the commit message for your changes. Lines starting\nwith '%c' will be kept; you may remove them yourself if you want to.\nAn empty message aborts the commit.\n": "请为您的变更输入提交说明。以 '%c' 开始的行将被保留，如果您原意\n也可以删除它们。一个空的提交说明将会终止提交。\n",
    "%sAuthor:    %.*s <%.*s>": "%s作者：  %.*s <%.*s>",
    "%sDate:      %s": "%s日期：  %s",
    "%sCommitter: %.*s <%.*s>": "%s提交者：%.*s <%.*s>",
    "Cannot read index": "无法读取索引",
    "Error building trees": "无法创建树对象",
    "Please supply the message using either -m or -F option.\n": "请使用 -m 或 -F 选项提供提交说明。\n",
    "--author '%s' is not 'Name <email>' and matches no existing author": "--author '%s' 不是 'Name <email>' 格式，且未能在现有作者中找到匹配",
    "Invalid untracked files mode '%s'": "无效的未追踪文件参数 '%s'",
    "--long and -z are incompatible": "--long 和 -z 选项不兼容",
    "Using both --reset-author and --author does not make sense": "同时使用 --reset-author 和 --author 没有意义",
    "You have nothing to amend.": "您没有可修补的提交。",
    "You are in the middle of a merge -- cannot amend.": "您正处于一个合并过程中 -- 无法修补提交。",
    "You are in the middle of a cherry-pick -- cannot amend.": "您正处于一个拣选过程中 -- 无法修补提交。",
    "Options --squash and --fixup cannot be used together": "选项 --squash 和 --fixup 不能同时使用",
    "Only one of -c/-C/-F/--fixup can be used.": "只能用一个 -c/-C/-F/--fixup 选项。",
    "Option -m cannot be combined with -c/-C/-F/--fixup.": "选项 -m 不能和 -c/-C/-F/--fixup 同时使用。",
    "--reset-author can be used only with -C, -c or --amend.": "--reset-author 只能和 -C、-c 或 --amend 同时使用。",
    "Only one of --include/--only/--all/--interactive/--patch can be used.": "只能用一个 --include/--only/--all/--interactive/--patch 选项。",
    "No paths with --include/--only does not make sense.": "参数 --include/--only 不跟路径没有意义。",
    "Explicit paths specified without -i or -o; assuming --only paths...": "指定了明确的路径而没有使用 -i 或 -o 选项，认为是 --only paths...",
    "Invalid cleanup mode %s": "无效的清理模式 %s",
    "Paths with -a does not make sense.": "路径和 -a 选项同时使用没有意义。",
    "show status concisely": "以简洁的格式显示状态",
    "show branch information": "显示分支信息",
    "version": "版本",
    "machine-readable output": "机器可读的输出",
    "show status in long format (default)": "以长格式显示状态（默认）",
    "terminate entries with NUL": "条目以 NUL 字符结尾",
    "mode": "模式",
    "show untracked files, optional modes: all, normal, no. (Default: all)": "显示未跟踪的文件，“模式”的可选参数：all、normal、no。（默认：all）",
    "show ignored files": "显示忽略的文件",
    "when": "何时",
    "ignore changes to submodules, optional when: all, dirty, untracked. (Default: all)": "忽略子模组的更改，“何时”的可选参数：all、dirty、untracked。（默认：all）",
    "list untracked files in columns": "以列的方式显示未跟踪的文件",
    "couldn't look up newly created commit": "无法找到新创建的提交",
    "could not parse newly created commit": "不能解析新创建的提交",
    "detached HEAD": "分离头指针",
    " (root-commit)": "（根提交）",
    "suppress summary after successful commit": "提交成功后不显示概述信息",
    "show diff in commit message template": "在提交说明模板里显示差异",
    "Commit message options": "提交说明选项",
    "read message from file": "从文件中读取提交说明",
    "author": "作者",
    "override author for commit": "提交时覆盖作者",
    "date": "日期",
    "override date for commit": "提交时覆盖日期",
    "message": "说明",
    "commit message": "提交说明",
    "commit": "提交",
    "reuse and edit message from specified commit": "重用并编辑指定提交的提交说明",
    "reuse message from specified commit": "重用指定提交的提交说明",
    "use autosquash formatted message to fixup specified commit": "使用 autosquash 格式的提交说明用以修正指定的提交",
    "use autosquash formatted message to squash specified commit": "使用 autosquash 格式的提交说明用以压缩至指定的提交",
    "the commit is authored by me now (used with -C/-c/--amend)": "现在将该提交的作者改为我（和 -C/-c/--amend 参数共用）",
    "add Signed-off-by:": "添加 Signed-off-by: 签名",
    "use specified template file": "使用指定的模板文件",
    "force edit of commit": "强制编辑提交",
    "default": "default",
    "how to strip spaces and #comments from message": "设置如何删除提交说明里的空格和#注释",
    "include status in commit message template": "在提交说明模板里包含状态信息",
    "GPG sign commit": "GPG 提交签名",
    "Commit contents options": "提交内容选项",
    "commit all changed files": "提交所有改动的文件",
    "add specified files to index for commit": "添加指定的文件到索引区等待提交",
    "interactively add files": "交互式添加文件",
    "interactively add changes": "交互式添加变更",
    "commit only specified files": "只提交指定的文件",
    "bypass pre-commit and commit-msg hooks": "绕过 pre-commit 和 commit-msg 钩子",
    "show what would be committed": "显示将要提交的内容",
    "amend previous commit": "修改先前的提交",
    "bypass post-rewrite hook": "绕过 post-rewrite 钩子",
    "ok to record an empty change": "允许一个空提交",
    "ok to record a change with an empty message": "允许空的提交说明",
    "could not parse HEAD commit": "不能解析 HEAD 提交",
    "Corrupt MERGE_HEAD file (%s)": "损坏的 MERGE_HEAD 文件（%s）",
    "could not read MERGE_MODE": "不能读取 MERGE_MODE",
    "could not read commit message: %s": "不能读取提交说明：%s",
    "Aborting commit; you did not edit the message.\n": "终止提交；您未更改来自模版的提交说明。\n",
    "Aborting commit due to empty commit message.\n": "终止提交因为提交说明为空。\n",
    "Repository has been updated, but unable to write\nnew_index file. Check that disk is not full and quota is\nnot exceeded, and then \"git reset HEAD\" to recover.": "仓库已更新，但无法写 new_index 文件。检查是否磁盘已满\n或磁盘配额已耗尽，然后执行 \"git reset HEAD\" 恢复。",
    "git config [<options>]": "git config [<选项>]",
    "Config file location": "配置文件位置",
    "use global config file": "使用全局配置文件",
    "use system config file": "使用系统级配置文件",
    "use repository config file": "使用仓库级配置文件",
    "use given config file": "使用指定的配置文件",
    "blob-id": "数据对象 ID",
    "read config from given blob object": "从给定的数据对象读取配置",
    "Action": "操作",
    "get value: name [value-regex]": "获取值：name [value-regex]",
    "get all values: key [value-regex]": "获得所有的值：key [value-regex]",
    "get values for regexp: name-regex [value-regex]": "根据正则表达式获得值：name-regex [value-regex]",
    "get value specific for the URL: section[.var] URL": "获得 URL 取值：section[.var] URL",
    "replace all matching variables: name value [value_regex]": "替换所有匹配的变量：name value [value_regex]",
    "add a new variable: name value": "添加一个新的变量：name value",
    "remove a variable: name [value-regex]": "删除一个变量：name [value-regex]",
    "remove all matches: name [value-regex]": "删除所有匹配项：name [value-regex]",
    "rename section: old-name new-name": "重命名小节：old-name new-name",
    "remove a section: name": "删除一个小节：name",
    "list all": "列出所有",
    "open an editor": "打开一个编辑器",
    "find the color configured: slot [default]": "获得配置的颜色：配置 [默认]",
    "find the color setting: slot [stdout-is-tty]": "获得颜色设置：配置 [stdout-is-tty]",
    "Type": "类型",
    "value is \"true\" or \"false\"": "值是 \"true\" 或 \"false\"",
    "value is decimal number": "值是十进制数",
    "value is --bool or --int": "值是 --bool or --int",
    "value is a path (file or directory name)": "值是一个路径（文件或目录名）",
    "Other": "其它",
    "terminate values with NUL byte": "终止值是 NUL 字节",
    "show variable names only": "只显示变量名",
    "respect include directives on lookup": "查询时参照 include 指令递归查找",
    "show origin of config (file, standard input, blob, command line)": "显示配置的来源（文件、标准输入、数据对象，或命令行）",
    "unable to parse default color value": "不能解析默认颜色值",
    "# This is Git's per-user configuration file.\n[user]\n# Please adapt and uncomment the following lines:\n#\tname = %s\n#\temail = %s\n": "# This is Git's per-user configuration file.\n[user]\n# Please adapt and uncomment the following lines:\n#\tname = %s\n#\temail = %s\n",
    "cannot create configuration file %s": "不能创建配置文件 %s",
    "cannot overwrite multiple values with a single value\n       Use a regexp, --add or --replace-all to change %s.": "无法用一个值覆盖多个值\n       使用一个正则表达式、--add 或 --replace-all 来修改 %s。",
    "git count-objects [-v] [-H | --human-readable]": "git count-objects [-v] [-H | --human-readable]",
    "print sizes in human readable format": "以用户可读的格式显示大小",
    "git describe [<options>] [<commit-ish>...]": "git describe [<选项>] [<提交号>...]",
    "git describe [<options>] --dirty": "git describe [<选项>] --dirty",
    "annotated tag %s not available": "附注标签 %s 无效",
    "annotated tag %s has no embedded name": "附注标签 %s 没有嵌入名称",
    "tag '%s' is really '%s' here": "标签 '%s' 的确是在 '%s'",
    "Not a valid object name %s": "不是一个有效的对象名 %s",
    "%s is not a valid '%s' object": "%s 不是一个有效的 '%s' 对象",
    "no tag exactly matches '%s'": "没有标签准确匹配 '%s'",
    "searching to describe %s\n": "搜索描述 %s\n",
    "finished search at %s\n": "完成搜索 %s\n",
    "No annotated tags can describe '%s'.\nHowever, there were unannotated tags: try --tags.": "没有附注标签能描述 '%s'。\n然而，存在未附注标签：尝试 --tags。",
    "No tags can describe '%s'.\nTry --always, or create some tags.": "没有标签能描述 '%s'。\n尝试 --always，或者创建一些标签。",
    "traversed %lu commits\n": "已遍历 %lu 个提交\n",
    "more than %i tags found; listed %i most recent\ngave up search at %s\n": "发现多于 %i 个标签，列出最近的 %i 个\n在 %s 放弃搜索\n",
    "find the tag that comes after the commit": "寻找该提交之后的标签",
    "debug search strategy on stderr": "在标准错误上调试搜索策略",
    "use any ref": "使用任意引用",
    "use any tag, even unannotated": "使用任意标签，即使未附带注释",
    "always use long format": "始终使用长提交号格式",
    "only follow first parent": "只跟随第一个父提交",
    "only output exact matches": "只输出精确匹配",
    "consider <n> most recent tags (default: 10)": "考虑最近 <n> 个标签（默认：10）",
    "only consider tags matching <pattern>": "只考虑匹配 <模式> 的标签",
    "show abbreviated commit object as fallback": "显示简写的提交号作为后备",
    "mark": "标记",
    "append <mark> on dirty working tree (default: \"-dirty\")": "对于脏工作区，追加 <标记>（默认：\"-dirty\"）",
    "--long is incompatible with --abbrev=0": "--long 与 --abbrev=0 不兼容",
    "No names found, cannot describe anything.": "没有发现名称，无法描述任何东西。",
    "--dirty is incompatible with commit-ishes": "--dirty 不能与提交同时使用",
    "'%s': not a regular file or symlink": "'%s'：不是一个正规文件或符号链接",
    "invalid option: %s": "无效选项：%s",
    "Not a git repository": "不是一个 git 仓库",
    "invalid object '%s' given.": "提供了无效对象 '%s'。",
    "more than two blobs given: '%s'": "提供了超过两个数据对象：'%s'",
    "unhandled object '%s' given.": "无法处理的对象 '%s'。",
    "git difftool [<options>] [<commit> [<commit>]] [--] [<path>...]": "git difftool [<选项>] [<提交> [<提交>]] [--] [<路径>...]",
    "failed: %d": "失败：%d",
    "combined diff formats('-c' and '--cc') are not supported in\ndirectory diff mode('-d' and '--dir-diff').": "不支持在目录比较模式（'-d' 和 '--dir-diff'）中采用组合差异格式（'-c' 和 '--cc'）。",
    "both files modified: '%s' and '%s'.": "两个文件都被修改：'%s' 和 '%s'。",
    "working tree file has been left.": "工作区文件被留了下来。",
    "temporary files exist in '%s'.": "临时文件存在于 '%s'。",
    "you may want to cleanup or recover these.": "您可能想要清理或者恢复它们。",
    "use `diff.guitool` instead of `diff.tool`": "使用 `diff.guitool` 代替 `diff.tool`",
    "perform a full-directory diff": "执行一个全目录差异比较",
    "do not prompt before launching a diff tool": "启动差异比较工具之前不提示",
    "use symlinks in dir-diff mode": "在 dir-diff 模式中使用符号链接",
    "<tool>": "<工具>",
    "use the specified diff tool": "使用指定的差异比较工具",
    "print a list of diff tools that may be used with `--tool`": "显示可以用在 `--tool` 参数后的差异工具列表",
    "make 'git-difftool' exit when an invoked diff tool returns a non - zero exit code": "当执行 diff 工具返回非零退出码时，使 'git-difftool' 退出",
    "<command>": "<命令>",
    "specify a custom command for viewing diffs": "指定一个用于查看差异的自定义命令",
    "no <tool> given for --tool=<tool>": "没有为 --tool=<工具> 参数提供 <工具>",
    "no <cmd> given for --extcmd=<cmd>": "没有为 --extcmd=<命令> 参数提供 <命令>",
    "git fast-export [rev-list-opts]": "git fast-export [rev-list-opts]",
    "show progress after <n> objects": "在 <n> 个对象之后显示进度",
    "select handling of signed tags": "选择如何处理签名标签",
    "select handling of tags that tag filtered objects": "选择当标签指向被过滤对象时该标签的处理方式",
    "Dump marks to this file": "把标记存储到这个文件",
    "Import marks from this file": "从这个文件导入标记",
    "Fake a tagger when tags lack one": "当标签缺少标记者字段时，假装提供一个",
    "Output full tree for each commit": "每次提交都输出整个树",
    "Use the done feature to terminate the stream": "使用 done 功能来终止流",
    "Skip output of blob data": "跳过数据对象的输出",
    "refspec": "引用规格",
    "Apply refspec to exported refs": "对导出的引用应用引用规格",
    "anonymize output": "匿名输出",
    "git fetch [<options>] [<repository> [<refspec>...]]": "git fetch [<选项>] [<仓库> [<引用规格>...]]",
    "git fetch [<options>] <group>": "git fetch [<选项>] <组>",
    "git fetch --multiple [<options>] [(<repository> | <group>)...]": "git fetch --multiple [<选项>] [(<仓库> | <组>)...]",
    "git fetch --all [<options>]": "git fetch --all [<选项>]",
    "fetch from all remotes": "从所有的远程抓取",
    "append to .git/FETCH_HEAD instead of overwriting": "追加到 .git/FETCH_HEAD 而不是覆盖它",
    "path to upload pack on remote end": "上传包到远程的路径",
    "force overwrite of local branch": "强制覆盖本地分支",
    "fetch from multiple remotes": "从多个远程抓取",
    "fetch all tags and associated objects": "抓取所有的标签和关联对象",
    "do not fetch all tags (--no-tags)": "不抓取任何标签(--no-tags)",
    "number of submodules fetched in parallel": "子模组获取的并发数",
    "prune remote-tracking branches no longer on remote": "清除远程已经不存在的分支的跟踪分支",
    "on-demand": "on-demand",
    "control recursive fetching of submodules": "控制子模组的递归抓取",
    "keep downloaded pack": "保持下载包",
    "allow updating of HEAD ref": "允许更新 HEAD 引用",
    "deepen history of shallow clone": "深化浅克隆的历史",
    "deepen history of shallow repository based on time": "基于时间来深化浅克隆的历史",
    "convert to a complete repository": "转换为一个完整的仓库",
    "dir": "目录",
    "prepend this to submodule path output": "在子模组路径输出的前面加上此目录",
    "default mode for recursion": "递归的默认模式",
    "accept refs that update .git/shallow": "接受更新 .git/shallow 的引用",
    "refmap": "引用映射",
    "specify fetch refmap": "指定获取操作的引用映射",
    "Couldn't find remote ref HEAD": "无法发现远程 HEAD 引用",
    "configuration fetch.output contains invalid value %s": "配置变量 fetch.output 包含无效值 %s",
    "object %s not found": "对象 %s 未发现",
    "[up to date]": "[最新]",
    "[rejected]": "[已拒绝]",
    "can't fetch in current branch": "当前分支下不能执行获取操作",
    "[tag update]": "[标签更新]",
    "unable to update local ref": "不能更新本地引用",
    "[new tag]": "[新标签]",
    "[new branch]": "[新分支]",
    "[new ref]": "[新引用]",
    "forced update": "强制更新",
    "non-fast-forward": "非快进",
    "%s did not send all necessary objects\n": "%s 未发送所有必须的对象\n",
    "reject %s because shallow roots are not allowed to be updated": "拒绝 %s 因为浅克隆不允许被更新",
    "From %.*s\n": "来自 %.*s\n",
    "some local refs could not be updated; try running\n 'git remote prune %s' to remove any old, conflicting branches": "一些本地引用不能被更新；尝试运行\n 'git remote prune %s' 来删除旧的、有冲突的分支",
    "   (%s will become dangling)": "   （%s 将成为摇摆状态）",
    "   (%s has become dangling)": "   （%s 已成为摇摆状态）",
    "[deleted]": "[已删除]",
    "(none)": "（无）",
    "Refusing to fetch into current branch %s of non-bare repository": "拒绝获取到非纯仓库的当前分支 %s",
    "Option \"%s\" value \"%s\" is not valid for %s": "选项 \"%s\" 的值 \"%s\" 对于 %s 是无效的",
    "Option \"%s\" is ignored for %s\n": "选项 \"%s\" 为 %s 所忽略\n",
    "Don't know how to fetch from %s": "不知道如何从 %s 获取",
    "Fetching %s\n": "正在获取 %s\n",
    "Could not fetch %s": "不能获取 %s",
    "No remote repository specified.  Please, specify either a URL or a\nremote name from which new revisions should be fetched.": "未指定远程仓库。请通过一个 URL 或远程仓库名指定，用以获取新提交。",
    "You need to specify a tag name.": "您需要指定一个标签名称。",
    "Negative depth in --deepen is not supported": "--deepen 不支持负数深度",
    "--deepen and --depth are mutually exclusive": "--deepen 和 --depth 是互斥的",
    "--depth and --unshallow cannot be used together": "--depth 和 --unshallow 不能同时使用",
    "--unshallow on a complete repository does not make sense": "对于一个完整的仓库，参数 --unshallow 没有意义",
    "fetch --all does not take a repository argument": "fetch --all 不能带一个仓库参数",
    "fetch --all does not make sense with refspecs": "fetch --all 带引用规格没有任何意义",
    "No such remote or remote group: %s": "没有这样的远程或远程组：%s",
    "Fetching a group and specifying refspecs does not make sense": "获取组并指定引用规格没有意义",
    "git fmt-merge-msg [-m <message>] [--log[=<n>] | --no-log] [--file <file>]": "git fmt-merge-msg [-m <说明>] [--log[=<n>] | --no-log] [--file <文件>]",
    "populate log with at most <n> entries from shortlog": "向提交说明中最多复制指定条目（合并而来的提交）的简短说明",
    "alias for --log (deprecated)": "参数 --log 的别名（已弃用）",
    "text": "文本",
    "use <text> as start of message": "使用 <文本> 作为提交说明的开始",
    "file to read from": "从文件中读取",
    "git for-each-ref [<options>] [<pattern>]": "git for-each-ref [<选项>] [<模式>]",
    "git for-each-ref [--points-at <object>]": "git for-each-ref [--points-at <对象>]",
    "git for-each-ref [(--merged | --no-merged) [<object>]]": "git for-each-ref [(--merged | --no-merged) [<对象>]]",
    "git for-each-ref [--contains [<object>]]": "git for-each-ref [--contains [<对象>]]",
    "quote placeholders suitably for shells": "引用占位符适用于 shells",
    "quote placeholders suitably for perl": "引用占位符适用于 perl",
    "quote placeholders suitably for python": "引用占位符适用于 python",
    "quote placeholders suitably for Tcl": "引用占位符适用于 Tcl",
    "show only <n> matched refs": "只显示 <n> 个匹配的引用",
    "format to use for the output": "输出格式",
    "print only refs which points at the given object": "只打印指向给定对象的引用",
    "print only refs that are merged": "只打印已经合并的引用",
    "print only refs that are not merged": "只打印没有合并的引用",
    "print only refs which contain the commit": "只打印包含该提交的引用",
    "Checking object directories": "检查对象目录中",
    "git fsck [<options>] [<object>...]": "git fsck [<选项>] [<对象>...]",
    "show unreachable objects": "显示不可达的对象",
    "show dangling objects": "显示摇摆的对象",
    "report tags": "报告标签",
    "report root nodes": "报告根节点",
    "make index objects head nodes": "将索引亦作为检查的头节点",
    "make reflogs head nodes (default)": "将引用日志作为检查的头节点（默认）",
    "also consider packs and alternate objects": "也考虑包和备用对象",
    "check only connectivity": "仅检查连通性",
    "enable more strict checking": "启用更严格的检查",
    "write dangling objects in .git/lost-found": "将摇摆对象写入 .git/lost-found 中",
    "show progress": "显示进度",
    "show verbose names for reachable objects": "显示可达对象的详细名称",
    "Checking objects": "检查对象中",
    "git gc [<options>]": "git gc [<选项>]",
    "Invalid %s: '%s'": "无效 %s：'%s'",
    "insanely long object directory %.*s": "不正常的长对象目录 %.*s",
    "The last gc run reported the following. Please correct the root cause\nand remove %s.\nAutomatic cleanup will not be performed until the file is removed.\n\n%s": "最后一次 gc 操作报告如下信息。请检查原因并删除 %s。\n在该文件被删除之前，自动清理将不会执行。\n\n%s",
    "prune unreferenced objects": "清除未引用的对象",
    "be more thorough (increased runtime)": "更彻底（增加运行时间）",
    "enable auto-gc mode": "启用自动垃圾回收模式",
    "force running gc even if there may be another gc running": "强制执行 gc 即使另外一个 gc 正在执行",
    "Auto packing the repository in background for optimum performance.\n": "自动在后台执行仓库打包以求最佳性能。\n",
    "Auto packing the repository for optimum performance.\n": "自动打包仓库以求最佳性能。\n",
    "See \"git help gc\" for manual housekeeping.\n": "手工维护参见 \"git help gc\"。\n",
    "gc is already running on machine '%s' pid %<PRIuMAX> (use --force if not)": "已经有一个 gc 正运行在机器 '%s' pid %<PRIuMAX>（如果不是，使用 --force）",
    "There are too many unreachable loose objects; run 'git prune' to remove them.": "有太多不可达的松散对象，运行 'git prune' 删除它们。",
    "git grep [<options>] [-e] <pattern> [<rev>...] [[--] <path>...]": "git grep [<选项>] [-e] <模式> [<版本>...] [[--] <路径>...]",
    "grep: failed to create thread: %s": "grep：无法创建线程：%s",
    "invalid number of threads specified (%d) for %s": "为 %2$s 设定的线程数 (%1$d) 无效",
    "unable to read tree (%s)": "无法读取树（%s）",
    "unable to grep from object of type %s": "无法抓取来自于 %s 类型的对象",
    "switch `%c' expects a numerical value": "开关 `%c' 期望一个数字值",
    "search in index instead of in the work tree": "在索引区搜索而不是在工作区",
    "find in contents not managed by git": "在未被 git 管理的内容中查找",
    "search in both tracked and untracked files": "在跟踪和未跟踪的文件中搜索",
    "ignore files specified via '.gitignore'": "忽略 '.gitignore' 包含的文件",
    "recursivley search in each submodule": "在每一个子模组中递归搜索",
    "basename": "基本名",
    "prepend parent project's basename to output": "在输出中以父项目的基本名为前缀",
    "show non-matching lines": "显示未匹配的行",
    "case insensitive matching": "不区分大小写匹配",
    "match patterns only at word boundaries": "只在单词边界匹配模式",
    "process binary files as text": "把二进制文件当做文本处理",
    "don't match patterns in binary files": "不在二进制文件中匹配模式",
    "process binary files with textconv filters": "用 textconv 过滤器处理二进制文件",
    "descend at most <depth> levels": "最多以指定的深度向下寻找",
    "use extended POSIX regular expressions": "使用扩展的 POSIX 正则表达式",
    "use basic POSIX regular expressions (default)": "使用基本的 POSIX 正则表达式（默认）",
    "interpret patterns as fixed strings": "把模式解析为固定的字符串",
    "use Perl-compatible regular expressions": "使用 Perl 兼容的正则表达式",
    "show line numbers": "显示行号",
    "don't show filenames": "不显示文件名",
    "show filenames": "显示文件名",
    "show filenames relative to top directory": "显示相对于顶级目录的文件名",
    "show only filenames instead of matching lines": "只显示文件名而不显示匹配的行",
    "synonym for --files-with-matches": "和 --files-with-matches 同义",
    "show only the names of files without match": "只显示未匹配的文件名",
    "print NUL after filenames": "在文件名后输出 NUL 字符",
    "show the number of matches instead of matching lines": "显示总匹配行数，而不显示匹配的行",
    "highlight matches": "高亮显示匹配项",
    "print empty line between matches from different files": "在不同文件的匹配项之间打印空行",
    "show filename only once above matches from same file": "只在同一文件的匹配项的上面显示一次文件名",
    "show <n> context lines before and after matches": "显示匹配项前后的 <n> 行上下文",
    "show <n> context lines before matches": "显示匹配项前 <n> 行上下文",
    "show <n> context lines after matches": "显示匹配项后 <n> 行上下文",
    "use <n> worker threads": "使用 <n> 个工作线程",
    "shortcut for -C NUM": "快捷键 -C 数字",
    "show a line with the function name before matches": "在匹配的前面显示一行函数名",
    "show the surrounding function": "显示所在函数的前后内容",
    "read patterns from file": "从文件读取模式",
    "match <pattern>": "匹配 <模式>",
    "combine patterns specified with -e": "组合用 -e 参数设定的模式",
    "indicate hit with exit status without output": "不输出，而用退出码标识命中状态",
    "show only matches from files that match all patterns": "只显示匹配所有模式的文件中的匹配",
    "show parse tree for grep expression": "显示 grep 表达式的解析树",
    "pager": "分页",
    "show matching files in the pager": "分页显示匹配的文件",
    "allow calling of grep(1) (ignored by this build)": "允许调用 grep(1)（本次构建忽略）",
    "no pattern given.": "未提供模式匹配。",
    "invalid number of threads specified (%d)": "指定的线程数无效（%d）",
    "--open-files-in-pager only works on the worktree": "--open-files-in-pager 仅用于工作区",
    "option not supported with --recurse-submodules.": "选项不支持和 --recurse-submodules 共用。",
    "--cached or --untracked cannot be used with --no-index.": "--cached 或 --untracked 不能与 --no-index 同时使用。",
    "--no-index or --untracked cannot be used with revs.": "--no-index 或 --untracked 不能和版本同时使用。",
    "--[no-]exclude-standard cannot be used for tracked contents.": "--[no-]exclude-standard 不能用于已跟踪内容。",
    "both --cached and trees are given.": "同时给出了 --cached 和树对象。",
    "git hash-object [-t <type>] [-w] [--path=<file> | --no-filters] [--stdin] [--] <file>...": "git hash-object [-t <类型>] [-w] [--path=<文件> | --no-filters] [--stdin] [--] <文件>...",
    "git hash-object  --stdin-paths": "git hash-object  --stdin-paths",
    "type": "类型",
    "object type": "对象类型",
    "write the object into the object database": "将对象写入对象数据库",
    "read the object from stdin": "从标准输入读取对象",
    "store file as is without filters": "原样存储文件不使用过滤器",
    "just hash any random garbage to create corrupt objects for debugging Git": "允许对任意随机垃圾数据做散列来创建损坏的对象以便调试 Git",
    "process file as it were from this path": "处理文件并假设其来自于此路径",
    "print all available commands": "打印所有可用的命令",
    "exclude guides": "排除向导",
    "print list of useful guides": "显示有用的指南列表",
    "show man page": "显示 man 手册",
    "show manual in web browser": "在 web 浏览器中显示手册",
    "show info page": "显示 info 手册",
    "git help [--all] [--guides] [--man | --web | --info] [<command>]": "git help [--all] [--guides] [--man | --web | --info] [<命令>]",
    "unrecognized help format '%s'": "未能识别的帮助格式 '%s'",
    "Failed to start emacsclient.": "无法启动 emacsclient。",
    "Failed to parse emacsclient version.": "无法解析 emacsclient 版本。",
    "emacsclient version '%d' too old (< 22).": "emacsclient 版本 '%d' 太老（< 22）。",
    "failed to exec '%s'": "无法执行 '%s'",
    "'%s': path for unsupported man viewer.\nPlease consider using 'man.<tool>.cmd' instead.": "'%s'：不支持的 man 手册查看器的路径。\n请使用 'man.<工具>.cmd'。",
    "'%s': cmd for supported man viewer.\nPlease consider using 'man.<tool>.path' instead.": "'%s': 支持的 man 手册查看器命令。\n请使用 'man.<工具>.path'。",
    "'%s': unknown man viewer.": "'%s'：未知的 man 查看器。",
    "no man viewer handled the request": "没有 man 查看器处理此请求",
    "no info viewer handled the request": "没有 info 查看器处理此请求",
    "Defining attributes per path": "定义路径的属性",
    "Everyday Git With 20 Commands Or So": "每一天 Git 常用的约 20 条命令",
    "A Git glossary": "Git 词汇表",
    "Specifies intentionally untracked files to ignore": "忽略指定的未跟踪文件",
    "Defining submodule properties": "定义子模组属性",
    "Specifying revisions and ranges for Git": "指定 Git 的版本和版本范围",
    "A tutorial introduction to Git (for version 1.5.1 or newer)": "一个 Git 教程（针对 1.5.1 或更新版本）",
    "An overview of recommended workflows with Git": "Git 推荐的工作流概览",
    "The common Git guides are:\n": "最常用的 Git 向导有：\n",
    "`git %s' is aliased to `%s'": "`git %s' 是 `%s' 的别名",
    "usage: %s%s": "用法：%s%s",
    "unable to open %s": "不能打开 %s",
    "object type mismatch at %s": "%s 的对象类型不匹配",
    "did not receive expected object %s": "未能获取预期的对象 %s",
    "object %s: expected type %s, found %s": "对象 %s：应为类型 %s，却是 %s",
    "cannot fill %d byte_plural": "无法填充 %d 字节",
    "cannot fill %d byte": "无法填充 %d 字节",
    "early EOF": "过早的文件结束符（EOF）",
    "read error on input": "输入上的读错误",
    "used more bytes than were available": "用掉了超过可用的字节",
    "pack too large for current definition of off_t": "包太大超过了当前 off_t 的定义",
    "pack exceeds maximum allowed size": "包超过了最大允许值",
    "unable to create '%s'": "不能创建 '%s'",
    "cannot open packfile '%s'": "无法打开包文件 '%s'",
    "pack signature mismatch": "包签名不匹配",
    "pack version %<PRIu32> unsupported": "不支持包版本 %<PRIu32>",
    "pack has bad object at offset %<PRIuMAX>: %s": "包中有错误的对象位于偏移量 %<PRIuMAX>：%s",
    "inflate returned %d": "解压缩返回 %d",
    "offset value overflow for delta base object": "偏移值覆盖了 delta 基准对象",
    "delta base offset is out of bound": "delta 基准偏移越界",
    "unknown object type %d": "未知对象类型 %d",
    "cannot pread pack file": "无法读取包文件",
    "premature end of pack file, %<PRIuMAX> byte missing_plural": "包文件过早结束，缺少 %<PRIuMAX> 字节",
    "premature end of pack file, %<PRIuMAX> byte missing": "包文件过早结束，缺少 %<PRIuMAX> 字节",
    "serious inflate inconsistency": "解压缩严重的不一致",
    "SHA1 COLLISION FOUND WITH %s !": "发现 %s 出现 SHA1 冲突！",
    "unable to read %s": "不能读 %s",
    "cannot read existing object %s": "不能读取现存对象 %s",
    "invalid blob object %s": "无效的数据对象 %s",
    "invalid %s": "无效的 %s",
    "Error in object": "对象中出错",
    "Not all child objects of %s are reachable": "%s 的所有子对象并非都可达",
    "failed to apply delta": "无法应用 delta",
    "Receiving objects": "接收对象中",
    "Indexing objects": "索引对象中",
    "pack is corrupted (SHA1 mismatch)": "包冲突（SHA1 不匹配）",
    "cannot fstat packfile": "不能枚举包文件状态",
    "pack has junk at the end": "包的结尾有垃圾数据",
    "confusion beyond insanity in parse_pack_objects()": "parse_pack_objects() 中遇到不可理喻的问题",
    "Resolving deltas": "处理 delta 中",
    "unable to create thread: %s": "不能创建线程：%s",
    "confusion beyond insanity": "不可理喻",
    "completed with %d local object_plural": "完成 %d 个本地对象",
    "completed with %d local object": "完成 %d 个本地对象",
    "Unexpected tail checksum for %s (disk corruption?)": "对 %s 的尾部校验出现意外（磁盘损坏？）",
    "pack has %d unresolved delta_plural": "包有 %d 个未解决的 delta",
    "pack has %d unresolved delta": "包有 %d 个未解决的 delta",
    "unable to deflate appended object (%d)": "不能压缩附加对象（%d）",
    "local object %s is corrupt": "本地对象 %s 已损坏",
    "error while closing pack file": "关闭包文件时出错",
    "cannot write keep file '%s'": "无法写保留文件 '%s'",
    "cannot close written keep file '%s'": "无法关闭保留文件 '%s'",
    "cannot store pack file": "无法存储包文件",
    "cannot store index file": "无法存储索引文件",
    "bad pack.indexversion=%<PRIu32>": "坏的 pack.indexversion=%<PRIu32>",
    "no threads support, ignoring %s": "没有线程支持，忽略 %s",
    "Cannot open existing pack file '%s'": "无法打开现存包文件 '%s'",
    "Cannot open existing pack idx file for '%s'": "无法为 %s 打开包索引文件",
    "non delta: %d object_plural": "非 delta：%d 个对象",
    "non delta: %d object": "非 delta：%d 个对象",
    "chain length = %d: %lu object_plural": "链长 = %d: %lu 对象",
    "chain length = %d: %lu object": "链长 = %d: %lu 对象",
    "packfile name '%s' does not end with '.pack'": "包文件名 '%s' 没有以 '.pack' 结尾",
    "bad %s": "错误选项 %s",
    "--fix-thin cannot be used without --stdin": "--fix-thin 不能和 --stdin 同时使用",
    "--stdin requires a git repository": "--stdin 需要一个 git 仓库",
    "--verify with no packfile name given": "--verify 没有提供包文件名参数",
    "cannot stat '%s'": "不能枚举 '%s' 状态",
    "cannot stat template '%s'": "不能枚举模版 '%s' 状态",
    "cannot opendir '%s'": "不能打开目录 '%s'",
    "cannot readlink '%s'": "不能读取链接 '%s'",
    "cannot symlink '%s' '%s'": "不能自 '%s' 到 '%s' 创建符号链接",
    "cannot copy '%s' to '%s'": "不能拷贝 '%s' 至 '%s'",
    "ignoring template %s": "忽略模版 %s",
    "templates not found %s": "模版未找到 %s",
    "not copying templates from '%s': %s": "没有从 '%s' 复制模版：%s",
    "unable to handle file type %d": "不能处理 %d 类型的文件",
    "unable to move %s to %s": "不能移动 %s 至 %s",
    "%s already exists": "%s 已经存在",
    "Reinitialized existing shared Git repository in %s%s\n": "重新初始化已存在的共享 Git 仓库于 %s%s\n",
    "Reinitialized existing Git repository in %s%s\n": "重新初始化已存在的 Git 仓库于 %s%s\n",
    "Initialized empty shared Git repository in %s%s\n": "已初始化空的共享 Git 仓库于 %s%s\n",
    "Initialized empty Git repository in %s%s\n": "已初始化空的 Git 仓库于 %s%s\n",
    "git init [-q | --quiet] [--bare] [--template=<template-directory>] [--shared[=<permissions>]] [<directory>]": "git init [-q | --quiet] [--bare] [--template=<模板目录>] [--shared[=<权限>]] [<目录>]",
    "permissions": "权限",
    "specify that the git repository is to be shared amongst several users": "指定 git 仓库是多个用户之间共享的",
    "cannot mkdir %s": "不能创建目录 %s",
    "cannot chdir to %s": "不能切换目录到 %s",
    "%s (or --work-tree=<directory>) not allowed without specifying %s (or --git-dir=<directory>)": "不允许 %s（或 --work-tree=<目录>）而没有指定 %s（或 --git-dir=<目录>）",
    "Cannot access work tree '%s'": "不能访问工作区 '%s'",
    "git interpret-trailers [--in-place] [--trim-empty] [(--trailer <token>[(=|:)<value>])...] [<file>...]": "git interpret-trailers [--in-place] [--trim-empty] [(--trailer <键>[(=|:)<值>])...] [<文件>...]",
    "edit files in place": "在原位编辑文件",
    "trim empty trailers": "删除空签名",
    "trailer": "签名",
    "trailer(s) to add": "要添加的签名",
    "no input file given for in-place editing": "没有给出要原位编辑的文件",
    "git log [<options>] [<revision-range>] [[--] <path>...]": "git log [<选项>] [<版本范围>] [[--] <路径>...]",
    "git show [<options>] <object>...": "git show [<选项>] <对象>...",
    "invalid --decorate option: %s": "无效的 --decorate 选项：%s",
    "suppress diff output": "不显示差异输出",
    "show source": "显示源",
    "Use mail map file": "使用邮件映射文件",
    "decorate options": "修饰选项",
    "Process line range n,m in file, counting from 1": "处理文件中第 n 到 m 之间的行，从 1 开始",
    "Final output: %d %s\n": "最终输出：%d %s\n",
    "git show %s: bad file": "git show %s: 损坏的文件",
    "Could not read object %s": "不能读取对象 %s",
    "Unknown type: %d": "未知类型：%d",
    "format.headers without value": "format.headers 没有值",
    "name of output directory is too long": "输出目录名太长",
    "Cannot open patch file %s": "无法打开补丁文件 %s",
    "Need exactly one range.": "只需要一个范围。",
    "Not a range.": "不是一个范围。",
    "Cover letter needs email format": "信封需要邮件地址格式",
    "insane in-reply-to: %s": "不正常的 in-reply-to：%s",
    "git format-patch [<options>] [<since> | <revision-range>]": "git format-patch [<选项>] [<从> | <版本范围>]",
    "Two output directories?": "两个输出目录？",
    "Unknown commit %s": "未知提交 %s",
    "Failed to resolve '%s' as a valid ref.": "无法解析 '%s' 为一个有效引用。",
    "Could not find exact merge base.": "不能找到准确的合并基线。",
    "Failed to get upstream, if you want to record base commit automatically,\nplease use git branch --set-upstream-to to track a remote branch.\nOr you could specify base commit by --base=<base-commit-id> manually.": "无法得到上游地址，如果你想自动记录基线提交，请使用命令\ngit branch --set-upstream-to 来跟踪一个远程分支。或者你可以通过\n参数 --base=<base-commit-id> 手动指定一个基线提交。",
    "Failed to find exact merge base": "无法找到准确的合并基线",
    "base commit should be the ancestor of revision list": "基线提交应该是版本列表的祖先",
    "base commit shouldn't be in revision list": "基线提交不应该出现在版本列表中",
    "cannot get patch id": "无法得到补丁 id",
    "use [PATCH n/m] even with a single patch": "使用 [PATCH n/m]，即使只有一个补丁",
    "use [PATCH] even with multiple patches": "使用 [PATCH]，即使有多个补丁",
    "print patches to standard out": "打印补丁到标准输出",
    "generate a cover letter": "生成一封附信",
    "use simple number sequence for output file names": "使用简单的数字序列作为输出文件名",
    "sfx": "后缀",
    "use <sfx> instead of '.patch'": "使用 <后缀> 代替 '.patch'",
    "start numbering patches at <n> instead of 1": "补丁以 <n> 开始编号，而不是1",
    "mark the series as Nth re-roll": "标记补丁系列是第几次重制",
    "Use [RFC PATCH] instead of [PATCH]": "使用 [RFC PATCH] 代替 [PATCH]",
    "Use [<prefix>] instead of [PATCH]": "使用 [<前缀>] 代替 [PATCH]",
    "store resulting files in <dir>": "把结果文件存储在 <目录>",
    "don't strip/add [PATCH]": "不删除/添加 [PATCH]",
    "don't output binary diffs": "不输出二进制差异",
    "output all-zero hash in From header": "在 From 头信息中输出全为零的哈希值",
    "don't include a patch matching a commit upstream": "不包含已在上游提交中的补丁",
    "show patch format instead of default (patch + stat)": "显示纯补丁格式而非默认的（补丁+状态）",
    "Messaging": "邮件发送",
    "header": "header",
    "add email header": "添加邮件头",
    "email": "邮件地址",
    "add To: header": "添加收件人",
    "add Cc: header": "添加抄送",
    "ident": "标识",
    "set From address to <ident> (or committer ident if absent)": "将 From 地址设置为 <标识>（如若不提供，则用提交者 ID 做为地址）",
    "message-id": "邮件标识",
    "make first mail a reply to <message-id>": "使第一封邮件作为对 <邮件标识> 的回复",
    "boundary": "边界",
    "attach the patch": "附件方式添加补丁",
    "inline the patch": "内联显示补丁",
    "enable message threading, styles: shallow, deep": "启用邮件线索，风格：浅，深",
    "signature": "签名",
    "add a signature": "添加一个签名",
    "base-commit": "基线提交",
    "add prerequisite tree info to the patch series": "为补丁列表添加前置树信息",
    "add a signature from a file": "从文件添加一个签名",
    "don't print the patch filenames": "不要打印补丁文件名",
    "-n and -k are mutually exclusive.": "-n 和 -k 互斥。",
    "--subject-prefix/--rfc and -k are mutually exclusive.": "--subject-prefix/--rfc 和 -k 互斥。",
    "--name-only does not make sense": "--name-only 无意义",
    "--name-status does not make sense": "--name-status 无意义",
    "--check does not make sense": "--check 无意义",
    "standard output, or directory, which one?": "标准输出或目录，哪一个？",
    "Could not create directory '%s'": "不能创建目录 '%s'",
    "unable to read signature file '%s'": "无法读取签名文件 '%s'",
    "Failed to create output files": "无法创建输出文件",
    "git cherry [-v] [<upstream> [<head> [<limit>]]]": "git cherry [-v] [<上游> [<头> [<限制>]]]",
    "Could not find a tracked remote branch, please specify <upstream> manually.\n": "不能找到跟踪的远程分支，请手工指定 <上游>。\n",
    "git ls-files [<options>] [<file>...]": "git ls-files [<选项>] [<文件>...]",
    "identify the file status with tags": "用标签标识文件的状态",
    "use lowercase letters for 'assume unchanged' files": "使用小写字母表示 '假设未改变的' 文件",
    "show cached files in the output (default)": "显示缓存的文件（默认）",
    "show deleted files in the output": "显示已删除的文件",
    "show modified files in the output": "显示已修改的文件",
    "show other files in the output": "显示其它文件",
    "show ignored files in the output": "显示忽略的文件",
    "show staged contents' object name in the output": "显示暂存区内容的对象名称",
    "show files on the filesystem that need to be removed": "显示文件系统需要删除的文件",
    "show 'other' directories' names only": "只显示“其他”目录的名称",
    "show line endings of files": "显示文件换行符格式",
    "don't show empty directories": "不显示空目录",
    "show unmerged files in the output": "显示未合并的文件",
    "show resolve-undo information": "显示 resolve-undo 信息",
    "skip files matching pattern": "匹配排除文件的模式",
    "exclude patterns are read from <file>": "从 <文件> 中读取排除模式",
    "read additional per-directory exclude patterns in <file>": "从 <文件> 读取额外的每个目录的排除模式",
    "add the standard git exclusions": "添加标准的 git 排除",
    "make the output relative to the project top directory": "显示相对于顶级目录的文件名",
    "recurse through submodules": "在子模组中递归",
    "if any <file> is not in the index, treat this as an error": "如果任何 <文件> 都不在索引区，视为错误",
    "tree-ish": "树或提交",
    "pretend that paths removed since <tree-ish> are still present": "假装自从 <树或提交> 之后删除的路径仍然存在",
    "show debugging data": "显示调试数据",
    "git ls-remote [--heads] [--tags] [--refs] [--upload-pack=<exec>]\n                     [-q | --quiet] [--exit-code] [--get-url]\n                     [--symref] [<repository> [<refs>...]]": "git ls-remote [--heads] [--tags] [--refs] [--upload-pack=<exec>]\n                     [-q | --quiet] [--exit-code] [--get-url]\n                     [--symref] [<仓库> [<引用>...]]",
    "do not print remote URL": "不打印远程 URL",
    "exec": "exec",
    "path of git-upload-pack on the remote host": "远程主机上的 git-upload-pack 路径",
    "limit to tags": "仅限于标签",
    "limit to heads": "仅限于分支",
    "do not show peeled tags": "不显示已解析的标签",
    "take url.<base>.insteadOf into account": "参考 url.<base>.insteadOf 设置",
    "exit with exit code 2 if no matching refs are found": "若未找到匹配的引用则以退出码2退出",
    "show underlying ref in addition to the object pointed by it": "除了显示指向的对象外，显示指向的引用名",
    "git ls-tree [<options>] <tree-ish> [<path>...]": "git ls-tree [<选项>] <树或提交> [<路径>...]",
    "only show trees": "只显示树",
    "recurse into subtrees": "递归到子树",
    "show trees when recursing": "当递归时显示树",
    "terminate entries with NUL byte": "条目以 NUL 字符终止",
    "include object size": "包括对象大小",
    "list only filenames": "只列出文件名",
    "use full path names": "使用文件的全路径",
    "list entire tree; not just current directory (implies --full-name)": "列出整个树；不仅仅当前目录（隐含 --full-name）",
    "git merge [<options>] [<commit>...]": "git merge [<选项>] [<提交>...]",
    "git merge [<options>] <msg> HEAD <commit>": "git merge [<选项>] <说明> HEAD <提交>",
    "git merge --abort": "git merge --abort",
    "git merge --continue": "git merge --continue",
    "switch `m' requires a value": "开关 `m' 需要一个值",
    "Could not find merge strategy '%s'.\n": "不能找到合并策略 '%s'。\n",
    "Available strategies are:": "可用的策略有：",
    "Available custom strategies are:": "可用的自定义策略有：",
    "do not show a diffstat at the end of the merge": "在合并的最后不显示差异统计",
    "show a diffstat at the end of the merge": "在合并的最后显示差异统计",
    "(synonym to --stat)": "（和 --stat 同义）",
    "add (at most <n>) entries from shortlog to merge commit message": "在合并提交信息中添加（最多 <n> 条）精简提交记录",
    "create a single commit instead of doing a merge": "创建一个单独的提交而不是做一次合并",
    "perform a commit if the merge succeeds (default)": "如果合并成功，执行一次提交（默认）",
    "edit message before committing": "在提交前编辑提交说明",
    "allow fast-forward (default)": "允许快进（默认）",
    "abort if fast-forward is not possible": "如果不能快进就放弃合并",
    "verify that the named commit has a valid GPG signature": "验证指定的提交是否包含一个有效的 GPG 签名",
    "strategy": "策略",
    "merge strategy to use": "要使用的合并策略",
    "option=value": "option=value",
    "option for selected merge strategy": "所选的合并策略的选项",
    "merge commit message (for a non-fast-forward merge)": "合并的提交说明（针对非快进式合并）",
    "abort the current in-progress merge": "放弃当前正在进行的合并",
    "continue the current in-progress merge": "继续当前正在进行的合并",
    "allow merging unrelated histories": "允许合并不相关的历史",
    "could not run stash.": "不能进行进度保存。",
    "stash failed": "进度保存失败",
    "not a valid object: %s": "不是一个有效对象：%s",
    "read-tree failed": "读取树失败",
    " (nothing to squash)": " （无可压缩）",
    "Squash commit -- not updating HEAD\n": "压缩提交 -- 未更新 HEAD\n",
    "No merge message -- not updating HEAD\n": "无合并信息 -- 未更新 HEAD\n",
    "'%s' does not point to a commit": "'%s' 没有指向一个提交",
    "Bad branch.%s.mergeoptions string: %s": "坏的 branch.%s.mergeoptions 字符串：%s",
    "Not handling anything other than two heads merge.": "未处理两个头合并之外的任何操作。",
    "Unknown option for merge-recursive: -X%s": "merge-recursive 的未知选项：-X%s",
    "unable to write %s": "不能写 %s",
    "Could not read from '%s'": "不能从 '%s' 读取",
    "Not committing merge; use 'git commit' to complete the merge.\n": "未提交合并，使用 'git commit' 完成此次合并。\n",
    "Please enter a commit message to explain why this merge is necessary,\nespecially if it merges an updated upstream into a topic branch.\n\nLines starting with '%c' will be ignored, and an empty message aborts\nthe commit.\n": "请输入一个提交信息以解释此合并的必要性，尤其是将一个更新后的上游分支\n合并到主题分支。\n\n以 '%c' 开头的行将被忽略，而且空提交说明将会终止提交。\n",
    "Empty commit message.": "空提交信息。",
    "Wonderful.\n": "太棒了。\n",
    "Automatic merge failed; fix conflicts and then commit the result.\n": "自动合并失败，修正冲突然后提交修正的结果。\n",
    "'%s' is not a commit": "'%s' 不是一个提交",
    "No current branch.": "没有当前分支。",
    "No remote for the current branch.": "当前分支没有对应的远程仓库。",
    "No default upstream defined for the current branch.": "当前分支没有定义默认的上游分支。",
    "No remote-tracking branch for %s from %s": "对于 %s 没有来自 %s 的远程跟踪分支",
    "Bad value '%s' in environment '%s'": "环境 '%2$s' 中存在坏的取值 '%1$s'",
    "could not close '%s'": "不能关闭 '%s'",
    "not something we can merge in %s: %s": "不能在 %s 中合并：%s",
    "not something we can merge": "不能合并",
    "--abort expects no arguments": "--abort 不带参数",
    "There is no merge to abort (MERGE_HEAD missing).": "没有要终止的合并（MERGE_HEAD 丢失）。",
    "--continue expects no arguments": "--continue 不带参数",
    "There is no merge in progress (MERGE_HEAD missing).": "没有进行中的合并（MERGE_HEAD 丢失）。",
    "You have not concluded your merge (MERGE_HEAD exists).\nPlease, commit your changes before you merge.": "您尚未结束您的合并（存在 MERGE_HEAD）。\n请在合并前先提交您的修改。",
    "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).\nPlease, commit your changes before you merge.": "您尚未结束您的拣选（存在 CHERRY_PICK_HEAD）。\n请在合并前先提交您的修改。",
    "You have not concluded your cherry-pick (CHERRY_PICK_HEAD exists).": "您尚未结束您的拣选（存在 CHERRY_PICK_HEAD）。",
    "You cannot combine --squash with --no-ff.": "您不能将 --squash 与 --no-ff 同时使用。",
    "No commit specified and merge.defaultToUpstream not set.": "未指定提交并且 merge.defaultToUpstream 未设置。",
    "Squash commit into empty head not supported yet": "尚不支持到空分支的压缩提交",
    "Non-fast-forward commit does not make sense into an empty head": "到空分支的非快进式提交没有意义",
    "%s - not something we can merge": "%s - 不能被合并",
    "Can merge only exactly one commit into empty head": "只能将一个提交合并到空分支上",
    "Commit %s has an untrusted GPG signature, allegedly by %s.": "提交 %s 有一个非可信的声称来自 %s 的 GPG 签名。",
    "Commit %s has a bad GPG signature allegedly by %s.": "提交 %s 有一个错误的声称来自 %s 的 GPG 签名。",
    "Commit %s does not have a GPG signature.": "提交 %s 没有一个 GPG 签名。",
    "Commit %s has a good GPG signature by %s\n": "提交 %s 有一个来自 %s 的好的 GPG 签名。\n",
    "refusing to merge unrelated histories": "拒绝合并无关的历史",
    "Already up-to-date.": "已经是最新的。",
    "Updating %s..%s\n": "更新 %s..%s\n",
    "Trying really trivial in-index merge...\n": "尝试非常小的索引内合并...\n",
    "Nope.\n": "无。\n",
    "Already up-to-date. Yeeah!": "已经是最新的。耶！",
    "Not possible to fast-forward, aborting.": "无法快进，终止。",
    "Rewinding the tree to pristine...\n": "将树回滚至原始状态...\n",
    "Trying merge strategy %s...\n": "尝试合并策略 %s...\n",
    "No merge strategy handled the merge.\n": "没有合并策略处理此合并。\n",
    "Merge with strategy %s failed.\n": "使用策略 %s 合并失败。\n",
    "Using the %s to prepare resolving by hand.\n": "使用 %s 以准备手工解决。\n",
    "Automatic merge went well; stopped before committing as requested\n": "自动合并进展顺利，按要求在提交前停止\n",
    "git merge-base [-a | --all] <commit> <commit>...": "git merge-base [-a | --all] <提交> <提交>...",
    "git merge-base [-a | --all] --octopus <commit>...": "git merge-base [-a | --all] --octopus <提交>...",
    "git merge-base --independent <commit>...": "git merge-base --independent <提交>...",
    "git merge-base --is-ancestor <commit> <commit>": "git merge-base --is-ancestor <提交> <提交>",
    "git merge-base --fork-point <ref> [<commit>]": "git merge-base --fork-point <引用> [<提交>]",
    "output all common ancestors": "输出所有共同的祖先",
    "find ancestors for a single n-way merge": "查找一个多路合并的祖先提交",
    "list revs not reachable from others": "显示不能被其他访问到的版本",
    "is the first one ancestor of the other?": "第一个是其他的祖先提交么？",
    "find where <commit> forked from reflog of <ref>": "根据 <引用> 的引用日志查找 <提交> 的派生处",
    "git merge-file [<options>] [-L <name1> [-L <orig> [-L <name2>]]] <file1> <orig-file> <file2>": "git merge-file [<选项>] [-L <文件1> [-L <初始> [-L <名字2>]]] <文件1> <初始文件> <文件2>",
    "send results to standard output": "将结果发送到标准输出",
    "use a diff3 based merge": "使用基于 diff3 的合并",
    "for conflicts, use our version": "如果冲突，使用我们的版本",
    "for conflicts, use their version": "如果冲突，使用他们的版本",
    "for conflicts, use a union version": "如果冲突，使用联合版本",
    "for conflicts, use this marker size": "如果冲突，使用指定长度的标记",
    "do not warn about conflicts": "不要警告冲突",
    "set labels for file1/orig-file/file2": "为 文件1/初始文件/文件2 设置标签",
    "unknown option %s": "未知选项 %s",
    "could not parse object '%s'": "不能解析对象 '%s'",
    "cannot handle more than %d base. Ignoring %s._plural": "无法处理 %d 条以上的基线。忽略 %s。",
    "cannot handle more than %d base. Ignoring %s.": "无法处理 %d 条以上的基线。忽略 %s。",
    "not handling anything other than two heads merge.": "不能处理两个头合并之外的任何操作。",
    "could not resolve ref '%s'": "无法解析引用 '%s'",
    "Merging %s with %s\n": "合并 %s 和 %s\n",
    "git mktree [-z] [--missing] [--batch]": "git mktree [-z] [--missing] [--batch]",
    "input is NUL terminated": "输入以 NUL 字符终止",
    "allow missing objects": "允许丢失的对象",
    "allow creation of more than one tree": "允许创建一个以上的树",
    "git mv [<options>] <source>... <destination>": "git mv [<选项>] <源>... <目标>",
    "Directory %s is in index and no submodule?": "目录 %s 在索引中并且不是子模组？",
    "Please stage your changes to .gitmodules or stash them to proceed": "请将您的修改暂存到 .gitmodules 中或保存进度后再继续",
    "%.*s is in index": "%.*s 在索引中",
    "force move/rename even if target exists": "强制移动/重命令，即使目标存在",
    "skip move/rename errors": "跳过移动/重命名错误",
    "destination '%s' is not a directory": "目标 '%s' 不是一个目录",
    "Checking rename of '%s' to '%s'\n": "检查 '%s' 到 '%s' 的重命名\n",
    "bad source": "坏的源",
    "can not move directory into itself": "不能将目录移动到自身",
    "cannot move directory over file": "不能将目录移动到文件",
    "source directory is empty": "源目录为空",
    "not under version control": "不在版本控制之下",
    "destination exists": "目标已存在",
    "overwriting '%s'": "覆盖 '%s'",
    "Cannot overwrite": "不能覆盖",
    "multiple sources for the same target": "同一目标具有多个源",
    "destination directory does not exist": "目标目录不存在",
    "%s, source=%s, destination=%s": "%s，源=%s，目标=%s",
    "Renaming %s to %s\n": "重命名 %s 至 %s\n",
    "renaming '%s' failed": "重命名 '%s' 失败",
    "git name-rev [<options>] <commit>...": "git name-rev [<选项>] <提交>...",
    "git name-rev [<options>] --all": "git name-rev [<选项>] --all",
    "git name-rev [<options>] --stdin": "git name-rev [<选项>] --stdin",
    "print only names (no SHA-1)": "只打印名称（无 SHA-1）",
    "only use tags to name the commits": "只使用标签来命名提交",
    "only use refs matching <pattern>": "只使用和 <模式> 相匹配的引用",
    "list all commits reachable from all refs": "列出可以从所有引用访问的提交",
    "read from stdin": "从标准输入读取",
    "allow to print `undefined` names (default)": "允许打印 `未定义` 的名称（默认）",
    "dereference tags in the input (internal use)": "反向解析输入中的标签（内部使用）",
    "git notes [--ref <notes-ref>] [list [<object>]]": "git notes [--ref <注解引用>] [list [<对象>]]",
    "git notes [--ref <notes-ref>] add [-f] [--allow-empty] [-m <msg> | -F <file> | (-c | -C) <object>] [<object>]": "git notes [--ref <注解引用>] add [-f] [--allow-empty] [-m <说明> | -F <文件> | (-c | -C) <对象>] [<对象>]",
    "git notes [--ref <notes-ref>] copy [-f] <from-object> <to-object>": "git notes [--ref <注解引用>] copy [-f] <源对象> <目标对象>",
    "git notes [--ref <notes-ref>] append [--allow-empty] [-m <msg> | -F <file> | (-c | -C) <object>] [<object>]": "git notes [--ref <注解引用>] append [--allow-empty] [-m <说明> | -F <文件> | (-c | -C) <对象>] [<对象>]",
    "git notes [--ref <notes-ref>] edit [--allow-empty] [<object>]": "git notes [--ref <注解引用>] edit [--allow-empty] [<对象>]",
    "git notes [--ref <notes-ref>] show [<object>]": "git notes [--ref <注解引用>] show [<对象>]",
    "git notes [--ref <notes-ref>] merge [-v | -q] [-s <strategy>] <notes-ref>": "git notes [--ref <注解引用>] merge [-v | -q] [-s <策略> ] <注解引用>",
    "git notes merge --commit [-v | -q]": "git notes merge --commit [-v | -q]",
    "git notes merge --abort [-v | -q]": "git notes merge --abort [-v | -q]",
    "git notes [--ref <notes-ref>] remove [<object>...]": "git notes [--ref <注解引用>] remove [<对象>...]",
    "git notes [--ref <notes-ref>] prune [-n | -v]": "git notes [--ref <注解引用>] prune [-n | -v]",
    "git notes [--ref <notes-ref>] get-ref": "git notes [--ref <注解引用>] get-ref",
    "git notes [list [<object>]]": "git notes [list [<对象>]]",
    "git notes add [<options>] [<object>]": "git notes add [<选项>] [<对象>]",
    "git notes copy [<options>] <from-object> <to-object>": "git notes copy [<选项>] <源对象> <目标对象>",
    "git notes copy --stdin [<from-object> <to-object>]...": "git notes copy --stdin [<源对象> <目标对象>]...",
    "git notes append [<options>] [<object>]": "git notes append [<选项>] [<对象>]",
    "git notes edit [<object>]": "git notes edit [<对象>]",
    "git notes show [<object>]": "git notes show [<对象>]",
    "git notes merge [<options>] <notes-ref>": "git notes merge [<选项>] <注解引用>",
    "git notes merge --commit [<options>]": "git notes merge --commit [<选项>]",
    "git notes merge --abort [<options>]": "git notes merge --abort [<选项>]",
    "git notes remove [<object>]": "git notes remove [<对象>]",
    "git notes prune [<options>]": "git notes prune [<选项>]",
    "git notes get-ref": "git notes get-ref",
    "Write/edit the notes for the following object:": "为下面的对象写/编辑说明：",
    "unable to start 'show' for object '%s'": "不能为对象 '%s' 开始 'show'",
    "could not read 'show' output": "不能读取 'show' 的输出",
    "failed to finish 'show' for object '%s'": "无法为对象 '%s' 完成 'show'",
    "please supply the note contents using either -m or -F option": "请通过 -m 或 -F 选项为注解提供内容",
    "unable to write note object": "不能写注解对象",
    "the note contents have been left in %s": "注解内容被留在 %s 中",
    "cannot read '%s'": "不能读取 '%s'",
    "could not open or read '%s'": "不能打开或读取 '%s'",
    "failed to resolve '%s' as a valid ref.": "无法解析 '%s' 为一个有效引用。",
    "failed to read object '%s'.": "无法读取对象 '%s'。",
    "cannot read note data from non-blob object '%s'.": "不能从非数据对象 '%s' 中读取注解数据。",
    "malformed input line: '%s'.": "非法的输入行：'%s'。",
    "failed to copy notes from '%s' to '%s'": "从 '%s' 拷贝注解到 '%s' 时失败",
    "refusing to %s notes in %s (outside of refs/notes/)": "拒绝向 %2$s（在 refs/notes/ 之外）%1$s注解",
    "too many parameters": "参数太多",
    "no note found for object %s.": "未发现对象 %s 的注解。",
    "note contents as a string": "注解内容作为一个字符串",
    "note contents in a file": "注解内容到一个文件中",
    "reuse and edit specified note object": "重用和编辑指定的注解对象",
    "reuse specified note object": "重用指定的注解对象",
    "allow storing empty note": "允许保存空白注释",
    "replace existing notes": "替换已存在的注解",
    "Cannot add notes. Found existing notes for object %s. Use '-f' to overwrite existing notes": "不能添加注解。发现对象 %s 已存在注解。使用 '-f' 覆盖现存注解",
    "Overwriting existing notes for object %s\n": "覆盖对象 %s 现存注解\n",
    "Removing note for object %s\n": "删除对象 %s 的注解\n",
    "read objects from stdin": "从标准输入读取对象",
    "load rewriting config for <command> (implies --stdin)": "重新加载 <命令> 的配置（隐含 --stdin）",
    "too few parameters": "参数太少",
    "Cannot copy notes. Found existing notes for object %s. Use '-f' to overwrite existing notes": "不能拷贝注解。发现对象 %s 已存在注解。使用 '-f' 覆盖现存注解",
    "missing notes on source object %s. Cannot copy.": "源对象 %s 缺少注解。不能拷贝。",
    "The -m/-F/-c/-C options have been deprecated for the 'edit' subcommand.\nPlease use 'git notes add -f -m/-F/-c/-C' instead.\n": "子命令 'edit' 的选项 -m/-F/-c/-C 已弃用。\n请换用 'git notes add -f -m/-F/-c/-C'。\n",
    "failed to delete ref NOTES_MERGE_PARTIAL": "无法删除引用 NOTES_MERGE_PARTIAL",
    "failed to delete ref NOTES_MERGE_REF": "无法删除引用 NOTES_MERGE_REF",
    "failed to remove 'git notes merge' worktree": "无法删除 'git notes merge' 工作区",
    "failed to read ref NOTES_MERGE_PARTIAL": "无法读取引用 NOTES_MERGE_PARTIAL",
    "could not find commit from NOTES_MERGE_PARTIAL.": "无法从 NOTES_MERGE_PARTIAL 中找到提交。",
    "could not parse commit from NOTES_MERGE_PARTIAL.": "无法从 NOTES_MERGE_PARTIAL 中解析提交。",
    "failed to resolve NOTES_MERGE_REF": "无法解析 NOTES_MERGE_REF",
    "failed to finalize notes merge": "无法完成注解合并",
    "unknown notes merge strategy %s": "未知的注解合并策略 %s",
    "General options": "通用选项",
    "Merge options": "合并选项",
    "resolve notes conflicts using the given strategy (manual/ours/theirs/union/cat_sort_uniq)": "使用指定的策略解决注解冲突 (manual/ours/theirs/union/cat_sort_uniq)",
    "Committing unmerged notes": "提交未合并的注解",
    "finalize notes merge by committing unmerged notes": "通过提交未合并的注解来完成注解合并",
    "Aborting notes merge resolution": "中止注解合并的方案",
    "abort notes merge": "中止注解合并",
    "cannot mix --commit, --abort or -s/--strategy": "不能混用 --commit、--abort 或 -s/--strategy",
    "must specify a notes ref to merge": "必须指定一个注解引用来合并",
    "unknown -s/--strategy: %s": "未知的 -s/--strategy：%s",
    "a notes merge into %s is already in-progress at %s": "位于 %2$s 的一个到 %1$s 中的注解合并正在执行中",
    "failed to store link to current notes ref (%s)": "无法存储链接到当前的注解引用（%s）",
    "Automatic notes merge failed. Fix conflicts in %s and commit the result with 'git notes merge --commit', or abort the merge with 'git notes merge --abort'.\n": "自动合并说明失败。修改 %s 中的冲突并且使用命令 'git notes merge --commit' 提交结果，或者使用命令 'git notes merge --abort' 终止合并。\n",
    "Object %s has no note\n": "对象 %s 没有注解\n",
    "attempt to remove non-existent note is not an error": "尝试删除不存在的注解不是一个错误",
    "read object names from the standard input": "从标准输入读取对象名称",
    "do not remove, show only": "不删除，只显示",
    "report pruned notes": "报告清除的注解",
    "notes-ref": "注解引用",
    "use notes from <notes-ref>": "从 <注解引用> 使用注解",
    "unknown subcommand: %s": "未知子命令：%s",
    "git pack-objects --stdout [<options>...] [< <ref-list> | < <object-list>]": "git pack-objects --stdout [<选项>...] [< <引用列表> | < <对象列表>]",
    "git pack-objects [<options>...] <base-name> [< <ref-list> | < <object-list>]": "git pack-objects [<选项>...] <base-name> [< <引用列表> | < <对象列表>]",
    "deflate error (%d)": "压缩错误 (%d)",
    "disabling bitmap writing, packs are split due to pack.packSizeLimit": "禁用 bitmap 写入，因为 pack.packSizeLimit 设置使得包被切分为多个",
    "Writing objects": "写入对象中",
    "disabling bitmap writing, as some objects are not being packed": "禁用 bitmap 写入，因为一些对象将不会被打包",
    "Compressing objects": "压缩对象中",
    "unsupported index version %s": "不支持的索引版本 %s",
    "bad index version '%s'": "坏的索引版本 '%s'",
    "do not show progress meter": "不显示进度表",
    "show progress meter": "显示进度表",
    "show progress meter during object writing phase": "在对象写入阶段显示进度表",
    "similar to --all-progress when progress meter is shown": "当进度表显示时类似于 --all-progress",
    "version[,offset]": "版本[,偏移]",
    "write the pack index file in the specified idx format version": "用指定的 idx 格式版本来写包索引文件",
    "maximum size of each output pack file": "每个输出包的最大尺寸",
    "ignore borrowed objects from alternate object store": "忽略从备用对象存储里借用对象",
    "ignore packed objects": "忽略包对象",
    "limit pack window by objects": "限制打包窗口的对象数",
    "limit pack window by memory in addition to object limit": "除对象数量限制外设置打包窗口的内存限制",
    "maximum length of delta chain allowed in the resulting pack": "打包允许的 delta 链的最大长度",
    "reuse existing deltas": "重用已存在的 deltas",
    "reuse existing objects": "重用已存在的对象",
    "use OFS_DELTA objects": "使用 OFS_DELTA 对象",
    "use threads when searching for best delta matches": "使用线程查询最佳 delta 匹配",
    "do not create an empty pack output": "不创建空的包输出",
    "read revision arguments from standard input": "从标准输入读取版本号参数",
    "limit the objects to those that are not yet packed": "限制那些尚未打包的对象",
    "include objects reachable from any reference": "包括可以从任何引用访问到的对象",
    "include objects referred by reflog entries": "包括被引用日志引用到的对象",
    "include objects referred to by the index": "包括被索引引用到的对象",
    "output pack to stdout": "输出包到标准输出",
    "include tag objects that refer to objects to be packed": "包括那些引用了待打包对象的标签对象",
    "keep unreachable objects": "维持不可达的对象",
    "pack loose unreachable objects": "打包松散的不可达对象",
    "unpack unreachable objects newer than <time>": "将比给定 <时间> 新的无法访问的对象解包",
    "create thin packs": "创建精简包",
    "create packs suitable for shallow fetches": "创建适合浅克隆仓库获取的包",
    "ignore packs that have companion .keep file": "忽略配有 .keep 文件的包",
    "pack compression level": "打包压缩级别",
    "do not hide commits by grafts": "显示被嫁接隐藏的提交",
    "use a bitmap index if available to speed up counting objects": "使用 bitmap 索引（如果有的话）以提高对象计数时的速度",
    "write a bitmap index together with the pack index": "在建立包索引的同时创建 bitmap 索引",
    "Counting objects": "对象计数中",
    "git pack-refs [<options>]": "git pack-refs [<选项>]",
    "pack everything": "打包一切",
    "prune loose refs (default)": "清除松散的引用（默认）",
    "git prune-packed [-n | --dry-run] [-q | --quiet]": "git prune-packed [-n | --dry-run] [-q | --quiet]",
    "Removing duplicate objects": "正在删除重复对象",
    "git prune [-n] [-v] [--expire <time>] [--] [<head>...]": "git prune [-n] [-v] [--expire <时间>] [--] [<头>...]",
    "report pruned objects": "报告清除的对象",
    "expire objects older than <time>": "使早于给定时间的对象过期",
    "cannot prune in a precious-objects repo": "不能在珍品仓库中执行清理操作",
    "Invalid value for %s: %s": "%s 的值无效：%s",
    "git pull [<options>] [<repository> [<refspec>...]]": "git pull [<选项>] [<仓库> [<引用规格>...]]",
    "Options related to merging": "和合并相关的选项",
    "incorporate changes by rebasing rather than merging": "使用变基操作取代合并操作以合入修改",
    "allow fast-forward": "允许快进式",
    "automatically stash/stash pop before and after rebase": "自动在变基操作前后执行 stash/stash pop",
    "Options related to fetching": "和获取相关的参数",
    "number of submodules pulled in parallel": "并发拉取的子模组的数量",
    "Invalid value for pull.ff: %s": "pull.ff 的取值无效：%s",
    "There is no candidate for rebasing against among the refs that you just fetched.": "在您刚刚获取到的引用中没有变基操作的候选。",
    "There are no candidates for merging among the refs that you just fetched.": "在您刚刚获取到的引用中没有合并操作的候选。",
    "Generally this means that you provided a wildcard refspec which had no\nmatches on the remote end.": "通常这意味着您提供了一个通配符引用规格但未能和远端匹配。",
    "You asked to pull from the remote '%s', but did not specify\na branch. Because this is not the default configured remote\nfor your current branch, you must specify a branch on the command line.": "您要求从远程 '%s' 拉取，但是未指定一个分支。因为这不是当前\n分支默认的远程仓库，您必须在命令行中指定一个分支名。",
    "You are not currently on a branch.": "您当前不在一个分支上。",
    "Please specify which branch you want to rebase against.": "请指定您要变基到哪一个分支。",
    "Please specify which branch you want to merge with.": "请指定您要合并哪一个分支。",
    "See git-pull(1) for details.": "详见 git-pull(1)。",
    "<remote>": "<远程>",
    "<branch>": "<分支>",
    "There is no tracking information for the current branch.": "当前分支没有跟踪信息。",
    "If you wish to set tracking information for this branch you can do so with:": "如果您想要为此分支创建跟踪信息，您可以执行：",
    "Your configuration specifies to merge with the ref '%s'\nfrom the remote, but no such ref was fetched.": "您的配置中指定要合并远程的引用 '%s'，\n但是没有获取到这个引用。",
    "ignoring --verify-signatures for rebase": "为变基操作忽略 --verify-signatures",
    "--[no-]autostash option is only valid with --rebase.": "--[no-]autostash 选项只在使用 --rebase 时有效。",
    "Updating an unborn branch with changes added to the index.": "更新尚未诞生的分支，变更添加至索引。",
    "pull with rebase": "变基式拉取",
    "please commit or stash them.": "请提交或为它们保存进度。",
    "fetch updated the current branch head.\nfast-forwarding your working tree from\ncommit %s.": "fetch 更新了当前的分支。快进您的工作区\n至提交 %s。",
    "Cannot fast-forward your working tree.\nAfter making sure that you saved anything precious from\n$ git diff %s\noutput, run\n$ git reset --hard\nto recover.": "您当前的工作区无法执行快进操作。\n首先执行如下命令：\n$ git diff %s\n以确认所有有用的数据均已保存。然后执行下面的命令\n$ git reset --hard\n恢复之前的状态。",
    "Cannot merge multiple branches into empty head.": "无法将多个分支合并到空分支。",
    "Cannot rebase onto multiple branches.": "无法变基到多个分支。",
    "git push [<options>] [<repository> [<refspec>...]]": "git push [<选项>] [<仓库> [<引用规格>...]]",
    "tag shorthand without <tag>": "标签后面未提供 <标签> 参数",
    "--delete only accepts plain target ref names": "--delete 只接受简单的目标引用名",
    "\nTo choose either option permanently, see push.default in 'git help config'.": "\n为了永久地选择任一选项，参见 'git help config' 中的 push.default。",
    "The upstream branch of your current branch does not match\nthe name of your current branch.  To push to the upstream branch\non the remote, use\n\n    git push %s HEAD:%s\n\nTo push to the branch of the same name on the remote, use\n\n    git push %s %s\n%s": "如果您当前分支的上游分支和您当前分支名不匹配，为推送到远程的\n上游分支，使用\n\n    git push %s HEAD:%s\n\n为推送至远程同名分支，使用\n\n    git push %s %s\n%s",
    "You are not currently on a branch.\nTo push the history leading to the current (detached HEAD)\nstate now, use\n\n    git push %s HEAD:<name-of-remote-branch>\n": "您当前不在一个分支上。\n现在为推送当前（分离头指针）的历史，使用\n\n    git push %s HEAD:<远程分支名字>\n",
    "The current branch %s has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n\n    git push --set-upstream %s %s\n": "当前分支 %s 没有对应的上游分支。\n为推送当前分支并建立与远程上游的跟踪，使用\n\n    git push --set-upstream %s %s\n",
    "The current branch %s has multiple upstream branches, refusing to push.": "当前分支 %s 有多个上游分支，拒绝推送。",
    "You are pushing to remote '%s', which is not the upstream of\nyour current branch '%s', without telling me what to push\nto update which remote branch.": "您正推送至远程 '%s'（其并非当前分支 '%s' 的上游），\n而没有告诉我要推送什么、更新哪个远程分支。",
    "You didn't specify any refspecs to push, and push.default is \"nothing\".": "您没有为推送指定任何引用规格，并且 push.default 为 \"nothing\"。",
    "Updates were rejected because the tip of your current branch is behind\nits remote counterpart. Integrate the remote changes (e.g.\n'git pull ...') before pushing again.\nSee the 'Note about fast-forwards' in 'git push --help' for details.": "更新被拒绝，因为您当前分支的最新提交落后于其对应的远程分支。\n再次推送前，先与远程变更合并（如 'git pull ...'）。详见\n'git push --help' 中的 'Note about fast-forwards' 小节。",
    "Updates were rejected because a pushed branch tip is behind its remote\ncounterpart. Check out this branch and integrate the remote changes\n(e.g. 'git pull ...') before pushing again.\nSee the 'Note about fast-forwards' in 'git push --help' for details.": "更新被拒绝，因为推送的一个分支的最新提交落后于其对应的远程分支。\n检出该分支并整合远程变更（如 'git pull ...'），然后再推送。详见\n'git push --help' 中的 'Note about fast-forwards' 小节。",
    "Updates were rejected because the remote contains work that you do\nnot have locally. This is usually caused by another repository pushing\nto the same ref. You may want to first integrate the remote changes\n(e.g., 'git pull ...') before pushing again.\nSee the 'Note about fast-forwards' in 'git push --help' for details.": "更新被拒绝，因为远程仓库包含您本地尚不存在的提交。这通常是因为另外\n一个仓库已向该引用进行了推送。再次推送前，您可能需要先整合远程变更\n（如 'git pull ...'）。\n详见 'git push --help' 中的 'Note about fast-forwards' 小节。",
    "Updates were rejected because the tag already exists in the remote.": "更新被拒绝，因为该标签在远程已经存在。",
    "You cannot update a remote ref that points at a non-commit object,\nor update a remote ref to make it point at a non-commit object,\nwithout using the '--force' option.\n": "如果不使用 '--force' 参数，您不能更新一个指向非提交对象的远程引用，\n也不能更新远程引用让其指向一个非提交对象。\n",
    "Pushing to %s\n": "推送到 %s\n",
    "failed to push some refs to '%s'": "无法推送一些引用到 '%s'",
    "bad repository '%s'": "坏的仓库 '%s'",
    "No configured push destination.\nEither specify the URL from the command-line or configure a remote repository using\n\n    git remote add <name> <url>\n\nand then push using the remote name\n\n    git push <name>\n": "没有配置推送目标。\n或通过命令行指定 URL，或用下面命令配置一个远程仓库\n\n    git remote add <名称> <地址>\n\n然后使用该远程仓库名执行推送\n\n    git push <名称>\n",
    "--all and --tags are incompatible": "--all 和 --tags 不兼容",
    "--all can't be combined with refspecs": "--all 不能和引用规格同时使用",
    "--mirror and --tags are incompatible": "--mirror 和 --tags 不兼容",
    "--mirror can't be combined with refspecs": "--mirror 不能和引用规格同时使用",
    "--all and --mirror are incompatible": "--all 和 --mirror 不兼容",
    "repository": "仓库",
    "push all refs": "推送所有引用",
    "mirror all refs": "镜像所有引用",
    "delete refs": "删除引用",
    "push tags (can't be used with --all or --mirror)": "推送标签（不能使用 --all or --mirror）",
    "force updates": "强制更新",
    "refname>:<expect": "引用名>:<期望值",
    "require old value of ref to be at this value": "要求引用旧的取值为设定值",
    "control recursive pushing of submodules": "控制子模组的递归推送",
    "use thin pack": "使用精简打包",
    "receive pack program": "接收包程序",
    "set upstream for git pull/status": "设置 git pull/status 的上游",
    "prune locally removed refs": "清除本地删除的引用",
    "bypass pre-push hook": "绕过 pre-push 钩子",
    "push missing but relevant tags": "推送缺失但有关的标签",
    "GPG sign the push": "用 GPG 为推送签名",
    "request atomic transaction on remote side": "需要远端支持原子事务",
    "server-specific": "server-specific",
    "option to transmit": "传输选项",
    "--delete is incompatible with --all, --mirror and --tags": "--delete 与 --all、--mirror 及 --tags 不兼容",
    "--delete doesn't make sense without any refs": "--delete 未接任何引用没有意义",
    "push options must not have new line characters": "推送选项不能有换行符",
    "git read-tree [(-m [--trivial] [--aggressive] | --reset | --prefix=<prefix>) [-u [--exclude-per-directory=<gitignore>] | -i]] [--no-sparse-checkout] [--index-output=<file>] (--empty | <tree-ish1> [<tree-ish2> [<tree-ish3>]])": "git read-tree [(-m [--trivial] [--aggressive] | --reset | --prefix=<前缀>) [-u [--exclude-per-directory=<gitignore>] | -i]] [--no-sparse-checkout] [--index-output=<文件>] (--empty | <树对象1> [<树对象2> [<树对象3>]])",
    "write resulting index to <file>": "将索引结果写入 <文件>",
    "only empty the index": "只是清空索引",
    "Merging": "合并",
    "perform a merge in addition to a read": "读取之余再执行一个合并",
    "3-way merge if no file level merging required": "如果没有文件级合并需要，执行三方合并",
    "3-way merge in presence of adds and removes": "存在添加和删除时，也执行三方合并",
    "same as -m, but discard unmerged entries": "类似于 -m，但丢弃未合并的条目",
    "<subdirectory>/": "<子目录>/",
    "read the tree into the index under <subdirectory>/": "读取树对象到索引的 <子目录>/ 下",
    "update working tree with merge result": "用合并的结果更新工作区",
    "gitignore": "gitignore",
    "allow explicitly ignored files to be overwritten": "允许忽略文件中设定的文件可以被覆盖",
    "don't check the working tree after merging": "合并后不检查工作区",
    "don't update the index or the work tree": "不更新索引区和工作区",
    "skip applying sparse checkout filter": "跳过应用稀疏检出过滤器",
    "debug unpack-trees": "调试 unpack-trees",
    "git receive-pack <git-dir>": "git receive-pack <git-dir>",
    "By default, updating the current branch in a non-bare repository\nis denied, because it will make the index and work tree inconsistent\nwith what you pushed, and will require 'git reset --hard' to match\nthe work tree to HEAD.\n\nYou can set the 'receive.denyCurrentBranch' configuration variable\nto 'ignore' or 'warn' in the remote repository to allow pushing into\nits current branch; however, this is not recommended unless you\narranged to update its work tree to match what you pushed in some\nother way.\n\nTo squelch this message and still keep the default behaviour, set\n'receive.denyCurrentBranch' configuration variable to 'refuse'.": "默认禁止更新非纯仓库的当前分支，因为您推送的内容将导致索引和工作区\n不一致，并且将需要执行 'git reset --hard' 将工作区匹配到 HEAD。\n\n您可以在远程仓库中设置 'receive.denyCurrentBranch' 配置变量为\n'ignore' 或 'warn' 以允许推送到当前分支。然而不推荐这么做，除非您\n用某种方式将其工作区更新至您推送的状态。\n\n若要屏蔽此信息且保持默认行为，设置 'receive.denyCurrentBranch'\n配置变量为 'refuse'。",
    "By default, deleting the current branch is denied, because the next\n'git clone' won't result in any file checked out, causing confusion.\n\nYou can set 'receive.denyDeleteCurrent' configuration variable to\n'warn' or 'ignore' in the remote repository to allow deleting the\ncurrent branch, with or without a warning message.\n\nTo squelch this message, you can set it to 'refuse'.": "默认禁止删除当前分支，因为下一次 'git clone' 将不会检出任何文件，\n导致困惑。\n\n您可以在远程仓库中设置 'receive.denyDeleteCurrent' 配置变量为\n'warn'（显示警告信息）或 'ignore'（忽略警告信息）以允许删除当前分支。\n\n若要屏蔽此信息，您可以设置它为 'refuse'。",
    "quiet": "静默模式",
    "You must specify a directory.": "您必须指定一个目录。",
    "'%s' for '%s' is not a valid timestamp": "'%2$s' 的值 '%1$s' 不是一个有效的时间戳",
    "'%s' is not a valid timestamp": "'%s' 不是一个有效的时间戳",
    "git remote [-v | --verbose]": "git remote [-v | --verbose]",
    "git remote add [-t <branch>] [-m <master>] [-f] [--tags | --no-tags] [--mirror=<fetch|push>] <name> <url>": "git remote add [-t <分支>] [-m <master>] [-f] [--tags | --no-tags] [--mirror=<fetch|push>] <名称> <地址>",
    "git remote rename <old> <new>": "git remote rename <旧名称> <新名称>",
    "git remote remove <name>": "git remote remove <名称>",
    "git remote set-head <name> (-a | --auto | -d | --delete | <branch>)": "git remote set-head <名称> (-a | --auto | -d | --delete | <分支>)",
    "git remote [-v | --verbose] show [-n] <name>": "git remote [-v | --verbose] show [-n] <名称>",
    "git remote prune [-n | --dry-run] <name>": "git remote prune [-n | --dry-run] <名称>",
    "git remote [-v | --verbose] update [-p | --prune] [(<group> | <remote>)...]": "git remote [-v | --verbose] update [-p | --prune] [(<组> | <远程>)...]",
    "git remote set-branches [--add] <name> <branch>...": "git remote set-branches [--add] <名称> <分支>...",
    "git remote get-url [--push] [--all] <name>": "git remote get-url [--push] [--all] <名称>",
    "git remote set-url [--push] <name> <newurl> [<oldurl>]": "git remote set-url [--push] <名称> <新的地址> [<旧的地址>]",
    "git remote set-url --add <name> <newurl>": "git remote set-url --add <名称> <新的地址>",
    "git remote set-url --delete <name> <url>": "git remote set-url --delete <名称> <地址>",
    "git remote add [<options>] <name> <url>": "git remote add [<选项>] <名称> <地址>",
    "git remote set-branches <name> <branch>...": "git remote set-branches <名称> <分支>...",
    "git remote set-branches --add <name> <branch>...": "git remote set-branches --add <名称> <分支>...",
    "git remote show [<options>] <name>": "git remote show [<选项>] <名称>",
    "git remote prune [<options>] <name>": "git remote prune [<选项>] <名称>",
    "git remote update [<options>] [<group> | <remote>]...": "git remote update [<选项>] [<组> | <远程>]...",
    "Updating %s": "更新 %s 中",
    "--mirror is dangerous and deprecated; please\n\t use --mirror=fetch or --mirror=push instead": "--mirror 选项危险且过时，请使用 --mirror=fetch\n\t 或 --mirror=push",
    "unknown mirror argument: %s": "未知的镜像参数：%s",
    "fetch the remote branches": "抓取远程的分支",
    "import all tags and associated objects when fetching": "抓取时导入所有的标签和关联对象",
    "or do not fetch any tag at all (--no-tags)": "或不抓取任何标签（--no-tags）",
    "branch(es) to track": "跟踪的分支",
    "master branch": "主线分支",
    "push|fetch": "push|fetch",
    "set up remote as a mirror to push to or fetch from": "把远程设置为用以推送或抓取的镜像",
    "specifying a master branch makes no sense with --mirror": "指定一个 master 分支并使用 --mirror 选项没有意义",
    "specifying branches to track makes sense only with fetch mirrors": "指定要跟踪的分支只在与获取镜像同时使用才有意义",
    "remote %s already exists.": "远程 %s 已经存在。",
    "'%s' is not a valid remote name": "'%s' 不是一个有效的远程名称",
    "Could not setup master '%s'": "无法设置 master '%s'",
    "Could not get fetch map for refspec %s": "无法得到引用规格 %s 的获取列表",
    "(matching)": "（匹配）",
    "(delete)": "（删除）",
    "No such remote: %s": "没有这样的远程：%s",
    "Could not rename config section '%s' to '%s'": "不能重命名配置小节 '%s' 到 '%s'",
    "Not updating non-default fetch refspec\n\t%s\n\tPlease update the configuration manually if necessary.": "没有更新非默认的获取引用规格\n\t%s\n\t如果必要请手动更新配置。",
    "deleting '%s' failed": "删除 '%s' 失败",
    "creating '%s' failed": "创建 '%s' 失败",
    "Note: A branch outside the refs/remotes/ hierarchy was not removed;\nto delete it, use:_plural": "注意：ref/remotes 层级之外的一个分支未被移除。要删除它，使用：",
    "Note: A branch outside the refs/remotes/ hierarchy was not removed;\nto delete it, use:": "注意：ref/remotes 层级之外的一些分支未被移除。要删除它们，使用：",
    "Could not remove config section '%s'": "不能移除配置小节 '%s'",
    " new (next fetch will store in remotes/%s)": " 新的（下一次获取将存储于 remotes/%s）",
    " tracked": " 已跟踪",
    " stale (use 'git remote prune' to remove)": " 过时（使用 'git remote prune' 来移除）",
    " ???": " ???",
    "invalid branch.%s.merge; cannot rebase onto > 1 branch": "无效的 branch.%s.merge，不能变基到一个以上的分支",
    "rebases interactively onto remote %s": "交互式变基到远程 %s",
    "rebases onto remote %s": "变基到远程 %s",
    " merges with remote %s": " 与远程 %s 合并",
    "merges with remote %s": "与远程 %s 合并",
    "%-*s    and with remote %s\n": "%-*s    以及和远程 %s\n",
    "create": "创建",
    "delete": "删除",
    "up to date": "最新",
    "fast-forwardable": "可快进",
    "local out of date": "本地已过时",
    "    %-*s forces to %-*s (%s)": "    %-*s 强制推送至 %-*s (%s)",
    "    %-*s pushes to %-*s (%s)": "    %-*s 推送至 %-*s (%s)",
    "    %-*s forces to %s": "    %-*s 强制推送至 %s",
    "    %-*s pushes to %s": "    %-*s 推送至 %s",
    "do not query remotes": "不查询远程",
    "* remote %s": "* 远程 %s",
    "  Fetch URL: %s": "  获取地址：%s",
    "(no URL)": "(无 URL)",
    "  Push  URL: %s": "  推送地址：%s",
    "  HEAD branch: %s": "  HEAD 分支：%s",
    "(not queried)": "（未查询）",
    "(unknown)": "（未知）",
    "  HEAD branch (remote HEAD is ambiguous, may be one of the following):\n": "  HEAD 分支（远程 HEAD 模糊，可能是下列中的一个）：\n",
    "  Remote branch:%s_plural": "  远程分支：%s",
    "  Remote branch:%s": "  远程分支：%s",
    " (status not queried)": "（状态未查询）",
    "  Local branch configured for 'git pull':_plural": "  为 'git pull' 配置的本地分支：",
    "  Local branch configured for 'git pull':": "  为 'git pull' 配置的本地分支：",
    "  Local refs will be mirrored by 'git push'": "  本地引用将在 'git push' 时被镜像",
    "  Local ref configured for 'git push'%s:_plural": "  为 'git push' 配置的本地引用%s：",
    "  Local ref configured for 'git push'%s:": "  为 'git push' 配置的本地引用%s：",
    "set refs/remotes/<name>/HEAD according to remote": "根据远程设置 refs/remotes/<名称>/HEAD",
    "delete refs/remotes/<name>/HEAD": "删除 refs/remotes/<名称>/HEAD",
    "Cannot determine remote HEAD": "无法确定远程 HEAD",
    "Multiple remote HEAD branches. Please choose one explicitly with:": "多个远程 HEAD 分支。请明确地选择一个用命令：",
    "Could not delete %s": "无法删除 %s",
    "Not a valid ref: %s": "不是一个有效引用：%s",
    "Could not setup %s": "不能设置 %s",
    " %s will become dangling!": " %s 将成为摇摆状态！",
    " %s has become dangling!": " %s 已成为摇摆状态！",
    "Pruning %s": "修剪 %s",
    "URL: %s": "URL：%s",
    " * [would prune] %s": " * [将删除] %s",
    " * [pruned] %s": " * [已删除] %s",
    "prune remotes after fetching": "抓取后清除远程",
    "No such remote '%s'": "没有此远程 '%s'",
    "add branch": "添加分支",
    "no remote specified": "未指定远程",
    "query push URLs rather than fetch URLs": "查询推送 URL 地址，而非获取 URL 地址",
    "return all URLs": "返回所有 URL 地址",
    "no URLs configured for remote '%s'": "没有给远程仓库 '%s' 设定 URL",
    "manipulate push URLs": "操作推送 URLS",
    "add URL": "添加 URL",
    "delete URLs": "删除 URLS",
    "--add --delete doesn't make sense": "--add --delete 无意义",
    "Invalid old URL pattern: %s": "无效的旧 URL 匹配模版：%s",
    "No such URL found: %s": "未找到此 URL：%s",
    "Will not delete all non-push URLs": "将不会删除所有非推送 URL 地址",
    "be verbose; must be placed before a subcommand": "冗长输出；必须置于子命令之前",
    "Unknown subcommand: %s": "未知子命令：%s",
    "git repack [<options>]": "git repack [<选项>]",
    "Incremental repacks are incompatible with bitmap indexes.  Use\n--no-write-bitmap-index or disable the pack.writebitmaps configuration.": "增量 repack 和 bitmap 索引不兼容。  使用 --no-write-bitmap-index\n或禁用 pack.writebitmaps 配置。",
    "pack everything in a single pack": "所有内容打包到一个包文件中",
    "same as -a, and turn unreachable objects loose": "和 -a 相同，并将不可达的对象设为松散对象",
    "remove redundant packs, and run git-prune-packed": "删除多余的包，运行 git-prune-packed",
    "pass --no-reuse-delta to git-pack-objects": "向 git-pack-objects 传递参数 --no-reuse-delta",
    "pass --no-reuse-object to git-pack-objects": "向 git-pack-objects 传递参数 --no-reuse-object",
    "do not run git-update-server-info": "不运行 git-update-server-info",
    "pass --local to git-pack-objects": "向 git-pack-objects 传递参数 --local",
    "write bitmap index": "写 bitmap 索引",
    "approxidate": "近似日期",
    "with -A, do not loosen objects older than this": "使用 -A，不要将早于给定时间的对象过期",
    "with -a, repack unreachable objects": "使用 -a ，重新对不可达对象打包",
    "size of the window used for delta compression": "用于增量压缩的窗口值",
    "bytes": "字节",
    "same as the above, but limit memory size instead of entries count": "和上面的相似，但限制内存大小而非条目数",
    "limits the maximum delta depth": "限制最大增量深度",
    "maximum size of each packfile": "每个包文件的最大尺寸",
    "repack objects in packs marked with .keep": "对标记为 .keep 的包中的对象重新打包",
    "cannot delete packs in a precious-objects repo": "不能删除珍品仓库中的打包文件",
    "--keep-unreachable and -A are incompatible": "--keep-unreachable 和 -A 不兼容",
    "failed to remove '%s'": "无法删除 '%s'",
    "git replace [-f] <object> <replacement>": "git replace [-f] <对象> <替换物>",
    "git replace [-f] --edit <object>": "git replace [-f] --edit <对象>",
    "git replace [-f] --graft <commit> [<parent>...]": "git replace [-f] --graft <提交> [<父提交>...]",
    "git replace -d <object>...": "git replace -d <对象>...",
    "git replace [--format=<format>] [-l [<pattern>]]": "git replace [--format=<格式>] [-l [<模式>]]",
    "Not a valid object name: '%s'": "不是一个有效的对象名：'%s'",
    "bad mergetag in commit '%s'": "提交 '%s' 中含有损坏的合并标签",
    "malformed mergetag in commit '%s'": "提交 '%s' 中含有非法的合并标签",
    "original commit '%s' contains mergetag '%s' that is discarded; use --edit instead of --graft": "原始提交 '%s' 包含已经丢弃的合并标签 '%s'，使用 --edit 代替 --graft",
    "the original commit '%s' has a gpg signature.": "原始提交 '%s' 中包含一个 GPG 签名",
    "the signature will be removed in the replacement commit!": "在替换的提交中签名将被移除！",
    "could not write replacement commit for: '%s'": "不能为 '%s' 写替换提交",
    "list replace refs": "列出替换的引用",
    "delete replace refs": "删除替换的引用",
    "edit existing object": "编辑现存的对象",
    "change a commit's parents": "修改一个提交的父提交",
    "replace the ref if it exists": "如果存在则替换引用",
    "do not pretty-print contents for --edit": "不要为 --edit 操作美观显示内容",
    "use this format": "使用此格式",
    "git rerere [clear | forget <path>... | status | remaining | diff | gc]": "git rerere [clear | forget <路径>... | status | remaining | diff | gc]",
    "register clean resolutions in index": "在索引中注册干净的解决方案",
    "git reset [--mixed | --soft | --hard | --merge | --keep] [-q] [<commit>]": "git reset [--mixed | --soft | --hard | --merge | --keep] [-q] [<提交>]",
    "git reset [-q] [<tree-ish>] [--] <paths>...": "git reset [-q] [<树或提交>] [--] <路径>...",
    "git reset --patch [<tree-ish>] [--] [<paths>...]": "git reset --patch [<树或提交>] [--] [<路径>...]",
    "mixed": "混杂",
    "soft": "软性",
    "hard": "硬性",
    "merge": "合并",
    "keep": "保持",
    "You do not have a valid HEAD.": "您没有一个有效的 HEAD。",
    "Failed to find tree of HEAD.": "无法找到 HEAD 指向的树。",
    "Failed to find tree of %s.": "无法找到 %s 指向的树。",
    "HEAD is now at %s": "HEAD 现在位于 %s",
    "Cannot do a %s reset in the middle of a merge.": "在合并过程中不能做%s重置操作。",
    "be quiet, only report errors": "安静模式，只报告错误",
    "reset HEAD and index": "重置 HEAD 和索引",
    "reset only HEAD": "只重置 HEAD",
    "reset HEAD, index and working tree": "重置 HEAD、索引和工作区",
    "reset HEAD but keep local changes": "重置 HEAD 但保存本地变更",
    "record only the fact that removed paths will be added later": "将删除的路径标记为稍后添加",
    "Failed to resolve '%s' as a valid revision.": "无法将 '%s' 解析为一个有效的版本。",
    "Failed to resolve '%s' as a valid tree.": "无法将 '%s' 解析为一个有效的树对象。",
    "--patch is incompatible with --{hard,mixed,soft}": "--patch 与 --{hard、mixed、soft} 选项不兼容",
    "--mixed with paths is deprecated; use 'git reset -- <paths>' instead.": "--mixed 带路径已弃用，而是用 'git reset -- <路径>'。",
    "Cannot do %s reset with paths.": "不能带路径进行%s重置。",
    "%s reset is not allowed in a bare repository": "不能对纯仓库进行%s重置",
    "-N can only be used with --mixed": "-N 只能和 --mixed 同时使用",
    "Unstaged changes after reset:": "重置后取消暂存的变更：",
    "Could not reset index file to revision '%s'.": "不能重置索引文件至版本 '%s'。",
    "Could not write new index file.": "不能写入新的索引文件。",
    "rev-list does not support display of notes": "rev-list 不支持显示注解",
    "git rev-parse --parseopt [<options>] -- [<args>...]": "git rev-parse --parseopt [<选项>] -- [<参数>...]",
    "keep the `--` passed as an arg": "保持 `--` 作为一个参数传递",
    "stop parsing after the first non-option argument": "遇到第一个非选项参数后停止解析",
    "output in stuck long form": "以固定长格式输出",
    "git rev-parse --parseopt [<options>] -- [<args>...]\n   or: git rev-parse --sq-quote [<arg>...]\n   or: git rev-parse [<options>] [<arg>...]\n\nRun \"git rev-parse --parseopt -h\" for more information on the first usage.": "git rev-parse --parseopt [<选项>] -- [<参数>...]\n   或者：git rev-parse --sq-quote [<参数>...]\n   或者：git rev-parse [<选项>] [<参数>...]\n\n初次使用时执行 \"git rev-parse --parseopt -h\" 来获得更多信息。",
    "git revert [<options>] <commit-ish>...": "git revert [<选项>] <提交号>...",
    "git revert <subcommand>": "git revert <子命令>",
    "git cherry-pick [<options>] <commit-ish>...": "git cherry-pick [<选项>] <提交号>...",
    "git cherry-pick <subcommand>": "git cherry-pick <子命令>",
    "%s: %s cannot be used with %s": "%s：%s 不能和 %s 同时使用",
    "end revert or cherry-pick sequence": "终止反转或拣选操作",
    "resume revert or cherry-pick sequence": "继续反转或拣选操作",
    "cancel revert or cherry-pick sequence": "取消反转或拣选操作",
    "don't automatically commit": "不要自动提交",
    "edit the commit message": "编辑提交说明",
    "parent number": "父编号",
    "merge strategy": "合并策略",
    "option": "选项",
    "option for merge strategy": "合并策略的选项",
    "append commit name": "追加提交名称",
    "preserve initially empty commits": "保留初始化的空提交",
    "allow commits with empty messages": "允许提交说明为空",
    "keep redundant, empty commits": "保持多余的、空的提交",
    "revert failed": "还原失败",
    "cherry-pick failed": "拣选失败",
    "git rm [<options>] [--] <file>...": "git rm [<选项>] [--] <文件>...",
    "the following file has staged content different from both the\nfile and the HEAD:_plural": "如下文件其暂存的内容和工作区及 HEAD 中的都不一样：",
    "the following file has staged content different from both the\nfile and the HEAD:": "如下文件其暂存的内容和工作区及 HEAD 中的都不一样：",
    "\n(use -f to force removal)": "\n（使用 -f 强制删除）",
    "the following file has changes staged in the index:_plural": "下列文件索引中有变更",
    "the following file has changes staged in the index:": "下列文件索引中有变更",
    "\n(use --cached to keep the file, or -f to force removal)": "\n（使用 --cached 保留本地文件，或用 -f 强制删除）",
    "the following file has local modifications:_plural": "如下文件有本地修改：",
    "the following file has local modifications:": "如下文件有本地修改：",
    "do not list removed files": "不列出删除的文件",
    "only remove from the index": "只从索引区删除",
    "override the up-to-date check": "忽略文件更新状态检查",
    "allow recursive removal": "允许递归删除",
    "exit with a zero status even if nothing matched": "即使没有匹配，也以零状态退出",
    "not removing '%s' recursively without -r": "未提供 -r 选项不会递归删除 '%s'",
    "git rm: unable to remove %s": "git rm：不能删除 %s",
    "could not remove '%s'": "无法删除 '%s'",
    "git send-pack [--all | --mirror] [--dry-run] [--force] [--receive-pack=<git-receive-pack>] [--verbose] [--thin] [--atomic] [<host>:]<directory> [<ref>...]\n  --all and explicit <ref> specification are mutually exclusive.": "git send-pack [--all | --mirror] [--dry-run] [--force] [--receive-pack=<git-receive-pack>] [--verbose] [--thin] [--atomic] [<主机>:]<目录> [<引用>...]\n  --all 和明确的 <引用> 互斥。",
    "remote name": "远程名称",
    "use stateless RPC protocol": "使用无状态的 RPC 协议",
    "read refs from stdin": "从标准输入读取引用",
    "print status from remote helper": "打印来自远程 helper 的状态",
    "git shortlog [<options>] [<revision-range>] [[--] [<path>...]]": "git shortlog [<选项>] [<版本范围>] [[--] [<路径>...]]",
    "Group by committer rather than author": "按照提交者分组而不是作者",
    "sort output according to the number of commits per author": "根据每个作者的提交数量排序",
    "Suppress commit descriptions, only provides commit count": "隐藏提交说明，只提供提交数量",
    "Show the email address of each author": "显示每个作者的电子邮件地址",
    "w[,i1[,i2]]": "w[,i1[,i2]]",
    "Linewrap output": "折行输出",
    "git show-branch [-a | --all] [-r | --remotes] [--topo-order | --date-order]\n\t\t[--current] [--color[=<when>] | --no-color] [--sparse]\n\t\t[--more=<n> | --list | --independent | --merge-base]\n\t\t[--no-name | --sha1-name] [--topics] [(<rev> | <glob>)...]": "git show-branch [-a | --all] [-r | --remotes] [--topo-order | --date-order]\n\t\t[--current] [--color[=<何时>] | --no-color] [--sparse]\n\t\t[--more=<n> | --list | --independent | --merge-base]\n\t\t[--no-name | --sha1-name] [--topics] [(<版本> | <通配符>)...]",
    "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<ref>]": "git show-branch (-g | --reflog)[=<n>[,<base>]] [--list] [<引用>]",
    "ignoring %s; cannot handle more than %d ref_plural": "忽略 %s，无法处理 %d 个以上的引用",
    "ignoring %s; cannot handle more than %d ref": "忽略 %s，无法处理 %d 个以上的引用",
    "no matching refs with %s": "没有和 %s 匹配的引用",
    "show remote-tracking and local branches": "显示远程跟踪的和本地的分支",
    "show remote-tracking branches": "显示远程跟踪的分支",
    "color '*!+-' corresponding to the branch": "着色 '*!+-' 到相应的分支",
    "show <n> more commits after the common ancestor": "显示共同祖先后的 <n> 个提交",
    "synonym to more=-1": "和 more=-1 同义",
    "suppress naming strings": "不显示字符串命名",
    "include the current branch": "包括当前分支",
    "name commits with their object names": "以对象名字命名提交",
    "show possible merge bases": "显示可能合并的基线",
    "show refs unreachable from any other ref": "显示没有任何引用的的引用",
    "show commits in topological order": "以拓扑顺序显示提交",
    "show only commits not on the first branch": "只显示不在第一个分支上的提交",
    "show merges reachable from only one tip": "显示仅一个分支可访问的合并提交",
    "topologically sort, maintaining date order where possible": "拓扑方式排序，并尽可能地保持日期顺序",
    "<n>[,<base>]": "<n>[,<base>]",
    "show <n> most recent ref-log entries starting at base": "显示从 base 开始的 <n> 条最近的引用日志记录",
    "--reflog is incompatible with --all, --remotes, --independent or --merge-base": "--reflog 和 --all、--remotes、--independent 或 --merge-base 不兼容",
    "no branches given, and HEAD is not valid": "未提供分支，且 HEAD 无效",
    "--reflog option needs one branch name": "选项 --reflog 需要一个分支名",
    "only %d entry can be shown at one time._plural": "一次只能显示 %d 个条目。",
    "only %d entry can be shown at one time.": "一次只能显示 %d 个条目。",
    "no such ref %s": "无此引用 %s",
    "cannot handle more than %d rev._plural": "不能处理 %d 个以上的版本。",
    "cannot handle more than %d rev.": "不能处理 %d 个以上的版本。",
    "'%s' is not a valid ref.": "'%s' 不是一个有效的引用。",
    "cannot find commit %s (%s)": "不能找到提交 %s（%s）",
    "git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<pattern>...]": "git show-ref [-q | --quiet] [--verify] [--head] [-d | --dereference] [-s | --hash[=<n>]] [--abbrev[=<n>]] [--tags] [--heads] [--] [<模式>...]",
    "git show-ref --exclude-existing[=<pattern>]": "git show-ref --exclude-existing[=<模式>]",
    "only show tags (can be combined with heads)": "只显示标签（可以和头共用）",
    "only show heads (can be combined with tags)": "只显示头（可以和标签共用）",
    "stricter reference checking, requires exact ref path": "更严格的引用检测，需要精确的引用路径",
    "show the HEAD reference, even if it would be filtered out": "显示 HEAD 引用，即使被过滤掉",
    "dereference tags into object IDs": "转换标签到对象 ID",
    "only show SHA1 hash using <n> digits": "只显示使用 <n> 个数字的 SHA1 哈希",
    "do not print results to stdout (useful with --verify)": "不打印结果到标准输出（例如与 --verify 参数共用）",
    "show refs from stdin that aren't in local repository": "显示从标准输入中读入的不在本地仓库中的引用",
    "git stripspace [-s | --strip-comments]": "git stripspace [-s | --strip-comments]",
    "git stripspace [-c | --comment-lines]": "git stripspace [-c | --comment-lines]",
    "skip and remove all lines starting with comment character": "跳过和移除所有的注释行",
    "prepend comment character and space to each line": "为每一行的行首添加注释符和空格",
    "No such ref: %s": "没有这样的引用：%s",
    "Expecting a full ref name, got %s": "期望一个完整的引用名称，却得到 %s",
    "cannot strip one component off url '%s'": "无法从 url '%s' 剥离一个组件",
    "alternative anchor for relative paths": "相对路径的替代锚记（anchor）",
    "git submodule--helper list [--prefix=<path>] [<path>...]": "git submodule--helper list [--prefix=<路径>] [<路径>...]",
    "No url found for submodule path '%s' in .gitmodules": "在 .gitmodules 中未找到子模组 '%s' 的 url",
    "Failed to register url for submodule path '%s'": "无法为子模组 '%s' 注册 url",
    "Submodule '%s' (%s) registered for path '%s'\n": "子模组 '%s'（%s）未对路径 '%s' 注册\n",
    "warning: command update mode suggested for submodule '%s'\n": "警告：建议子模组 '%s' 使用命令更新模式\n",
    "Failed to register update mode for submodule path '%s'": "无法为子模组 '%s' 注册更新模式",
    "Suppress output for initializing a submodule": "初始化子模组时抑制输出",
    "git submodule--helper init [<path>]": "git submodule--helper init [<路径>]",
    "git submodule--helper name <path>": "git submodule--helper name <路径>",
    "no submodule mapping found in .gitmodules for path '%s'": "在 .gitmodules 中没有发现路径 '%s' 的子模组映射",
    "submodule '%s' cannot add alternate: %s": "子模组 '%s' 不能添加仓库备选：%s",
    "Value '%s' for submodule.alternateErrorStrategy is not recognized": "不能识别 submodule.alternateErrorStrategy 的取值 '%s'",
    "Value '%s' for submodule.alternateLocation is not recognized": "不能识别 submodule.alternateLocaion 的取值 '%s'",
    "where the new submodule will be cloned to": "新的子模组将要克隆的路径",
    "name of the new submodule": "新子模组的名称",
    "url where to clone the submodule from": "克隆子模组的 url 地址",
    "depth for shallow clones": "浅克隆的深度",
    "force cloning progress": "强制显示克隆进度",
    "git submodule--helper clone [--prefix=<path>] [--quiet] [--reference <repository>] [--name <name>] [--depth <depth>] --url <url> --path <path>": "git submodule--helper clone [--prefix=<路径>] [--quiet] [--reference <仓库>] [--name <名字>] [--depth <深度>] --url <url> --path <路径>",
    "clone of '%s' into submodule path '%s' failed": "无法克隆 '%s' 到子模组路径 '%s'",
    "cannot open file '%s'": "无法打开文件 '%s'",
    "could not close file %s": "无法关闭文件 %s",
    "could not get submodule directory for '%s'": "无法得到 '%s' 的子模组目录",
    "Submodule path '%s' not initialized": "子模组 '%s' 尚未初始化",
    "Maybe you want to use 'update --init'?": "也许您想要执行 'update --init'？",
    "Skipping unmerged submodule %s": "略过未合并的子模组 %s",
    "Skipping submodule '%s'": "略过子模组 '%s'",
    "Failed to clone '%s'. Retry scheduled": "克隆 '%s' 失败。按计划重试",
    "Failed to clone '%s' a second time, aborting": "第二次尝试克隆 '%s' 失败，退出",
    "path into the working tree": "到工作区的路径",
    "path into the working tree, across nested submodule boundaries": "工作区中的路径，递归嵌套子模组",
    "rebase, merge, checkout or none": "rebase、merge、checkout 或 none",
    "Create a shallow clone truncated to the specified number of revisions": "创建一个指定深度的浅克隆",
    "parallel jobs": "并发任务",
    "whether the initial clone should follow the shallow recommendation": "初始克隆是否应该遵守推荐的浅克隆选项",
    "don't print cloning progress": "不要输出克隆进度",
    "git submodule--helper update_clone [--prefix=<path>] [<path>...]": "git submodule--helper update_clone [--prefix=<路径>] [<路径>...]",
    "bad value for update parameter": "update 参数取值错误",
    "Submodule (%s) branch configured to inherit branch from superproject, but the superproject is not on any branch": "子模组（%s）的分支配置为继承上级项目的分支，但是上级项目不在任何分支上",
    "recurse into submodules": "在子模组中递归",
    "git submodule--helper embed-git-dir [<path>...]": "git submodule--helper embed-git-dir [<路径>...]",
    "submodule--helper subcommand must be called with a subcommand": "submodule-helper 子命令必须由另外的子命令调用",
    "%s doesn't support --super-prefix": "%s 不支持 --super-prefix",
    "'%s' is not a valid submodule--helper subcommand": "'%s' 不是一个有效的 submodule--helper 子命令",
    "git symbolic-ref [<options>] <name> [<ref>]": "git symbolic-ref [<选项>] <名称> [<引用>]",
    "git symbolic-ref -d [-q] <name>": "git symbolic-ref -d [-q] <名称>",
    "suppress error message for non-symbolic (detached) refs": "不显示非符号（分离的）引用的错误信息",
    "delete symbolic ref": "删除符号引用",
    "shorten ref output": "简短的引用输出",
    "reason": "原因",
    "reason of the update": "更新的原因",
    "git tag [-a | -s | -u <key-id>] [-f] [-m <msg> | -F <file>] <tagname> [<head>]": "git tag [-a | -s | -u <key-id>] [-f] [-m <说明> | -F <文件>] <标签名> [<头>]",
    "git tag -d <tagname>...": "git tag -d <标签名>...",
    "git tag -l [-n[<num>]] [--contains <commit>] [--points-at <object>]\n\t\t[--format=<format>] [--[no-]merged [<commit>]] [<pattern>...]": "git tag -l [-n[<数字>]] [--contains <提交>] [--points-at <对象>]\n\t\t[--format=<格式>] [--[no-]merged [<提交>]] [<模式>...]",
    "git tag -v [--format=<format>] <tagname>...": "git tag -v [--format=<格式>] <标签名>...",
    "tag name too long: %.*s...": "标签名称太长：%.*s...",
    "tag '%s' not found.": "未发现标签 '%s'。",
    "Deleted tag '%s' (was %s)\n": "已删除标签 '%s'（曾为 %s）\n",
    "\nWrite a message for tag:\n  %s\nLines starting with '%c' will be ignored.\n": "\n输入一个标签说明：\n  %s\n以 '%c' 开头的行将被忽略。\n",
    "\nWrite a message for tag:\n  %s\nLines starting with '%c' will be kept; you may remove them yourself if you want to.\n": "\n输入一个标签说明：\n  %s\n以 '%c' 开头的行将被保留，如果您愿意也可以删除它们。\n",
    "unable to sign the tag": "无法签署标签",
    "unable to write tag file": "无法写标签文件",
    "bad object type.": "坏的对象类型。",
    "tag header too big.": "标签头信息太大。",
    "no tag message?": "无标签说明？",
    "The tag message has been left in %s\n": "标签说明被保留在 %s\n",
    "list tag names": "列出标签名称",
    "print <n> lines of each tag message": "每个标签信息打印 <n> 行",
    "delete tags": "删除标签",
    "verify tags": "验证标签",
    "Tag creation options": "标签创建选项",
    "annotated tag, needs a message": "附注标签，需要一个说明",
    "tag message": "标签说明",
    "annotated and GPG-signed tag": "附注并附加 GPG 签名的标签",
    "use another key to sign the tag": "使用另外的私钥签名该标签",
    "replace the tag if exists": "如果存在，替换现有的标签",
    "create a reflog": "创建引用日志",
    "Tag listing options": "标签列表选项",
    "show tag list in columns": "以列的方式显示标签列表",
    "print only tags that contain the commit": "只打印包含提交的标签",
    "print only tags that are merged": "只打印已经合并的标签",
    "print only tags that are not merged": "只打印尚未合并的标签",
    "print only tags of the object": "只打印对象的标签",
    "--column and -n are incompatible": "--column 和 -n 不兼容",
    "-n option is only allowed with -l.": "-n 选项只允许和 -l 同时使用。",
    "--contains option is only allowed with -l.": "--contains 选项只允许和 -l 同时使用。",
    "--points-at option is only allowed with -l.": "--points-at 选项只允许和 -l 同时使用。",
    "--merged and --no-merged option are only allowed with -l": "选项 --merged 和 --no-merged 只能和 -l 共用",
    "only one -F or -m option is allowed.": "只允许一个 -F 或 -m 选项。",
    "too many params": "太多参数",
    "'%s' is not a valid tag name.": "'%s' 不是一个有效的标签名称。",
    "tag '%s' already exists": "标签 '%s' 已存在",
    "Updated tag '%s' (was %s)\n": "已更新标签 '%s'（曾为 %s）\n",
    "Unpacking objects": "展开对象中",
    "failed to create directory %s": "无法创建目录 %s",
    "failed to stat %s": "无法枚举 %s 状态",
    "failed to create file %s": "无法创建文件 %s",
    "failed to delete file %s": "无法删除文件 %s",
    "failed to delete directory %s": "无法删除目录 %s",
    "Testing mtime in '%s' ": "在 '%s' 中测试 mtime ",
    "directory stat info does not change after adding a new file": "添加一个新文件后，目录的状态信息未改变",
    "directory stat info does not change after adding a new directory": "添加一个新目录后，目录的状态信息未改变",
    "directory stat info changes after updating a file": "更新一个文件后，目录的状态信息被修改",
    "directory stat info changes after adding a file inside subdirectory": "在子目录中添加文件后，目录的状态信息被修改",
    "directory stat info does not change after deleting a file": "删除一个文件后，目录的状态信息未改变",
    "directory stat info does not change after deleting a directory": "删除一个目录后，目录的状态信息未改变",
    " OK": " OK",
    "git update-index [<options>] [--] [<file>...]": "git update-index [<选项>] [--] [<文件>...]",
    "continue refresh even when index needs update": "当索引需要更新时继续刷新",
    "refresh: ignore submodules": "刷新：忽略子模组",
    "do not ignore new files": "不忽略新的文件",
    "let files replace directories and vice-versa": "让文件替换目录（反之亦然）",
    "notice files missing from worktree": "通知文件从工作区丢失",
    "refresh even if index contains unmerged entries": "即使索引区包含未合并的条目也执行刷新",
    "refresh stat information": "刷新统计信息",
    "like --refresh, but ignore assume-unchanged setting": "类似于 --refresh，但是忽略 assume-unchanged 设置",
    "<mode>,<object>,<path>": "<存取模式>,<对象>,<路径>",
    "add the specified entry to the index": "添加指定的条目到索引区",
    "mark files as \"not changing\"": "把文件标记为 \"没有变更\"",
    "clear assumed-unchanged bit": "清除 assumed-unchanged 位",
    "mark files as \"index-only\"": "把文件标记为 \"仅索引\"",
    "clear skip-worktree bit": "清除 skip-worktree 位",
    "add to index only; do not add content to object database": "只添加到索引区；不添加对象到对象库",
    "remove named paths even if present in worktree": "即使存在工作区里，也删除路径",
    "with --stdin: input lines are terminated by null bytes": "携带 --stdin：输入的行以 null 字符终止",
    "read list of paths to be updated from standard input": "从标准输入中读取需要更新的路径列表",
    "add entries from standard input to the index": "从标准输入添加条目到索引区",
    "repopulate stages #2 and #3 for the listed paths": "为指定文件重新生成第2和第3暂存区",
    "only update entries that differ from HEAD": "只更新与 HEAD 不同的条目",
    "ignore files missing from worktree": "忽略工作区丢失的文件",
    "report actions to standard output": "在标准输出显示操作",
    "(for porcelains) forget saved unresolved conflicts": "(for porcelains) 忘记保存的未解决的冲突",
    "write index in this format": "以这种格式写入索引区",
    "enable or disable split index": "启用或禁用索引拆分",
    "enable/disable untracked cache": "启用/禁用对未跟踪文件的缓存",
    "test if the filesystem supports untracked cache": "测试文件系统是否支持未跟踪文件缓存",
    "enable untracked cache without testing the filesystem": "无需检测文件系统，启用对未跟踪文件的缓存",
    "core.untrackedCache is set to true; remove or change it, if you really want to disable the untracked cache": "core.untrackedCache 被设置为 true。如果您确实要禁用未跟踪文件缓存，请删除或修改它。",
    "Untracked cache disabled": "缓存未跟踪文件被禁用",
    "core.untrackedCache is set to false; remove or change it, if you really want to enable the untracked cache": "core.untrackedCache 被设置为 false。如果您确实要启用未跟踪文件缓存，请删除或修改它。",
    "Untracked cache enabled for '%s'": "缓存未跟踪文件在 '%s' 启用",
    "git update-ref [<options>] -d <refname> [<old-val>]": "git update-ref [<选项>] -d <引用名> [<旧值>]",
    "git update-ref [<options>]    <refname> <new-val> [<old-val>]": "git update-ref [<选项>]    <引用名> <新值> [<旧值>]",
    "git update-ref [<options>] --stdin [-z]": "git update-ref [<选项>] --stdin [-z]",
    "delete the reference": "删除引用",
    "update <refname> not the one it points to": "更新 <引用名> 本身而不是它指向的引用",
    "stdin has NUL-terminated arguments": "标准输入有以 NUL 字符终止的参数",
    "read updates from stdin": "从标准输入读取更新",
    "git update-server-info [--force]": "git update-server-info [--force]",
    "update the info files from scratch": "从头开始更新文件信息",
    "git verify-commit [-v | --verbose] <commit>...": "git verify-commit [-v | --verbose] <提交>...",
    "print commit contents": "打印提交内容",
    "print raw gpg status output": "打印原始 gpg 状态输出",
    "git verify-pack [-v | --verbose] [-s | --stat-only] <pack>...": "git verify-pack [-v | --verbose] [-s | --stat-only] <包>...",
    "verbose": "冗长输出",
    "show statistics only": "只显示统计",
    "git verify-tag [-v | --verbose] [--format=<format>] <tag>...": "git verify-tag [-v | --verbose] [--format=<格式>] <标签>...",
    "print tag contents": "打印标签内容",
    "git worktree add [<options>] <path> [<branch>]": "git worktree add [<选项>] <路径> [<分支>]",
    "git worktree list [<options>]": "git worktree list [<选项>]",
    "git worktree lock [<options>] <path>": "git worktree lock [<选项>] <路径>",
    "git worktree prune [<options>]": "git worktree prune [<选项>]",
    "git worktree unlock <path>": "git worktree unlock <路径>",
    "Removing worktrees/%s: not a valid directory": "删除工作区/%s：不是一个有效的目录",
    "Removing worktrees/%s: gitdir file does not exist": "删除 worktrees/%s：gitdir 文件不存在",
    "Removing worktrees/%s: unable to read gitdir file (%s)": "删除 worktrees/%s：无法读取 gitdir 文件 (%s)",
    "Removing worktrees/%s: invalid gitdir file": "删除 worktrees/%s：无效的 gitdir 文件",
    "Removing worktrees/%s: gitdir file points to non-existent location": "删除 worktrees/%s：gitdir 文件的指向不存在",
    "report pruned working trees": "报告清除的工作区",
    "expire working trees older than <time>": "将早于 <time> 的工作区过期",
    "'%s' already exists": "'%s' 已经存在",
    "could not create directory of '%s'": "不能创建目录 '%s'",
    "Preparing %s (identifier %s)": "准备 %s（标识符 %s）",
    "checkout <branch> even if already checked out in other worktree": "检出分支 <branch> 即使已经被检出到其它工作区",
    "create a new branch": "创建一个新分支",
    "create or reset a branch": "创建或重置一个分支",
    "populate the new working tree": "生成新的工作区",
    "-b, -B, and --detach are mutually exclusive": "-b、-B 和 --detach 是互斥的",
    "reason for locking": "锁定原因",
    "'%s' is not a working tree": "'%s' 不是一个工作区",
    "The main working tree cannot be locked or unlocked": "主工作区无法被加锁或解锁",
    "'%s' is already locked, reason: %s": "'%s' 已被锁定，原因：%s",
    "'%s' is already locked": "'%s' 已被锁定",
    "'%s' is not locked": "'%s' 未被锁定",
    "git write-tree [--missing-ok] [--prefix=<prefix>/]": "git write-tree [--missing-ok] [--prefix=<前缀>/]",
    "<prefix>/": "<前缀>/",
    "write tree object for a subdirectory <prefix>": "将 <前缀> 子目录内容写到一个树对象",
    "only useful for debugging": "只对调试有用",
    "git upload-pack [<options>] <dir>": "git upload-pack [<选项>] <目录>",
    "quit after a single request/response exchange": "在一次单独的请求/响应（request/response）交换后退出",
    "exit immediately after initial ref advertisement": "在初始的引用广告后立即退出",
    "do not try <directory>/.git/ if <directory> is no Git directory": "不要尝试 <directory>/.git/ 如果 <directory> 不是一个 Git 目录",
    "interrupt transfer after <n> seconds of inactivity": "不活动 <n> 秒钟后终止传输",
    "The permissions on your socket directory are too loose; other\nusers may be able to read your cached credentials. Consider running:\n\n\tchmod 0700 %s": "您的 socket 目录权限过于宽松，其他用户可能会读取您缓存的认证信息。考虑执行：\n\n\tchmod 0700 %s",
    "print debugging messages to stderr": "调试信息输出到标准错误",
    "'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.": "命令 'git help -a' 和 'git help -g' 显示可用的子命令和一些概念帮助。\n查看 'git help <命令>' 或 'git help <概念>' 以获取给定子命令或概念的\n帮助。",
    "Delegation control is not supported with cURL < 7.22.0": "当 cURL < 7.22.0 时，不支持委托控制",
    "Public key pinning not supported with cURL < 7.44.0": "不支持公钥文件锁定，因为 cURL < 7.44.0",
    "unable to update url base from redirection:\n  asked for: %s\n   redirect: %s": "不能更新重定向的 url base：\n     请求：%s\n   重定向：%s",
    "redirecting to %s": "重定向到 %s",
    "start a working area (see also: git help tutorial)": "开始一个工作区（参见：git help tutorial）",
    "work on the current change (see also: git help everyday)": "在当前变更上工作（参见：git help everyday）",
    "examine the history and state (see also: git help revisions)": "检查历史和状态（参见：git help revisions）",
    "grow, mark and tweak your common history": "扩展、标记和调校您的历史记录",
    "collaborate (see also: git help workflows)": "协同（参见：git help workflows）",
    "Add file contents to the index": "添加文件内容至索引",
    "Use binary search to find the commit that introduced a bug": "通过二分查找定位引入 bug 的提交",
    "List, create, or delete branches": "列出、创建或删除分支",
    "Switch branches or restore working tree files": "切换分支或恢复工作区文件",
    "Clone a repository into a new directory": "克隆一个仓库到一个新目录",
    "Record changes to the repository": "记录变更到仓库",
    "Show changes between commits, commit and working tree, etc": "显示提交之间、提交和工作区之间等的差异",
    "Download objects and refs from another repository": "从另外一个仓库下载对象和引用",
    "Print lines matching a pattern": "输出和模式匹配的行",
    "Create an empty Git repository or reinitialize an existing one": "创建一个空的 Git 仓库或重新初始化一个已存在的仓库",
    "Show commit logs": "显示提交日志",
    "Join two or more development histories together": "合并两个或更多开发历史",
    "Move or rename a file, a directory, or a symlink": "移动或重命名一个文件、目录或符号链接",
    "Fetch from and integrate with another repository or a local branch": "获取并整合另外的仓库或一个本地分支",
    "Update remote refs along with associated objects": "更新远程引用和相关的对象",
    "Reapply commits on top of another base tip": "在另一个分支上重新应用提交",
    "Reset current HEAD to the specified state": "重置当前 HEAD 到指定状态",
    "Remove files from the working tree and from the index": "从工作区和索引中删除文件",
    "Show various types of objects": "显示各种类型的对象",
    "Show the working tree status": "显示工作区状态",
    "Create, list, delete or verify a tag object signed with GPG": "创建、列出、删除或校验一个 GPG 签名的标签对象",
    "expiry-date": "到期时间",
    "no-op (backward compatibility)": "空操作（向后兼容）",
    "be more verbose": "更加详细",
    "be more quiet": "更加安静",
    "use <n> digits to display SHA-1s": "用 <n> 位数字显示 SHA-1 哈希值",
    "update the index with reused conflict resolution if possible": "如果可能，重用冲突解决更新索引",
    "You need to start by \"git bisect start\"": "您需要执行 \"git bisect start\" 来开始",
    "Do you want me to do it for you [Y/n]? ": "您想让我为您这样做么[Y/n]？ ",
    "unrecognised option: '$arg'": "未能识别的选项：'$arg'",
    "'$arg' does not appear to be a valid revision": "'$arg' 看起来不像是一个有效的版本",
    "Bad HEAD - I need a HEAD": "坏的 HEAD - 我需要一个 HEAD",
    "Checking out '$start_head' failed. Try 'git bisect reset <valid-branch>'.": "检出 '$start_head' 失败。尝试 'git bisect reset <有效分支>'。",
    "won't bisect on cg-seek'ed tree": "不会在做了 cg-seek 的树上做二分查找",
    "Bad HEAD - strange symbolic ref": "坏的 HEAD - 奇怪的符号引用",
    "Bad bisect_write argument: $state": "坏的 bisect_write 参数：$state",
    "Bad rev input: $arg": "坏的输入版本：$arg",
    "Bad rev input: $bisected_head": "坏的输入版本：$bisected_head",
    "Bad rev input: $rev": "坏的输入版本：$rev",
    "'git bisect $TERM_BAD' can take only one argument.": "'git bisect $TERM_BAD' 只能带一个参数。",
    "Warning: bisecting only with a $TERM_BAD commit.": "警告：在仅有一个坏（$TERM_BAD）提交下进行二分查找。",
    "Are you sure [Y/n]? ": "您确认么[Y/n]？ ",
    "You need to give me at least one $bad_syn and one $good_syn revision.\n(You can use \"git bisect $bad_syn\" and \"git bisect $good_syn\" for that.)": "您需要给我至少一个好版本和一个坏版本。\n（为此您可以用 \"git bisect $bad_syn\" 和 \"git bisect $good_syn\" 命令。）",
    "You need to start by \"git bisect start\".\nYou then need to give me at least one $good_syn and one $bad_syn revision.\n(You can use \"git bisect $bad_syn\" and \"git bisect $good_syn\" for that.)": "您需要执行 \"git bisect start\" 来开始。\n然后需要提供我至少一个好版本和一个坏版本。\n（为此您可以用 \"git bisect $bad_syn\" 和 \"git bisect $good_syn\" 命令。）",
    "We are not bisecting.": "我们没有在二分查找。",
    "'$invalid' is not a valid commit": "'$invalid' 不是一个有效的提交",
    "Could not check out original HEAD '$branch'.\nTry 'git bisect reset <commit>'.": "不能检出原始 HEAD '$branch'。\n尝试 'git bisect reset <提交>'。",
    "No logfile given": "未提供日志文件",
    "cannot read $file for replaying": "不能读取 $file 来重放",
    "?? what are you talking about?": "?? 您在说什么?",
    "running $command": "运行 $command",
    "bisect run failed:\nexit code $res from '$command' is < 0 or >= 128": "二分查找运行失败：\n命令 '$command' 的退出码 $res 小于 0 或大于等于 128",
    "bisect run cannot continue any more": "二分查找不能继续运行",
    "bisect run failed:\n'bisect_state $state' exited with error code $res": "二分查找运行失败：\n'bisect_state $state' 退出码为 $res",
    "bisect run success": "二分查找运行成功",
    "please use two different terms": "请使用两个不同的术语",
    "'$term' is not a valid term": "'$term' 不是一个有效的名称",
    "can't use the builtin command '$term' as a term": "不能使用内置命令 '$term' 作为术语",
    "can't change the meaning of term '$term'": "不能修改术语 '$term' 的含义",
    "Invalid command: you're currently in a $TERM_BAD/$TERM_GOOD bisect.": "无效的命令：您当前正处于一个 $TERM_BAD/$TERM_GOOD 二分查找。",
    "no terms defined": "未定义术语",
    "invalid argument $arg for 'git bisect terms'.\nSupported options are: --term-good|--term-old and --term-bad|--term-new.": "参数 $arg 对命令 'git bisect terms' 无效。\n支持的选项有：--term-good|--term-old 和 --term-bad|--term-new。",
    "Error: Your local changes to the following files would be overwritten by merge": "错误：您对下列文件的本地修改将被合并操作覆盖",
    "Automated merge did not work.": "自动合并未生效。",
    "Should not be doing an octopus.": "不应该执行章鱼式合并。",
    "Unable to find common commit with $pretty_name": "无法找到和 $pretty_name 的基线提交",
    "Already up-to-date with $pretty_name": "已经和 $pretty_name 保持一致",
    "Fast-forwarding to: $pretty_name": "快进至：$pretty_name",
    "Trying simple merge with $pretty_name": "尝试和 $pretty_name 的简单合并",
    "Simple merge did not work, trying automatic merge.": "简单合并未生效，尝试自动合并。",
    "When you have resolved this problem, run \"git rebase --continue\".\nIf you prefer to skip this patch, run \"git rebase --skip\" instead.\nTo check out the original branch and stop rebasing, run \"git rebase --abort\".": "当您解决了此问题后，执行 \"git rebase --continue\"。\n如果您想跳过此补丁，则执行 \"git rebase --skip\"。\n要恢复原分支并停止变基，执行 \"git rebase --abort\"。",
    "Could not move back to $head_name": "无法移回 $head_name",
    "Cannot store $stash_sha1": "无法保存 $stash_sha1",
    "The pre-rebase hook refused to rebase.": "钩子 pre-rebase 拒绝变基操作。",
    "It looks like git-am is in progress. Cannot rebase.": "似乎正处于在 git-am 的执行过程中。无法变基。",
    "No rebase in progress?": "没有正在进行的变基？",
    "The --edit-todo action can only be used during interactive rebase.": "动作 --edit-todo 只能用在交互式变基过程中。",
    "Cannot read HEAD": "不能读取 HEAD",
    "You must edit all merge conflicts and then\nmark them as resolved using git add": "您必须编辑所有的合并冲突，然后通过 git add\n命令将它们标记为已解决",
    "It seems that there is already a $state_dir_base directory, and\nI wonder if you are in the middle of another rebase.  If that is the\ncase, please try\n\t$cmd_live_rebase\nIf that is not the case, please\n\t$cmd_clear_stale_rebase\nand run me again.  I am stopping in case you still have something\nvaluable there.": "好像已有 $state_dir_base 目录，我怀疑您正处于另外一个变基操作\n过程中。 如果是这样，请执行\n\t$cmd_live_rebase\n如果不是这样，请执行\n\t$cmd_clear_stale_rebase\n然后再重新执行变基操作。 为避免丢失重要数据，我已经停止当前操作。",
    "invalid upstream $upstream_name": "无效的上游 $upstream_name",
    "$onto_name: there are more than one merge bases": "$onto_name: 有一个以上的合并基准",
    "$onto_name: there is no merge base": "$onto_name: 没有合并基准",
    "Does not point to a valid commit: $onto_name": "没有指向一个有效的提交：$onto_name",
    "fatal: no such branch: $branch_name": "严重错误：无此分支：$branch_name",
    "Cannot autostash": "无法 autostash",
    "Created autostash: $stash_abbrev": "创建了 autostash: $stash_abbrev",
    "Please commit or stash them.": "请提交或为它们保存进度。",
    "Current branch $branch_name is up to date.": "当前分支 $branch_name 是最新的。",
    "Current branch $branch_name is up to date, rebase forced.": "当前分支 $branch_name 是最新的，强制变基。",
    "Changes from $mb to $onto:": "变更从 $mb 到 $onto：",
    "First, rewinding head to replay your work on top of it...": "首先，回退分支以便在上面重放您的工作...",
    "Fast-forwarded $branch_name to $onto_name.": "快进 $branch_name 至 $onto_name。",
    "git stash clear with parameters is unimplemented": "git stash clear 不支持参数",
    "You do not have the initial commit yet": "您尚未建立初始提交",
    "Cannot save the current index state": "无法保存当前索引状态",
    "Cannot save the untracked files": "无法保存未跟踪文件",
    "Cannot save the current worktree state": "无法保存当前工作区状态",
    "No changes selected": "没有选择变更",
    "Cannot remove temporary index (can't happen)": "无法删除临时索引（不应发生）",
    "Cannot record working tree state": "不能记录工作区状态",
    "Cannot update $ref_stash with $w_commit": "无法用 $w_commit 更新 $ref_stash",
    "error: unknown option for 'stash save': $option\n       To provide a message, use git stash save -- '$option'": "错误：'stash save' 的未知选项：$option\n      要提供一个描述信息，使用 git stash save -- '$option'",
    "Can't use --patch and --include-untracked or --all at the same time": "不能同时使用参数 --patch 和 --include-untracked 或 --all",
    "No local changes to save": "没有要保存的本地修改",
    "Cannot initialize stash": "无法初始化 stash",
    "Cannot save the current status": "无法保存当前状态",
    "Saved working directory and index state $stash_msg": "保存工作目录和索引状态 $stash_msg",
    "Cannot remove worktree changes": "无法删除工作区变更",
    "unknown option: $opt": "未知选项: $opt",
    "No stash found.": "未发现 stash。",
    "Too many revisions specified: $REV": "指定了太多的版本：$REV",
    "$reference is not a valid reference": "$reference 不是一个有效的引用",
    "'$args' is not a stash-like commit": "'$args' 不是 stash 样提交",
    "'$args' is not a stash reference": "'$args' 不是一个 stash 引用",
    "unable to refresh index": "无法刷新索引",
    "Cannot apply a stash in the middle of a merge": "无法在合并过程中恢复进度",
    "Conflicts in index. Try without --index.": "索引中有冲突。尝试不使用 --index。",
    "Could not save index tree": "不能保存索引树",
    "Could not restore untracked files from stash": "无法从进度保存中恢复未跟踪文件",
    "Cannot unstage modified files": "无法将修改的文件取消暂存",
    "Index was not unstashed.": "索引的进度没有被恢复。",
    "The stash is kept in case you need it again.": "暂存被保留以备您再次需要。",
    "Dropped ${REV} ($s)": "丢弃了 ${REV} ($s)",
    "${REV}: Could not drop stash entry": "${REV}：不能丢弃进度条目",
    "No branch name specified": "未指定分支名",
    "(To restore them type \"git stash apply\")": "（为恢复数据输入 \"git stash apply\"）",
    "Relative path can only be used from the toplevel of the working tree": "只能在工作区的顶级目录中使用相对路径",
    "repo URL: '$repo' must be absolute or begin with ./|../": "仓库 URL：'$repo' 必须是绝对路径或以 ./|../ 起始",
    "'$sm_path' already exists in the index": "'$sm_path' 已经存在于索引中",
    "'$sm_path' already exists in the index and is not a submodule": "'$sm_path' 已经存在于索引中且不是一个子模组",
    "The following path is ignored by one of your .gitignore files:\n$sm_path\nUse -f if you really want to add it.": "以下路径被您的一个 .gitignore 文件所忽略：\n$sm_path\n如果您确实想添加它，使用 -f 参数。",
    "Adding existing repo at '$sm_path' to the index": "添加位于 '$sm_path' 的现存仓库到索引",
    "'$sm_path' already exists and is not a valid git repo": "'$sm_path' 已存在且不是一个有效的 git 仓库",
    "A git directory for '$sm_name' is found locally with remote(s):": "本地发现 '$sm_name' 的一个 git 目录，与其对应的远程仓库：",
    "If you want to reuse this local git directory instead of cloning again from\n  $realrepo\nuse the '--force' option. If the local git directory is not the correct repo\nor you are unsure what this means choose another name with the '--name' option.": "如果您想要重用这个本地 git 目录而非重新克隆自\n  $realrepo\n使用 '--force' 选项。如果本地 git 目录不是正确的仓库\n或者您不确定这里的含义，使用 '--name' 选项选择另外的名称。",
    "Reactivating local git directory for submodule '$sm_name'.": "激活本地 git 目录到子模组 '$sm_name'。",
    "Unable to checkout submodule '$sm_path'": "不能检出子模组 '$sm_path'",
    "Failed to add submodule '$sm_path'": "无法添加子模组 '$sm_path'",
    "Failed to register submodule '$sm_path'": "无法注册子模组 '$sm_path'",
    "Entering '$displaypath'": "正在进入 '$displaypath'",
    "Stopping at '$displaypath'; script returned non-zero status.": "停止于 '$displaypath'；脚本返回非零值。",
    "pathspec and --all are incompatible": "pathspec 和 --all 不兼容",
    "Use '--all' if you really want to deinitialize all submodules": "如果您确实想要对所有子模组执行取消初始化，请使用 '--all'",
    "Submodule work tree '$displaypath' contains a .git directory\n(use 'rm -rf' if you really want to remove it including all of its history)": "子模组工作区 '$displaypath' 包含一个 .git 目录\n（如果您真的想删除它及其全部历史，使用 'rm -rf' 命令）",
    "Submodule work tree '$displaypath' contains local modifications; use '-f' to discard them": "子模组工作区 '$displaypath' 包含本地修改；使用 '-f' 丢弃它们",
    "Cleared directory '$displaypath'": "已清除目录 '$displaypath'",
    "Could not remove submodule work tree '$displaypath'": "无法移除子模组工作区 '$displaypath'",
    "Could not create empty submodule directory '$displaypath'": "不能创建空的子模组目录 '$displaypath'",
    "Submodule '$name' ($url) unregistered for path '$displaypath'": "子模组 '$name' ($url) 未对路径 '$displaypath' 注册",
    "Unable to find current revision in submodule path '$displaypath'": "无法在子模组路径 '$displaypath' 中找到当前版本",
    "Unable to fetch in submodule path '$sm_path'": "无法在子模组路径 '$sm_path' 中获取",
    "Unable to find current ${remote_name}/${branch} revision in submodule path '$sm_path'": "无法在子模组路径 '$sm_path' 中找到当前版本 ${remote_name}/${branch}",
    "Unable to fetch in submodule path '$displaypath'": "无法在子模组路径 '$displaypath' 中获取",
    "Fetched in submodule path '$displaypath', but it did not contain $sha1. Direct fetching of that commit failed.": "获取了子模组路径 '$displaypath'，但是它没有包含 $sha1。直接获取该提交失败。",
    "Unable to checkout '$sha1' in submodule path '$displaypath'": "无法在子模组路径 '$displaypath' 中检出 '$sha1'",
    "Submodule path '$displaypath': checked out '$sha1'": "子模组路径 '$displaypath'：检出 '$sha1'",
    "Unable to rebase '$sha1' in submodule path '$displaypath'": "无法在子模组路径 '$displaypath' 中变基 '$sha1'",
    "Submodule path '$displaypath': rebased into '$sha1'": "子模组路径 '$displaypath'：变基至 '$sha1'",
    "Unable to merge '$sha1' in submodule path '$displaypath'": "无法合并 '$sha1' 到子模组路径 '$displaypath' 中",
    "Submodule path '$displaypath': merged in '$sha1'": "子模组路径 '$displaypath'：已合并入 '$sha1'",
    "Execution of '$command $sha1' failed in submodule path '$displaypath'": "在子模组 '$displaypath' 中执行 '$command $sha1' 失败",
    "Submodule path '$displaypath': '$command $sha1'": "子模组 '$displaypath'：'$command $sha1'",
    "Failed to recurse into submodule path '$displaypath'": "无法递归进子模组路径 '$displaypath'",
    "The --cached option cannot be used with the --files option": "选项 --cached 不能和选项 --files 同时使用",
    "unexpected mode $mod_dst": "意外的模式 $mod_dst",
    "  Warn: $display_name doesn't contain commit $sha1_src": "  警告：$display_name 未包含提交 $sha1_src",
    "  Warn: $display_name doesn't contain commit $sha1_dst": "  警告：$display_name 未包含提交 $sha1_dst",
    "  Warn: $display_name doesn't contain commits $sha1_src and $sha1_dst": "  警告：$display_name 未包含提交 $sha1_src 和 $sha1_dst",
    "Failed to recurse into submodule path '$sm_path'": "无法递归进子模组路径 '$sm_path'",
    "Synchronizing submodule url for '$displaypath'": "为 '$displaypath' 同步子模组 url",
    "See git-${cmd}(1) for details.": "详见 git-${cmd}(1)。",
    "Rebasing ($new_count/$total)": "变基中（$new_count/$total）",
    "\nCommands:\n p, pick = use commit\n r, reword = use commit, but edit the commit message\n e, edit = use commit, but stop for amending\n s, squash = use commit, but meld into previous commit\n f, fixup = like \"squash\", but discard this commit's log message\n x, exec = run command (the rest of the line) using shell\n d, drop = remove commit\n\nThese lines can be re-ordered; they are executed from top to bottom.\n": "\n命令:\n p, pick = 使用提交\n r, reword = 使用提交，但修改提交说明\n e, edit = 使用提交，但停止以便进行提交修补\n s, squash = 使用提交，但和前一个版本融合\n f, fixup = 类似于 \"squash\"，但丢弃提交说明日志\n x, exec = 使用 shell 运行命令（此行剩余部分）\n d, drop = 删除提交\n\n这些行可以被重新排序；它们会被从上至下地执行。\n\n",
    "\nDo not remove any line. Use 'drop' explicitly to remove a commit.\n": "\n不要删除任意一行。使用 'drop' 显式地删除一个提交。\n",
    "\nIf you remove a line here THAT COMMIT WILL BE LOST.\n": "\n如果您在这里删除一行，对应的提交将会丢失。\n",
    "You can amend the commit now, with\n\n\tgit commit --amend $gpg_sign_opt_quoted\n\nOnce you are satisfied with your changes, run\n\n\tgit rebase --continue": "您现在可以修补这个提交，使用\n\n\tgit commit --amend $gpg_sign_opt_quoted\n\n当您对变更感到满意，执行\n\n\tgit rebase --continue",
    "$sha1: not a commit that can be picked": "$sha1：不是一个可以被拣选的提交",
    "Invalid commit name: $sha1": "无效的提交名：$sha1",
    "Cannot write current commit's replacement sha1": "不能写入当前提交的替代 sha1",
    "Fast-forward to $sha1": "快进到 $sha1",
    "Cannot fast-forward to $sha1": "不能快进到 $sha1",
    "Cannot move HEAD to $first_parent": "不能移动 HEAD 到 $first_parent",
    "Refusing to squash a merge: $sha1": "拒绝压缩一个合并：$sha1",
    "Error redoing merge $sha1": "无法重做合并 $sha1",
    "Could not pick $sha1": "不能拣选 $sha1",
    "This is the commit message #${n}:": "这是提交说明 #${n}：",
    "The commit message #${n} will be skipped:": "提交说明 #${n} 将被跳过：",
    "This is a combination of $count commit._plural": "这是一个 $count 个提交的组合。",
    "This is a combination of $count commit.": "这是一个 $count 个提交的组合。",
    "Cannot write $fixup_msg": "不能写入 $fixup_msg",
    "This is a combination of 2 commits.": "这是一个 2 个提交的组合。",
    "Could not apply $sha1... $rest": "不能应用 $sha1... $rest",
    "Could not amend commit after successfully picking $sha1... $rest\nThis is most likely due to an empty commit message, or the pre-commit hook\nfailed. If the pre-commit hook failed, you may need to resolve the issue before\nyou are able to reword the commit.": "不能在成功拣选 $sha1... $rest 之后修补提交\n这通常是因为空的提交说明，或者 pre-commit 钩子执行失败。如果是 pre-commit\n钩子执行失败，你可能需要在重写提交说明前解决这个问题。",
    "Stopped at $sha1_abbrev... $rest": "停止在 $sha1_abbrev... $rest",
    "Cannot '$squash_style' without a previous commit": "没有父提交的情况下不能 '$squash_style'",
    "Executing: $rest": "执行：$rest",
    "Execution failed: $rest": "执行失败：$rest",
    "and made changes to the index and/or the working tree": "并且修改索引和/或工作区",
    "You can fix the problem, and then run\n\n\tgit rebase --continue": "您可以解决这个问题，然后运行\n\n\tgit rebase --continue",
    "Execution succeeded: $rest\nbut left changes to the index and/or the working tree\nCommit or stash your changes, and then run\n\n\tgit rebase --continue": "执行成功：$rest\n但是在索引和/或工作区中存在变更。提交或暂存修改，然后运行\n\n\tgit rebase --continue",
    "Unknown command: $command $sha1 $rest": "未知命令：$command $sha1 $rest",
    "Please fix this using 'git rebase --edit-todo'.": "要修改请使用命令 'git rebase --edit-todo'。",
    "Successfully rebased and updated $head_name.": "成功变基并更新 $head_name。",
    "Could not skip unnecessary pick commands": "不能跳过不必要的拣选命令",
    "Warning: the SHA-1 is missing or isn't a commit in the following line:\n - $line": "警告：缺失 SHA-1 或者在下面一行中不是一个提交：\n - $line",
    "Warning: the command isn't recognized in the following line:\n - $line": "警告：下面一行中的命令未能被识别：\n - $line",
    "could not detach HEAD": "不能检出为分离头指针",
    "Warning: some commits may have been dropped accidentally.\nDropped commits (newer to older):": "警告：一些提交可能被意外丢弃。丢弃的提交（从新到旧）：",
    "To avoid this message, use \"drop\" to explicitly remove a commit.\n\nUse 'git config rebase.missingCommitsCheck' to change the level of warnings.\nThe possible behaviours are: ignore, warn, error.": "为避免这条信息，使用 \"drop\" 指令显式地删除一个提交。\n\n使用 'git config rebase.missingCommitsCheck' 来修改警告级别。\n可选值有：ignore、warn、error。",
    "Unrecognized setting $check_level for option rebase.missingCommitsCheck. Ignoring.": "选项 rebase.missingCommitsCheck 的值 $check_level 无法被识别。已忽略。",
    "You can fix this with 'git rebase --edit-todo' and then run 'git rebase --continue'.": "您可以用 'git rebase --edit-todo' 修正问题然后执行 'git rebase --continue'。",
    "Or you can abort the rebase with 'git rebase --abort'.": "或者您可以使用 'git rebase --abort' 命令终止变基操作。",
    "Could not remove CHERRY_PICK_HEAD": "不能删除 CHERRY_PICK_HEAD",
    "You have staged changes in your working tree.\nIf these changes are meant to be\nsquashed into the previous commit, run:\n\n  git commit --amend $gpg_sign_opt_quoted\n\nIf they are meant to go into a new commit, run:\n\n  git commit $gpg_sign_opt_quoted\n\nIn both cases, once you're done, continue with:\n\n  git rebase --continue\n": "您已暂存了工作区的修改。如果这些修改要压缩到前一个提交，执行：\n\n  git commit --amend $gpg_sign_opt_quoted\n\n如果这些变更要形成一个新提交，执行：\n\n  git commit $gpg_sign_opt_quoted\n\n无论哪种情况，当您完成提交，继续执行：\n\n  git rebase --continue\n",
    "Error trying to find the author identity to amend commit": "在修补提交中查找作者信息时遇到错误",
    "You have uncommitted changes in your working tree. Please commit them\nfirst and then run 'git rebase --continue' again.": "您的工作区中有未提交的变更。请先提交然后再次运行 'git rebase --continue'。",
    "Could not commit staged changes.": "不能提交暂存的修改。",
    "\nYou are editing the todo file of an ongoing interactive rebase.\nTo continue rebase after editing, run:\n    git rebase --continue\n\n": "\n您正在修改运行中的交互式变基的 todo 文件。若要在编辑结束后继续变基，\n请执行：\n    git rebase --continue\n\n",
    "Could not execute editor": "无法运行编辑器",
    "Could not checkout $switch_to": "不能检出 $switch_to",
    "No HEAD?": "没有 HEAD？",
    "Could not create temporary $state_dir": "不能创建临时 $state_dir",
    "Could not mark as interactive": "不能标记为交互式",
    "Could not init rewritten commits": "不能对重写提交进行初始化",
    "Rebase $shortrevisions onto $shortonto ($todocount command)_plural": "变基 $shortrevisions 到 $shortonto（$todocount 个提交）",
    "Rebase $shortrevisions onto $shortonto ($todocount command)": "变基 $shortrevisions 到 $shortonto（$todocount 个提交）",
    "\nHowever, if you remove everything, the rebase will be aborted.\n\n": "\n然而，如果您删除全部内容，变基操作将会终止。\n\n",
    "Note that empty commits are commented out": "注意空提交已被注释掉",
    "usage: $dashless $USAGE": "用法：$dashless $USAGE",
    "Cannot chdir to $cdup, the toplevel of the working tree": "不能切换目录到 $cdup，工作区的顶级目录",
    "fatal: $program_name cannot be used without a working tree.": "严重错误：$program_name 不能在没有工作区的情况下使用",
    "Cannot rebase: You have unstaged changes.": "不能变基：您有未暂存的变更。",
    "Cannot rewrite branches: You have unstaged changes.": "不能重写分支：您有未暂存的变更。",
    "Cannot pull with rebase: You have unstaged changes.": "无法通过变基方式拉取：您有未暂存的变更。",
    "Cannot $action: You have unstaged changes.": "不能 $action：您有未暂存的变更。",
    "Cannot rebase: Your index contains uncommitted changes.": "不能变基：您的索引中包含未提交的变更。",
    "Cannot pull with rebase: Your index contains uncommitted changes.": "无法通过变基方式拉取：您的索引中包含未提交的变更。",
    "Cannot $action: Your index contains uncommitted changes.": "不能 $action：您的索引中包含未提交的变更。",
    "Additionally, your index contains uncommitted changes.": "而且您的索引中包含未提交的变更。",
    "You need to run this command from the toplevel of the working tree.": "您需要在工作区的顶级目录中运行这个命令。",
    "Unable to determine absolute path of git directory": "不能确定 git 目录的绝对路径",
    "%12s %12s %s": "%12s %12s %s",
    "staged": "缓存",
    "unstaged": "未缓存",
    "binary": "二进制",
    "nothing": "无",
    "unchanged": "没有修改",
    "added %d path\n_plural": "增加了 %d 个路径\n",
    "added %d path\n": "增加了 %d 个路径\n",
    "updated %d path\n_plural": "更新了 %d 个路径\n",
    "updated %d path\n": "更新了 %d 个路径\n",
    "reverted %d path\n_plural": "还原了 %d 个路径\n",
    "reverted %d path\n": "还原了 %d 个路径\n",
    "touched %d path\n_plural": "触碰了 %d 个路径\n",
    "touched %d path\n": "触碰了 %d 个路径\n",
    "Update": "更新",
    "Revert": "还原",
    "note: %s is untracked now.\n": "说明：%s 现已成为未跟踪的。\n",
    "Add untracked": "添加未跟踪的",
    "No untracked files.\n": "没有未跟踪的文件。\n",
    "If the patch applies cleanly, the edited hunk will immediately be\nmarked for staging.": "如果补丁能干净地应用，编辑块将立即标记为暂存。",
    "If the patch applies cleanly, the edited hunk will immediately be\nmarked for stashing.": "如果补丁能干净地应用，编辑块将立即标记为保存进度。",
    "If the patch applies cleanly, the edited hunk will immediately be\nmarked for unstaging.": "如果补丁能干净地应用，编辑块将立即标记为未暂存。",
    "If the patch applies cleanly, the edited hunk will immediately be\nmarked for applying.": "如果补丁能干净地应用，编辑块将立即标记为应用。",
    "If the patch applies cleanly, the edited hunk will immediately be\nmarked for discarding": "如果补丁能干净地应用，编辑块将立即标记为丢弃",
    "If the patch applies cleanly, the edited hunk will immediately be\nmarked for discarding.": "如果补丁能干净地应用，编辑块将立即标记为丢弃。",
    "failed to open hunk edit file for writing: %s": "无法写入块编辑文件：%s",
    "Manual hunk edit mode -- see bottom for a quick guide.\n": "手动块编辑模式 -- 查看底部的快速指南。\n",
    "---\nTo remove '%s' lines, make them ' ' lines (context).\nTo remove '%s' lines, delete them.\nLines starting with %s will be removed.\n": "---\n要删除 '%s' 开始的行，使其成为 ' ' 开始的行（上下文）。\n要删除 '%s' 开始的行，删除它们。\n以 %s 开始的行将被删除。\n",
    "If it does not apply cleanly, you will be given an opportunity to\nedit again.  If all lines of the hunk are removed, then the edit is\naborted and the hunk is left unchanged.\n": "如果不能干净地应用，您将有机会重新编辑。如果该块的全部内容删除，则\n此次编辑被终止，该块不会被修改。\n",
    "failed to open hunk edit file for reading: %s": "无法读取块编辑文件：%s",
    "Your edited hunk does not apply. Edit again (saying \"no\" discards!) [y/n]? ": "您的编辑块不能被应用。重新编辑（选择 \"no\" 丢弃！） [y/n]? ",
    "y - stage this hunk\nn - do not stage this hunk\nq - quit; do not stage this hunk or any of the remaining ones\na - stage this hunk and all later hunks in the file\nd - do not stage this hunk or any of the later hunks in the file": "y - 暂存该块\nn - 不要暂存该块\nq - 退出。不暂存该块及后面的全部块\na - 暂存该块和本文件中后面的全部块\nd - 不暂存该块和本文件中后面的全部块",
    "y - stash this hunk\nn - do not stash this hunk\nq - quit; do not stash this hunk or any of the remaining ones\na - stash this hunk and all later hunks in the file\nd - do not stash this hunk or any of the later hunks in the file": "y - 贮藏该块\nn - 不要贮藏该块\nq - 退出。不贮藏该块及后面的全部块\na - 贮藏该块和本文件中后面的全部块\nd - 不贮藏该块和本文件中后面的全部块",
    "y - unstage this hunk\nn - do not unstage this hunk\nq - quit; do not unstage this hunk or any of the remaining ones\na - unstage this hunk and all later hunks in the file\nd - do not unstage this hunk or any of the later hunks in the file": "y - 不暂存该块\nn - 不要不暂存该块\nq - 退出。不要不暂存该块及后面的全部块\na - 不暂存该块和本文件中后面的全部块\nd - 不要不暂存该块和本文件中后面的全部块",
    "y - apply this hunk to index\nn - do not apply this hunk to index\nq - quit; do not apply this hunk or any of the remaining ones\na - apply this hunk and all later hunks in the file\nd - do not apply this hunk or any of the later hunks in the file": "y - 在索引中应用该块\nn - 不要在索引中应用该块\nq - 退出。不要应用该块及后面的全部块\na - 应用该块和本文件中后面的全部块\nd - 不要应用该块和本文件中后面的全部块",
    "y - discard this hunk from worktree\nn - do not discard this hunk from worktree\nq - quit; do not discard this hunk or any of the remaining ones\na - discard this hunk and all later hunks in the file\nd - do not discard this hunk or any of the later hunks in the file": "y - 在工作区中丢弃该块\nn - 不要在工作区中丢弃该块\nq - 退出。不要丢弃该块及后面的全部块\na - 丢弃该块和本文件中后面的全部块\nd - 不要丢弃该块和本文件中后面的全部块",
    "y - discard this hunk from index and worktree\nn - do not discard this hunk from index and worktree\nq - quit; do not discard this hunk or any of the remaining ones\na - discard this hunk and all later hunks in the file\nd - do not discard this hunk or any of the later hunks in the file": "y - 在索引和工作区中丢弃该块\nn - 不要在索引和工作区中丢弃该块\nq - 退出。不要丢弃该块及后面的全部块\na - 丢弃该块和本文件中后面的全部块\nd - 不要丢弃该块和本文件中后面的全部块",
    "y - apply this hunk to index and worktree\nn - do not apply this hunk to index and worktree\nq - quit; do not apply this hunk or any of the remaining ones\na - apply this hunk and all later hunks in the file\nd - do not apply this hunk or any of the later hunks in the file": "y - 在索引和工作区中应用该块\nn - 不要在索引和工作区中应用该块\nq - 退出。不要应用该块及后面的全部块\na - 应用该块和本文件中后面的全部块\nd - 不要应用该块和本文件中后面的全部块",
    "g - select a hunk to go to\n/ - search for a hunk matching the given regex\nj - leave this hunk undecided, see next undecided hunk\nJ - leave this hunk undecided, see next hunk\nk - leave this hunk undecided, see previous undecided hunk\nK - leave this hunk undecided, see previous hunk\ns - split the current hunk into smaller hunks\ne - manually edit the current hunk\n? - print help\n": "g - 选择跳转到一个块\n/ - 查找和给定正则表达式匹配的块\nj - 维持该块未决状态，查看下一个未决块\nJ - 维持该块未决状态，查看下一个块\nk - 维持该块未决状态，查看上一个未决块\nK - 维持该块未决状态，查看上一个块\ns - 拆分当前块为更小的块\ne - 手动编辑当前块\n? - 显示帮助\n",
    "The selected hunks do not apply to the index!\n": "选中的块不能应用到索引！\n",
    "Apply them to the worktree anyway? ": "无论如何都要应用到工作区么？",
    "Nothing was applied.\n": "未应用。\n",
    "ignoring unmerged: %s\n": "忽略未合入的：%s\n",
    "Only binary files changed.\n": "只有二进制文件被修改。\n",
    "No changes.\n": "没有修改。\n",
    "Patch update": "补丁更新",
    "Stage mode change [y,n,q,a,d,/%s,?]? ": "暂存状态修改 [y,n,q,a,d,/%s,?]? ",
    "Stage deletion [y,n,q,a,d,/%s,?]? ": "暂存状态删除 [y,n,q,a,d,/%s,?]? ",
    "Stage this hunk [y,n,q,a,d,/%s,?]? ": "暂存该块 [y,n,q,a,d,/%s,?]? ",
    "Stash mode change [y,n,q,a,d,/%s,?]? ": "贮藏状态修改 [y,n,q,a,d,/%s,?]? ",
    "Stash deletion [y,n,q,a,d,/%s,?]? ": "贮藏状态删除 [y,n,q,a,d,/%s,?]? ",
    "Stash this hunk [y,n,q,a,d,/%s,?]? ": "贮藏该块 [y,n,q,a,d,/%s,?]? ",
    "Unstage mode change [y,n,q,a,d,/%s,?]? ": "未暂存状态修改 [y,n,q,a,d,/%s,?]? ",
    "Unstage deletion [y,n,q,a,d,/%s,?]? ": "未暂存状态删除 [y,n,q,a,d,/%s,?]? ",
    "Unstage this hunk [y,n,q,a,d,/%s,?]? ": "不暂存该块 [y,n,q,a,d,/%s,?]? ",
    "Apply mode change to index [y,n,q,a,d,/%s,?]? ": "修改索引中的应用状态 [y,n,q,a,d,/%s,?]? ",
    "Apply deletion to index [y,n,q,a,d,/%s,?]? ": "从索引中删除应用状态 [y,n,q,a,d,/%s,?]? ",
    "Apply this hunk to index [y,n,q,a,d,/%s,?]? ": "将此块应用到索引 [y,n,q,a,d,/%s,?]? ",
    "Discard mode change from worktree [y,n,q,a,d,/%s,?]? ": "修改工作区中的丢弃状态 [y,n,q,a,d,/%s,?]? ",
    "Discard deletion from worktree [y,n,q,a,d,/%s,?]? ": "从工作区中删除丢弃状态 [y,n,q,a,d,/%s,?]? ",
    "Discard this hunk from worktree [y,n,q,a,d,/%s,?]? ": "从工作区中丢弃该块 [y,n,q,a,d,/%s,?]? ",
    "Discard mode change from index and worktree [y,n,q,a,d,/%s,?]? ": "修改索引和工作区中的丢弃状态 [y,n,q,a,d,/%s,?]? ",
    "Discard deletion from index and worktree [y,n,q,a,d,/%s,?]? ": "从索引和工作区中删除丢弃状态 [y,n,q,a,d,/%s,?]? ",
    "Discard this hunk from index and worktree [y,n,q,a,d,/%s,?]? ": "从索引和工作区中丢弃该块 [y,n,q,a,d,/%s,?]? ",
    "Apply mode change to index and worktree [y,n,q,a,d,/%s,?]? ": "修改索引和工作区中的应用状态 [y,n,q,a,d,/%s,?]? ",
    "Apply deletion to index and worktree [y,n,q,a,d,/%s,?]? ": "从索引和工作区中删除应用状态 [y,n,q,a,d,/%s,?]? ",
    "Apply this hunk to index and worktree [y,n,q,a,d,/%s,?]? ": "在索引和工作区中应用该块 [y,n,q,a,d,/%s,?]? ",
    "go to which hunk (<ret> to see more)? ": "跳转到哪个块（<回车> 查看更多）？ ",
    "go to which hunk? ": "跳转到哪个块？",
    "Invalid number: '%s'\n": "无效数字：'%s'\n",
    "Sorry, only %d hunk available.\n_plural": "对不起，只有 %d 个可用块。\n",
    "Sorry, only %d hunk available.\n": "对不起，只有 %d 个可用块。\n",
    "search for regex? ": "使用正则表达式搜索？",
    "Malformed search regexp %s: %s\n": "错误的正则表达式 %s：%s\n",
    "No hunk matches the given pattern\n": "没有和给定模式相匹配的快\n",
    "No previous hunk\n": "没有前一个块\n",
    "No next hunk\n": "没有下一个块\n",
    "Split into %d hunk.\n_plural": "拆分为 %d 块。\n",
    "Split into %d hunk.\n": "拆分为 %d 块。\n",
    "Review diff": "检视 diff",
    "status        - show paths with changes\nupdate        - add working tree state to the staged set of changes\nrevert        - revert staged set of changes back to the HEAD version\npatch         - pick hunks and update selectively\ndiff\t      - view diff between HEAD and index\nadd untracked - add contents of untracked files to the staged set of changes\n": "status        - 显示含变更的路径\nupdate        - 添加工作区状态至暂存列表\nrevert        - 还原修改的暂存集至 HEAD 版本\npatch         - 挑选块并且有选择地更新\ndiff          - 显示 HEAD 和索引间差异\nadd untracked - 添加未跟踪文件的内容至暂存列表\n",
    "missing --": "缺失 --",
    "unknown --patch mode: %s": "未知的 --patch 模式：%s",
    "invalid argument %s, expecting --": "无效的参数 %s，期望是 --",
    "local zone differs from GMT by a non-minute interval\n": "本地时间和 GMT 有不到一分钟间隔\n",
    "local time offset greater than or equal to 24 hours\n": "本地时间偏移量大于等于 24 小时\n",
    "the editor exited uncleanly, aborting everything": "编辑器非正常退出，终止所有操作",
    "'%s' contains an intermediate version of the email you were composing.\n": "'%s' 包含您正在编写的一个中间版本的邮件。\n",
    "'%s.final' contains the composed email.\n": "'%s.final' 包含编辑的邮件。\n",
    "--dump-aliases incompatible with other options\n": "--dump-aliases 和其它选项不兼容\n",
    "Cannot run git format-patch from outside a repository\n": "不能在仓库之外运行 git format-patch\n",
    "Unknown --suppress-cc field: '%s'\n": "未知的 --suppress-cc 字段：'%s'\n",
    "Unknown --confirm setting: '%s'\n": "未知的 --confirm 设置：'%s'\n",
    "warning: sendmail alias with quotes is not supported: %s\n": "警告：不支持带引号的 sendmail 别名：%s\n",
    "warning: `:include:` not supported: %s\n": "警告：不支持 `:include:`：%s\n",
    "warning: `/file` or `|pipe` redirection not supported: %s\n": "警告：不支持 `/file` 或 `|pipe` 重定向：%s\n",
    "warning: sendmail line is not recognized: %s\n": "警告：不能识别的 sendmail 行：%s\n",
    "File '%s' exists but it could also be the range of commits\nto produce patches for.  Please disambiguate by...\n\n    * Saying \"./%s\" if you mean a file; or\n    * Giving --format-patch option if you mean a range.\n": "存在文件 '%s' 但是它也可能是一个用于产生补丁列表的提交范围。请用如下方法消除歧义：\n\n    * 如果含义为一个文件，使用 \"./%s\"，或者\n    * 如果含义为一个范围，使用 --format-patch 选项。\n",
    "Failed to opendir %s: %s": "无法打开目录 %s: %s",
    "fatal: %s: %s\nwarning: no patches were sent\n": "严重：%s：%s\n警告：补丁未能发送\n",
    "\nNo patch files specified!\n\n": "\n未指定补丁文件！\n\n",
    "No subject line in %s?": "在 %s 中没有标题行？",
    "Failed to open for writing %s: %s": "无法写入 %s: %s",
    "Lines beginning in \"GIT:\" will be removed.\nConsider including an overall diffstat or table of contents\nfor the patch you are writing.\n\nClear the body content if you don't wish to send a summary.\n": "以 \"GIT:\" 开头的行将被删除。\n考虑包含一个整体的 diffstat 或者您正在写的补丁的目录。\n\n如果您不想发送摘要，清除内容。\n",
    "Failed to open %s.final: %s": "无法打开 %s.final: %s",
    "Failed to open %s: %s": "无法打开 %s: %s",
    "To/Cc/Bcc fields are not interpreted yet, they have been ignored\n": "To/Cc/Bcc 字段不解析，它们被忽略\n",
    "Summary email is empty, skipping it\n": "摘要邮件为空，跳过\n",
    "Are you sure you want to use <%s> [y/N]? ": "您确认要使用 <%s> [y/N]？",
    "The following files are 8bit, but do not declare a Content-Transfer-Encoding.\n": "如下文件含 8bit 内容，但没有声明一个 Content-Transfer-Encoding。\n",
    "Which 8bit encoding should I declare [UTF-8]? ": "要声明 8bit 为什么样的编码格式 [UTF-8]？",
    "Refusing to send because the patch\n\t%s\nhas the template subject '*** SUBJECT HERE ***'. Pass --force if you really want to send.\n": "拒绝发送，因为补丁\n\t%s\n包含模版标题 '*** SUBJECT HERE ***'。如果确实想要发送，使用参数 --force。\n",
    "To whom should the emails be sent (if anyone)?": "邮件将要发送给谁？",
    "fatal: alias '%s' expands to itself\n": "严重：别名 '%s' 扩展为它自己\n",
    "Message-ID to be used as In-Reply-To for the first email (if any)? ": "Message-ID 被用作第一封邮件的 In-Reply-To ？",
    "error: unable to extract a valid address from: %s\n": "错误：不能从 %s 中提取一个有效的邮件地址\n",
    "What to do with this address? ([q]uit|[d]rop|[e]dit): ": "如何处理这个地址？([q]uit|[d]rop|[e]dit)：",
    "CA path \"%s\" does not exist": "CA 路径 \"%s\" 不存在",
    "    The Cc list above has been expanded by additional\n    addresses found in the patch commit message. By default\n    send-email prompts before sending whenever this occurs.\n    This behavior is controlled by the sendemail.confirm\n    configuration setting.\n\n    For additional information, run 'git send-email --help'.\n    To retain the current behavior, but squelch this message,\n    run 'git config --global sendemail.confirm auto'.\n\n": "    以上的抄送列表（Cc）已经用补丁提交信息中发现的地址进行\n    了扩展。缺省 send-email 会给出提示。这个行为可以通过\n    sendemail.confirm 配置设置。\n\n    更多信息，执行 'git send-email --help'。\n    要保持当前行为，但不显示此信息，运行 'git config --global\n    sendemail.confirm auto'。\n\n",
    "Send this email? ([y]es|[n]o|[q]uit|[a]ll): ": "发送邮件？([y]es|[n]o|[q]uit|[a]ll)：",
    "Send this email reply required": "发送要求的邮件回复",
    "The required SMTP server is not properly defined.": "要求的 SMTP 服务器未被正确定义。",
    "Server does not support STARTTLS! %s": "服务器不支持 STARTTLS！%s",
    "Unable to initialize SMTP properly. Check config and use --smtp-debug.": "无法正确地初始化 SMTP。检查配置并使用 --smtp-debug。",
    "Failed to send %s\n": "无法发送 %s\n",
    "Dry-Sent %s\n": "演习发送 %s\n",
    "Sent %s\n": "正发送 %s\n",
    "Dry-OK. Log says:\n": "演习成功。日志说：\n",
    "OK. Log says:\n": "OK。日志说：\n",
    "Result: ": "结果：",
    "Result: OK\n": "结果：OK\n",
    "can't open file %s": "无法打开文件 %s",
    "(mbox) Adding cc: %s from line '%s'\n": "(mbox) 添加 cc：%s 自行 '%s'\n",
    "(mbox) Adding to: %s from line '%s'\n": "(mbox) 添加 to：%s 自行 '%s'\n",
    "(non-mbox) Adding cc: %s from line '%s'\n": "(non-mbox) 添加 cc：%s 自行 '%s'\n",
    "(body) Adding cc: %s from line '%s'\n": "(body) 添加 cc: %s 自行 '%s'\n",
    "(%s) Could not execute '%s'": "(%s) 不能执行 '%s'",
    "(%s) Adding %s: %s from: '%s'\n": "(%s) 添加 %s: %s 自：'%s'\n",
    "(%s) failed to close pipe to '%s'": "(%s) 无法关闭管道至 '%s'",
    "cannot send message as 7bit": "不能以 7bit 形式发送信息",
    "invalid transfer encoding": "无效的传送编码",
    "unable to open %s: %s\n": "不能打开 %s：%s\n",
    "%s: patch contains a line longer than 998 characters": "%s：补丁包含一个超过 998 字符的行",
    "Skipping %s with backup suffix '%s'.\n": "略过 %s 含备份后缀 '%s'。\n",
    "Do you really want to send %s? [y|N]: ": "您真的要发送 %s？[y|N]："
}
